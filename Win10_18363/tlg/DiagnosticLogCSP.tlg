ProviderNames:
	Microsoft.Windows.DeviceManagement.DiagnosticLogCSP
	TelemetryAssert
	TelemetryAssertDiagTrack



**** Events *****
CDiagnosticLogNode_GetChildNodeNames(
	UINT32 ChildNodeCount,
	HRESULT HResult
	);

CDiagnosticLogNode_CreateNodeInstance(
	UINT32 NodeId,
	HRESULT HResult
	);

CEtwLogCollectorsNode_DeleteChild(
	UINT32 NodeId,
	HRESULT HResult
	);

CEtwLogCollectorsNode_Add(
	UINT32 NodeId,
	HRESULT HResult
	);

CEtwLogCollectorsNode_Execute(
	UINT32 NodeId,
	HRESULT HResult
	);

CEtwLogCollectorsNode_SetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CEtwLogCollectorsNode_GetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CEtwLogCollectorsNode_GetChildNodeNames(
	UINT32 ChildNodeCount,
	HRESULT HResult
	);

CEtwLogCollectorsNode_CreateNodeInstance(
	UINT32 NodeId,
	HRESULT HResult
	);

CEventLogChannelsNode_DeleteChild(
	UINT32 NodeId,
	HRESULT HResult
	);

CEventLogChannelsNode_Add(
	UINT32 NodeId,
	HRESULT HResult
	);

CEventLogChannelsNode_Execute(
	UINT32 NodeId,
	HRESULT HResult
	);

CEventLogChannelsNode_SetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CEventLogChannelsNode_GetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CEventLogChannelsNode_GetChildNodeNames(
	UINT32 ChildNodeCount,
	HRESULT HResult
	);

CEventLogChannelsNode_CreateNodeInstance(
	UINT32 NodeId,
	HRESULT HResult
	);

CDeviceStateNode_Execute(
	UINT32 NodeId,
	HRESULT HResult
	);

CDeviceStateNode_CaptureStateData(
	UNICODESTRING LogFilePath,
	HRESULT HResult
	);

CDeviceStateNode_ClearStateData(
	HRESULT HResult
	);

CDeviceStateNode_CreateNodeInstance(
	UINT32 NodeId,
	HRESULT HResult
	);

CFileDownloadDMChannelNode_SetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CFileDownloadDMChannelNode_GetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CFileDownloadDMChannelNode_GetChildNodeNames(
	UINT32 ChildNodeCount,
	HRESULT HResult
	);

CFileDownloadDMChannelNode_CreateNodeInstance(
	UINT32 NodeId,
	HRESULT HResult
	);

CArchiveDefinitionNode_Execute(
	UINT32 NodeId,
	HRESULT HResult
	);

CArchiveDefinitionNode::SetValue(
	UNICODESTRING varValue,
	HRESULT HResult
	);

CArchiveDefinitionNode_GeValue(
	HRESULT HResult
	);

CArchiveDefinitionNode::SetProperty(
	GUID guid,
	HRESULT HResult
	);

CArchiveDefinitionNode_CreateNodeInstance(
	HRESULT HResult
	);

CArchiveDefinitionNode_Add(
	HRESULT HResult
	);

CArchiveDefinitionNode_Clear(
	VOID
	);

CArchiveDefinitionNode_CreateNodeInstance(
	UINT32 NodeId,
	HRESULT HResult
	);

CPolicyChannelNode_PoliciesKeyExist(
	HRESULT HResult
	);

CPolicyChannelNode_PolicyChannelExist(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CPolicyChannelNode_ValueExist(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CPolicyChannelNode_DeleteChild(
	UINT32 NodeId,
	HRESULT HResult
	);

CPolicyChannelNode_Add(
	UINT32 NodeId,
	HRESULT HResult
	);

CPolicyChannelNode_SetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CPolicyChannelNode_GetValue(
	UINT32 NodeId,
	HRESULT HResult
	);

CPolicyChannelNode_GetChildNodeNames(
	UINT32 ChildNodeCount,
	HRESULT HResult
	);

CPolicyChannelNode_CreateNodeInstance(
	UINT32 NodeId,
	HRESULT HResult
	);

CEtwLogCollector_UpdateProviderProperties(
	UNICODESTRING ProviderGuid,
	INT32 ProviderStateChanged,
	HRESULT HResult
	);

CEtwLogCollector_UpdateProviderState(
	UNICODESTRING ProviderGuid,
	HRESULT HResult
	);

CEtwLogCollector_GetTraceLevel(
	INT32 TraceLevel,
	HRESULT HResult
	);

CEtwLogCollector_GetKeywords(
	UINT64 Keywords,
	HRESULT HResult
	);

CEtwLogCollector_GetLogFileSizeLimit(
	INT32 LogFileSizeLimit,
	HRESULT HResult
	);

CEtwLogCollector_GetTraceLogFileMode(
	INT32 TraceLogFileMode,
	HRESULT HResult
	);

CEtwLogCollector_GetTraceStatus(
	UNICODESTRING CollectorTraceSessionName,
	INT32 TraceStatus,
	HRESULT HResult
	);

CEtwLogCollector_SetTraceLevel(
	INT32 TraceLevel,
	HRESULT HResult
	);

CEtwLogCollector_SetKeywords(
	UINT64 Keywords,
	HRESULT HResult
	);

CEtwLogCollector_SetLogFileSizeLimit(
	INT32 LogFileSizeLimit,
	HRESULT HResult
	);

CEtwLogCollector_SetTraceLogFileMode(
	INT32 TraceLogFileMode,
	HRESULT HResult
	);

CEtwLogCollector_Stop(
	UNICODESTRING CollectorSessionName,
	HRESULT HResult
	);

CEtwLogCollector_Start(
	UNICODESTRING CollectorName,
	UNICODESTRING CollectorSessionName,
	HRESULT HResult
	);

CEtwLogCollector_DisableProvider(
	UNICODESTRING ProviderGuid,
	HRESULT HResult
	);

CEtwLogCollector_EnableProvider(
	UNICODESTRING ProviderGuid,
	HRESULT HResult
	);

CEtwLogCollector_UnregisterProvider(
	UNICODESTRING ProviderGuid,
	HRESULT HResult
	);

CEtwLogCollector_RegisterProvider(
	UNICODESTRING ProviderGuid,
	HRESULT HResult
	);

CEtwLogCollector_Open(
	UNICODESTRING CollectorName,
	HRESULT HResult
	);

CEtwLogCollector_UnregisterCollector(
	UNICODESTRING CollectorName,
	HRESULT HResult
	);

CEtwLogCollector_RegisterCollector(
	UNICODESTRING CollectorName,
	HRESULT HResult
	);

CEventLogChannel_Switch(
	INT32 ChannelState,
	HRESULT HResult
	);

CEventLogChannel_ExportLog(
	UNICODESTRING LogFilePath,
	HRESULT HResult
	);

CEventLogChannel_GetFilter(
	HRESULT HResult
	);

CEventLogChannel_SetFilter(
	HRESULT HResult
	);

CEventLogChannel_Open(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CEventLogChannel_UnregisterChannel(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CEventLogChannel_RegisterChannel(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CLogFileMgr_Initialize(
	UNICODESTRING FileContext,
	INT32 LogFileType,
	HRESULT HResult
	);

CLogFileMgr_CreateLogFolder(
	UNICODESTRING LogFolderPath,
	HRESULT HResult
	);

CLogFileMgr_InitializeLogFolder(
	HRESULT HResult
	);

CFileDownload_DMChannel_OpenLogFile(
	UNICODESTRING LogFileFullPath,
	HRESULT HResult
	);

CFileDownload_DMChannel_GetBlockDataWithIndex(
	INT32 BlockIndex,
	HRESULT HResult
	);

CFileDownload_DMChannel_GetBlockCount(
	INT32 BlockCount,
	HRESULT HResult
	);

CFileDownload_DMChannel_GetBlockIndexToRead(
	UINT32 BlockIndexToRead,
	HRESULT HResult
	);

CFileDownload_DMChannel_GetBlockSizeKB(
	UINT32 BlockSize,
	HRESULT HResult
	);

CFileDownload_DMChannel_SetBlockIndexToRead(
	INT32 BlockIndexToRead,
	HRESULT HResult
	);

CFileDownload_DMChannel_SetBlockSizeKB(
	INT32 BlockSize,
	HRESULT HResult
	);

CFileDownload_DMChannel_GetFileContextRegKey(
	UNICODESTRING FileContextRegistryKeyPath,
	HRESULT HResult
	);

CFileDownload_DMChannel_Initialize(
	HRESULT HResult
	);

CFileDownload_DMChannel_Initialize(
	UNICODESTRING FileContext,
	HRESULT HResult
	);

CPolicyChannel_SetEnabled(
	HRESULT HResult
	);

CPolicyChannel_GetEnabled(
	HRESULT HResult
	);

CPolicyChannel_SetMaximumFileSize(
	HRESULT HResult
	);

CPolicyChannel_GetMaximumFileSize(
	HRESULT HResult
	);

CPolicyChannel_SetActionWhenFull(
	HRESULT HResult
	);

CPolicyChannel_GetActionWhenFull(
	HRESULT HResult
	);

CPolicyChannel_SetSDDL(
	HRESULT HResult
	);

CPolicyChannel_GetSDDL(
	HRESULT HResult
	);

CPolicyChannel_RegisterChannel(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CPolicyChannel_OpenPolicyChannel(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CPolicyChannel_DeletePolicyChannel(
	UNICODESTRING ChannelName,
	HRESULT HResult
	);

CEtwLogHelper_CreateDecodedEtlFile(
	UNICODESTRING LogFilePath,
	HRESULT HResult
	);

CEtwLogHelper_UpdateProviderInTraceSession(
	UNICODESTRING TraceSessionName,
	GUID ProviderGuid,
	HRESULT HResult
	);

CEtwLogHelper_StopTraceSession(
	UNICODESTRING TraceSessionName,
	HRESULT HResult
	);

CEtwLogHelper_StartTraceSession(
	UNICODESTRING TraceSessionName,
	HRESULT HResult
	);

CEtwLogHelper_GetTraceSessionStatus(
	UNICODESTRING TraceSessionName,
	INT32 TraceSessionStatus,
	HRESULT HResult
	);

CEtwLogHelper_IsProviderGuidValid(
	UNICODESTRING ProviderGuid,
	HRESULT HResult
	);

Assert(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

