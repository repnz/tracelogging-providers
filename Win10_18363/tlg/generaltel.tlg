ProviderNames:
	Microsoft.Windows.Inventory.General
	Microsoft.Windows.Inventory.General
	Microsoft.Windows.Inventory.General
	Microsoft.Windows.Inventory.General
	Microsoft.Windows.Inventory.Core
	Microsoft.Windows.Inventory.Core
	Microsoft.Windows.Inventory.Core
	Microsoft.Windows.Inventory.Core
	FveDetectTelemetry
	Microsoft.Windows.Compatibility.Asl
	Microsoft.Windows.Inventory.Indicators
	Microsoft.Windows.Inventory.Indicators
	Microsoft.Windows.Inventory.Indicators
	Microsoft.Windows.Inventory.Indicators



**** Events *****
InventoryMiscellaneousGWXTaskInfoStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousGWXTaskInfoAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING FolderName,
	INT64 TaskIndex,
	INT64 TaskCount,
	UNICODESTRING Name,
	UNICODESTRING State,
	BOOL32 Enabled,
	UNICODESTRING LastRuntime,
	UNICODESTRING NextRuntime,
	INT64 NumberOfMissedRuns,
	INT32 LastTaskResult
	);

InventoryMiscellaneousOfficeInsightsRemove(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeInsightsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING OfficeApplication,
	UNICODESTRING OfficeVersion,
	UNICODESTRING OfficeArchitecture,
	UINT32 Value
	);

InventoryMiscellaneousOfficeInsightsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeVBARuleViolationsRemove(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeVBARuleViolationsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT32 Count
	);

InventoryMiscellaneousOfficeVBARuleViolationsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeVBARemove(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeVBAAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT32 DuplicateVBA,
	UINT32 HasVBA,
	UINT32 Inaccessible,
	UINT32 Locked,
	UINT32 NoVBA,
	UINT32 Protected,
	UINT32 Total,
	UINT32 Design,
	UINT32 Design_x64,
	UINT32 Issues,
	UINT32 Issues_x64,
	UINT32 IssuesNone,
	UINT32 IssuesNone_x64,
	UINT32 RemSignificant,
	UINT32 RemSignificant_x64,
	UINT32 RemLimited,
	UINT32 RemLimited_x64,
	UINT32 Score,
	UINT32 Score_x64,
	UINT32 Validation,
	UINT32 Validation_x64
	);

InventoryMiscellaneousOfficeVBAStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeAddInUsageRemove(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeAddInUsageAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT32 CrashEpoch,
	UINT32 LoadEpoch,
	UINT32 UsageEpoch
	);

InventoryMiscellaneousOfficeAddInUsageStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeAddInRemove(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeAddInAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING AddInId,
	UNICODESTRING FriendlyName,
	UNICODESTRING Description,
	UNICODESTRING FullPath,
	UNICODESTRING OfficeApplication,
	UNICODESTRING OfficeVersion,
	UNICODESTRING AddinCLSID,
	UNICODESTRING BinFileTimestamp,
	UNICODESTRING BinFileVersion,
	UNICODESTRING FileId,
	UNICODESTRING Provider,
	UNICODESTRING OfficeArchitecture,
	UNICODESTRING AddinType,
	UNICODESTRING ProgramId,
	UNICODESTRING ProductName,
	UNICODESTRING ProductCompany,
	UNICODESTRING ProductVersion,
	UINT32 LoadBehavior,
	UINT32 FileSize,
	BOOL32 OutlookCrashingAddin
	);

InventoryMiscellaneousOfficeAddInStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeProductsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING OC2rSkus,
	UNICODESTRING OC2rApps,
	UNICODESTRING OProductCodes,
	UNICODESTRING OMsiApps
	);

InventoryMiscellaneousOfficeProductsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeSettingsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING BrowserFlags,
	UNICODESTRING ExchangeProviderFlags,
	UINT32 SharedComputerLicensing
	);

InventoryMiscellaneousOfficeSettingsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeIESettingsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT16 OIeFeatureAddon,
	UINT16 OIePasswordDisable,
	UINT16 OIeMachineLockdown,
	UINT16 OIeMimeHandling,
	UINT16 OIeMimeSniffing,
	UINT16 OIeObjectCaching,
	UINT16 OIeNoAxInstall,
	UINT16 OIeNoDownload,
	UINT16 OIeSafeBind,
	UINT16 OIeSecurityBand,
	UINT16 OIeUncSaveCheck,
	UINT16 OIeValidateUrl,
	UINT16 OIeWebOcPopup,
	UINT16 OIeWinRestrict,
	UINT16 OIeZoneElevate
	);

InventoryMiscellaneousOfficeIESettingsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousOfficeIdentifiersAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING OVersion,
	UNICODESTRING OPlatform,
	UNICODESTRING OAudienceData,
	UNICODESTRING OAudienceId,
	UNICODESTRING OTenantId,
	UNICODESTRING OMID,
	UNICODESTRING OWowMID
	);

InventoryMiscellaneousOfficeIdentifiersStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousMbrDiskStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousGptDiskStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousMbrDiskAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING InstancePath,
	COUNTEDSTRING VendorId,
	COUNTEDSTRING ProductId,
	COUNTEDSTRING ProductRevision,
	COUNTEDSTRING SerialNumber,
	BOOL32 MediaRemovable,
	BOOL32 MediaHotplug,
	BOOL32 DeviceHotplug,
	UINT32 BytesPerPhysicalSector,
	UINT32 BytesPerLogicalSector,
	UINT64 DiskLength,
	UINT32 PartitionStyle,
	BINARY Sector0,
	HEXINT32 MbrId,
	HEX MbrEntry0Active,
	HEX MbrEntry0Type,
	HEX MbrEntry1Active,
	HEX MbrEntry1Type,
	HEX MbrEntry2Active,
	HEX MbrEntry2Type,
	HEX MbrEntry3Active,
	HEX MbrEntry3Type,
	HEX MbrSignature,
	HEX VbrJump,
	COUNTEDANSISTRING VbrOem,
	BINARY Vbr0,
	BINARY Vbr1,
	BINARY Vbr2,
	BINARY Vbr3
	);

InventoryMiscellaneousGptDiskAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING InstancePath,
	COUNTEDSTRING VendorId,
	COUNTEDSTRING ProductId,
	COUNTEDSTRING ProductRevision,
	COUNTEDSTRING SerialNumber,
	BOOL32 MediaRemovable,
	BOOL32 MediaHotplug,
	BOOL32 DeviceHotplug,
	UINT32 BytesPerPhysicalSector,
	UINT32 BytesPerLogicalSector,
	UINT64 DiskLength,
	UINT32 PartitionStyle,
	BINARY Sector0,
	UINT32 HeaderSize,
	UINT64 PrimaryLba,
	UINT64 AlternateLba,
	UINT64 FirstLba,
	UINT64 LastLba,
	GUID DiskId,
	UINT64 EntriesLba,
	UINT32 NumberOfEntries,
	UINT32 EntrySize
	);

InventoryMiscellaneousWAMAccountsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT32 StandardUserHash,
	UNICODESTRING UserType,
	UNICODESTRING AccountID,
	UNICODESTRING DisplayName
	);

InventoryMiscellaneousWAMAccountsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousPhysicalDiskInfoAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING DeviceId,
	UNICODESTRING SerialNumber,
	INT32 Index,
	UNICODESTRING Size,
	INT32 NumPartitions,
	INT32 BytesPerSector,
	UNICODESTRING MediaType,
	INT32 BusType
	);

InventoryMiscellaneousDiskPartitionInfoAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING DeviceId,
	UNICODESTRING Size,
	BOOL32 IsBootPartition,
	BOOL32 IsPrimaryPartition,
	UNICODESTRING StartingOffset,
	UNICODESTRING DriveLetters
	);

InventoryMiscellaneousVolumeInfoAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 IsBootVolume,
	BOOL32 IsSystemVolume,
	UNICODESTRING DriveLetter,
	UNICODESTRING DriveType,
	UNICODESTRING Capacity,
	UNICODESTRING FreeSpace,
	UNICODESTRING FileSystem,
	UNICODESTRING EncryptionState
	);

InventoryMiscellaneousDiskInfoAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	INT64 PageFileSize,
	INT64 HiberFileSize,
	UNICODESTRING Size,
	UNICODESTRING FreeSpace,
	INT32 DriveType
	);

InventoryMiscellaneousMonitorDataAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	INT32 HorizontalResolution,
	INT32 VerticalResolution
	);

InventoryMiscellaneousServicesAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING State,
	UNICODESTRING StartMode,
	UNICODESTRING PathName,
	UNICODESTRING DisplayName
	);

InventoryMiscellaneousServerFeatureInformationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING Name,
	INT32 ParentID
	);

InventoryMiscellaneousServerFeatureInformationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousFirewallInformationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING DisplayName,
	INT32 ProductState
	);

InventoryMiscellaneousFirewallInformationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousAntispywareInformationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING DisplayName,
	INT32 ProductState
	);

InventoryMiscellaneousAntispywareInformationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousAntivirusInformationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING DisplayName,
	INT32 ProductState
	);

InventoryMiscellaneousAntivirusInformationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousProcessorInformationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	INT32 NumberOfCores,
	INT32 NumberOfLogicalProcessors,
	INT32 L3CacheSize,
	INT32 L3CacheSpeed,
	INT32 L2CacheSize,
	INT32 L2CacheSpeed,
	INT32 MaxClockSpeed
	);

InventoryMiscellaneousProcessorInformationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousInstalledHotfixesAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING InstalledOn
	);

InventoryMiscellaneousInstalledHotfixesStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousCITModuleLoadedStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousCITModuleLoadedAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING DataNamespace,
	UNICODESTRING ModulePath,
	UNICODESTRING ModuleBinFileVersion,
	UNICODESTRING ProgramID,
	UNICODESTRING FileID,
	UNICODESTRING BinaryPath,
	UINT64 TimeLoaded
	);

InventoryMiscellaneousCITAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING RecordId,
	UINT16 EntryId,
	UINT16 EntryIdMax,
	UNICODESTRING ProgramId,
	UNICODESTRING FileId,
	UNICODESTRING ExtraInfo,
	FILETIME StartTimeLocal,
	FILETIME CurrentTimeLocal,
	FILETIME PeriodStartLocal,
	UINT32 AggregationPeriodInS,
	UINT32 BitPeriodInS,
	UINT8 MajorVersion,
	UINT8 MinorVersion,
	UINT16 SingleBitmapSize,
	BINARY Stats,
	BINARY SpanStats,
	BINARY Bitmaps
	);

InventoryMiscellaneousSetupPendingFirmwareUpdateWithPowerAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 Pending
	);

InventoryMiscellaneousSetupPendingFirmwareUpdateWithPowerStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousSetupBootedFromAuditModeAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 hostIsBootedFromAuditMode
	);

InventoryMiscellaneousSetupBootedFromAuditModeStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousSetupBootedFromVHDAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 BootedFromVHD
	);

InventoryMiscellaneousSetupBootedFromVHDStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousMonitorDataStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousPhysicalDiskInfoStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousDiskPartitionInfoStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousVolumeInfoStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousDiskInfoStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousServicesStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousUserStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousSecureBootDataAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING SecureBootEnabled,
	UNICODESTRING Capability,
	INT32 UnknownStatus
	);

InventoryMiscellaneousSecureBootDataStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

GeneralTelemetryElapsedTime(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING ElapsedTimeString
	);

InventoryMiscellaneousInstalledDotNetFrameworkStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousInstalledDotNetFrameworkAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING NDPKeyRelPath,
	UNICODESTRING Version,
	UNICODESTRING NDPChildKeyName,
	BOOL32 IsClient,
	BOOL32 IsFull,
	BOOL32 FoundRelease,
	UINT32 Release,
	BOOL32 FoundSP,
	UINT32 SP,
	BOOL32 FoundInstall,
	UINT32 Install,
	BOOL32 FoundTargetVersion,
	UNICODESTRING TargetVersion,
	BOOL32 FoundIncrement,
	UNICODESTRING Increment,
	BOOL32 FoundCBS,
	UINT32 CBS,
	BOOL32 FoundOCM,
	UINT32 OCM,
	BOOL32 FoundServicing,
	UINT32 Servicing
	);

InventoryMiscellaneousCustomSdbRegistrationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING RegDbId,
	UNICODESTRING RegDbPath,
	UINT64 RegDbTimeStamp,
	UNICODESTRING RegDbDescription,
	UINT32 RegDbType,
	UINT32 RegDbValidationFlags,
	UINT32 RegDbFileCompareFlags,
	BOOL32 SdbReadable,
	UINT32 SdbFileSize,
	UNICODESTRING SdbVersion,
	UNICODESTRING SdbDbId,
	UNICODESTRING SdbDescription,
	UINT32 SdbValidationFlags,
	BOOL32 SdbContainsLibrary,
	BOOL32 SdbContainsPatchDef,
	BOOL32 SdbContainsNonSysDllRef,
	BOOL32 SdbContainsFixOfInterest,
	BOOL32 SdbFoundRedirectExe,
	UNICODESTRING SdbFileId
	);

InventoryMiscellaneousCustomSdbRegistrationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousDiscCorruptionAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	INT32 DiskCorruptionEvent7,
	INT32 DiskCorruptionEvent41,
	INT32 DiskCorruptionEvent55
	);

InventoryMiscellaneousDiscCorruptionStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousPreviousUpgradesAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING BuildLab,
	UNICODESTRING BuildLabEx,
	UNICODESTRING CSDBuildNumber,
	UNICODESTRING CSDVersion,
	UNICODESTRING CurrentBuild,
	UNICODESTRING CurrentBuildNumber,
	UNICODESTRING CurrentType,
	UNICODESTRING CurrentVersion,
	UNICODESTRING EditionID,
	UNICODESTRING InstallationType,
	UNICODESTRING InstallDate,
	UNICODESTRING MigrationScope,
	UNICODESTRING PathName,
	UNICODESTRING ProductId,
	UNICODESTRING ProductName,
	UNICODESTRING SoftwareType,
	UNICODESTRING SystemRoot
	);

InventoryMiscellaneousPreviousUpgradesStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousCBSStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousCBSAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING PackageIdentifier,
	UNICODESTRING IntendedState,
	UNICODESTRING ErrorCode
	);

InventoryMiscellaneousUserAccountTypeEnumerationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT32 StandardUserHash,
	UNICODESTRING AccountType,
	UNICODESTRING Flags,
	UNICODESTRING Privileges,
	UNICODESTRING IsBuiltIn
	);

InventoryMiscellaneousUserAccountTypeEnumerationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousMicrophoneDataAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING MicrophonePresent,
	INT32 MicrophoneState
	);

InventoryMiscellaneousMicrophoneDataStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousChromeRlzAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING Rlz
	);

InventoryMiscellaneousChromeRlzAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING Rlz,
	UINT32 UserHash,
	UINT32 StandardUserHash
	);

InventoryMiscellaneousChromeRlzStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousSdevDataAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT32 Length,
	ANSISTRING OEMID,
	UINT32 OEMRevision,
	UINT8 Revision
	);

InventoryMiscellaneousSdevDataStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousMicrocodeInformationAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING Identifier,
	UINT64 PreviousUpdateRevision,
	UINT64 UpdateRevision,
	UINT32 UpdateStatus,
	BOOL32 RevisionMatches
	);

InventoryMiscellaneousMicrocodeInformationStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousCrashDumpAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT32 Count,
	FILETIME LastCreatedDate,
	UNICODESTRING Data0,
	UNICODESTRING Data1,
	UNICODESTRING Data2,
	UNICODESTRING Data3,
	UNICODESTRING Data4,
	UNICODESTRING Data5,
	UNICODESTRING Data6,
	UNICODESTRING Data7,
	UNICODESTRING Data8,
	UNICODESTRING Data9,
	UNICODESTRING Data10,
	UNICODESTRING Data11,
	UNICODESTRING Data12,
	UNICODESTRING Data13,
	UNICODESTRING Data14,
	UNICODESTRING Data17,
	UNICODESTRING Data18,
	UNICODESTRING Data19,
	UNICODESTRING Data20,
	UNICODESTRING Data21
	);

InventoryMiscellaneousCrashDumpStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousSupportedSleepStatesAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 S3Support,
	BOOL32 S4Support,
	BOOL32 FastS4Support
	);

InventoryMiscellaneousSupportedSleepStatesStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousPowerTrackerDataStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousPowerTrackerDataAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UINT64 AcMonitorOnDuration,
	UINT64 AcMonitorOffDuration,
	UINT64 DcMonitorOnDuration,
	UINT64 DcMonitorOffDuration,
	UINT32 DcMonitorOnEnergy,
	UINT32 DcMonitorOffEnergy
	);

InventoryMiscellaneousPerfTrackScenarioOccurrencesStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousAppliedCompatLayersStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousAppliedCompatLayersAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING File,
	UNICODESTRING CompatLayer,
	UNICODESTRING Source,
	UNICODESTRING FileId,
	UNICODESTRING ProgramId,
	UINT32 UserHash,
	UINT32 StandardUserHash
	);

InventoryMiscellaneousPerfTrackScenarioOccurrencesAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING PerfTrackScenarioId,
	UNICODESTRING DataPointName,
	UINT32 DataPointValue
	);

InventoryMiscellaneousStartupAppStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousStartupAppAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING Name,
	UNICODESTRING Value,
	UINT32 UserHash,
	UINT32 StandardUserHash
	);

InventoryMiscellaneousChromeAppAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING AppId,
	UNICODESTRING Version,
	BOOL32 OfflineEnabled,
	UINT32 ProfileHash,
	UINT32 StandardUserHash
	);

InventoryMiscellaneousChromeAppStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousWinSATMetricsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING MetricCategory,
	UNICODESTRING MetricSubcategory,
	UNICODESTRING MetricUnits,
	UNICODESTRING MetricScore,
	UNICODESTRING MetricDXVersion,
	UNICODESTRING MetricWidth,
	UNICODESTRING MetricHeight,
	UNICODESTRING MetricExpectedFrameCount,
	UNICODESTRING MetricKind,
	UNICODESTRING MetricIOSize,
	UNICODESTRING MetricFactor,
	UNICODESTRING MetricReason,
	UNICODESTRING MetricValue
	);

InventoryMiscellaneousWinSATMetricsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousRedirectedProfileStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousRedirectedProfileAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING DirectoryName,
	BOOL32 Redirected,
	BOOL32 ReparsePoint,
	UINT32 UserHash,
	UINT32 StandardUserHash
	);

InventoryMiscellaneousBrowserStartupSettingsStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousBrowserStartupSettingsAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING Browser,
	UNICODESTRING Value,
	UNICODESTRING SpecifiedPageUrls,
	INT64 StandardUserHash,
	INT64 Hash
	);

InventoryMiscellaneousWMDCLastSyncTimeAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 Exists,
	UNICODESTRING Raw,
	UNICODESTRING GMT
	);

InventoryMiscellaneousWMDCLastSyncTimeStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousCpuidAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 IsHypervisorPresent,
	BOOL32 IsVirtualizationSupported,
	UNICODESTRING IsSLATSupported,
	UNICODESTRING IsIommuSupported,
	UINT32 CpuFamily,
	UINT32 CpuModel,
	UINT32 CpuStepping,
	UINT32 CpuId1Eax,
	UINT32 CpuId1Ebx,
	UINT32 CpuId1Ecx,
	UINT32 CpuId1Edx,
	UINT32 CpuIdHv0Eax,
	UINT32 CpuIdHv0Ebx,
	UINT32 CpuIdHv0Ecx,
	UINT32 CpuIdHv0Edx,
	UINT32 CpuIdHv1Eax,
	UINT32 CpuIdHv1Ebx,
	UINT32 CpuIdHv1Ecx,
	UINT32 CpuIdHv1Edx,
	UINT32 CpuIdHv2Eax,
	UINT32 CpuIdHv2Ebx,
	UINT32 CpuIdHv2Ecx,
	UINT32 CpuIdHv2Edx,
	UINT32 CpuIdHv3Eax,
	UINT32 CpuIdHv3Ebx,
	UINT32 CpuIdHv3Ecx,
	UINT32 CpuIdHv3Edx,
	UINT32 CpuIdHv4Eax,
	UINT32 CpuIdHv4Ebx,
	UINT32 CpuIdHv4Ecx,
	UINT32 CpuIdHv4Edx,
	UINT32 CpuIdHv5Eax,
	UINT32 CpuIdHv5Ebx,
	UINT32 CpuIdHv5Ecx,
	UINT32 CpuIdHv5Edx,
	UINT32 CpuIdHv6Eax,
	UINT32 CpuIdHv6Ebx,
	UINT32 CpuIdHv6Ecx,
	UINT32 CpuIdHv6Edx,
	UINT32 CpuIdHv7Eax,
	UINT32 CpuIdHv7Ebx,
	UINT32 CpuIdHv7Ecx,
	UINT32 CpuIdHv7Edx,
	UINT32 CpuIdHv8Eax,
	UINT32 CpuIdHv8Ebx,
	UINT32 CpuIdHv8Ecx,
	UINT32 CpuIdHv8Edx
	);

InventoryMiscellaneousCpuidStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousWifiAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 WifiNicPresent,
	BOOL32 FATDriverPresent,
	BOOL32 NativeDriverPresent
	);

InventoryMiscellaneousWifiStartSync(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousUserAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	UNICODESTRING OriginalName,
	BOOL32 Exists,
	UNICODESTRING Value,
	UINT32 UserId,
	UINT32 StandardUserHash
	);

InventoryMiscellaneousAdd(
	ANSISTRING __TlgCV__,
	ANSISTRING __TlgCV__,
	UNICODESTRING InventoryVersion,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId,
	BOOL32 Exists,
	UNICODESTRING Value
	);

FveCheckSuspendBitLockerOnUpgrade(
	INT32 ShouldSuspendBitlocker,
	BOOLEAN IsSecureBootBound,
	BOOLEAN IsOsPreRS1,
	UINT32 AuthUsesFlags,
	INT32 hr
	);

FveRemoveTrustedWimData(
	INT32 hr
	);

FveAddTrustedWimData(
	INT32 hr
	);

TelemetryClient(
	UINT64 BinFileVersion,
	ANSISTRING ChannelName,
	ANSISTRING CorrelationVectors,
	ANSISTRING Types,
	ANSISTRING Names,
	ANSISTRING Counts,
	ANSISTRING Metrics,
	UNICODESTRING Messages,
	ANSISTRING ActivityResults
	);

Checksum(
	ANSISTRING __TlgCV__,
	UNICODESTRING PCFP,
	STRING ChecksumDictionary,
	COUNTEDSTRING Key,
	UNICODESTRING Value
	);

InventoryMiscellaneousUexIndicatorRemove(
	ANSISTRING __TlgCV__,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousUexIndicatorAdd(
	ANSISTRING __TlgCV__,
	UNICODESTRING IndicatorValue,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

InventoryMiscellaneousUexIndicatorStartSync(
	ANSISTRING __TlgCV__,
	PID PartB_Ms.Device.DeviceInventoryChange,
	INT32 action,
	UNICODESTRING objectType,
	UNICODESTRING objectInstanceId,
	UNICODESTRING syncId,
	UNICODESTRING inventoryId
	);

