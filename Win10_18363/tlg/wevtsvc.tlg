ProviderNames:
	EventLogActivityTracing
	EventLogEvents
	Microsoft.Windows.TlgAggregateInternal
	TelemetryAssert
	TelemetryAssertDiagTrack



**** Events *****
ChannelsAddedFromRegistery_Aggregate(
	NULL Count,
	GUID m_guid,
	UINT64 PartA_PrivTags
	);

_EvtRpcClose::<lambda_514c55b97145b2e7e50d8b155ad9c0bd>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcMessageRender::<lambda_24647a87707de4ab4812f87fc1285803>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetEventMetadataEnum::<lambda_abe997e840e23490037820319eb76e98>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRemoteSubscriptionWaitAsync(
	VOID
	);

_EvtRpcExportLog::<lambda_6bc8e2fc68ad6db6ab9d25754925b023>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRemoteSubscriptionNextAsync(
	VOID
	);

_EvtRpcClearLog::<lambda_dfbeb9c68f6f9de55ee8ec2af9c3dd8b>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcMessageRenderDefault::<lambda_0dc777a3390e9ecb28e3560db44a5778>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetPublisherList(
	VOID
	);

_EvtRpcGetNextEventMetadata(
	VOID
	);

_EvtRpcRemoteSubscriptionWaitAsync::<lambda_bb74482fa0748dddc5091e014a40a599>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRegisterControllableOperation(
	VOID
	);

_EvtRpcGetEventMetadataEnum(
	VOID
	);

_EvtRpcOpenLogHandle(
	VOID
	);

_EvtRpcGetPublisherListForChannel(
	VOID
	);

_EvtRpcRegisterControllableOperation::<lambda_caf17d23f2ccb92097e61092f939af7f>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetChannelConfig(
	VOID
	);

_EvtRpcRegisterLogQuery::<lambda_201d7362dbfcaa5907e2ef700894c736>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRemoteSubscriptionNext::<lambda_5375c3563267257749a2c2c9f4a4d51d>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRegisterLogQuery(
	VOID
	);

_EvtRpcGetPublisherMetadata::<lambda_4cc278fb811dffdd691810099160530c>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRegisterRemoteSubscription(
	VOID
	);

_EvtRpcGetPublisherMetadata(
	VOID
	);

_EvtRpcCancel::<lambda_e6714d4455798d296ea45fb5d39d5a70>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcPutChannelConfig::<lambda_95f4b92e0e6c9ab20fe5ef89068dcaa9>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetPublisherList::<lambda_7b044fe5601c40cce24fd8371d8657c1>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcClearLog(
	VOID
	);

_EvtRpcPutChannelConfig(
	VOID
	);

_EvtRpcQueryNext::<lambda_79446eeb0a0e4d1fe61c582f3f9864f8>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetClassicLogDisplayName(
	VOID
	);

_EvtRpcMessageRender(
	VOID
	);

_EvtRpcQuerySeek(
	VOID
	);

_EvtRpcRemoteSubscriptionNextAsync::<lambda_465df15cfd76d8b94d2117a84a7a36ed>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRetractConfig(
	VOID
	);

_EvtRpcGetLogFileInfo(
	VOID
	);

_EvtRpcCancel(
	VOID
	);

_EvtRpcGetLogFileInfo::<lambda_ec3e0d65493d426326f36370976c5d37>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetChannelConfig::<lambda_e7f2587895a6955918a930b594bc550a>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcExportLog(
	VOID
	);

_EvtRpcGetChannelList(
	VOID
	);

_EvtRpcLocalizeExportLog(
	VOID
	);

_EvtRpcAssertConfig(
	VOID
	);

_EvtRpcRetractConfig::<lambda_5bb1374d16571c7ce70600c860901b06>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetPublisherListForChannel::<lambda_aaf5a2e7de5f4433cbd1113e8fa6469e>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetPublisherResourceMetadata(
	VOID
	);

_EvtRpcGetClassicLogDisplayName::<lambda_fb3876fb36b709b954ebc9706f516aba>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcLocalizeExportLog::<lambda_35734cba9d7806b7df1c7de6569bbe28>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetPublisherResourceMetadata::<lambda_0c24bf164b259479eb3ad5903c761a4f>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcAssertConfig::<lambda_bbce272a01f7543a4c871a472d1e1b68>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcClose(
	VOID
	);

_EvtRpcGetNextEventMetadata::<lambda_bfe8fb9f865abf85cd53fe9d72bd98cf>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcRemoteSubscriptionNext(
	VOID
	);

ActivityStoppedAutomatically(
	VOID
	);

_EvtRpcQuerySeek::<lambda_44b9c23ea8c94311eb8b2fa3d7dc35a8>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcOpenLogHandle::<lambda_c912df89b1679cba76e21980f4e44f29>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcMessageRenderDefault(
	VOID
	);

_EvtRpcQueryNext(
	VOID
	);

_EvtRpcRegisterRemoteSubscription::<lambda_5dcc430296bee046c20ff3e641fbfa34>::operator ()(
	WIN32ERROR Return value
	);

_EvtRpcGetChannelList::<lambda_c8c4a168cb79425fcffc2b969a642509>::operator ()(
	WIN32ERROR Return value
	);

Stop load publisher metadata(
	GUID PublisherGuid,
	UNICODESTRING PublisherName,
	WIN32ERROR EventMetaDataCount
	);

Start load publisher metadata(
	GUID PublisherGuid,
	UNICODESTRING PublisherName
	);

Failed load publisher metadata(
	GUID PublisherGuid,
	UNICODESTRING PublisherName,
	WIN32ERROR ErrorCode
	);

ServiceDirectoryFallback(
	UINT64 PartA_PrivTags
	);

TlgAggregateSummary(
	GUID Provider,
	UINT64 NumFlushes,
	UINT64 MaxEntriesStored,
	UINT64 TotalEntriesFlushed,
	UINT32 MaxEntriesFlushed,
	UINT32 MinEntriesFlushed,
	UINT32 NumBucketLimitReached,
	UINT32 NumAllocationFailures,
	UINT32 NumLargeEventFailures
	);

Assert(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

AssertWithArgs(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	ANSISTRING originatingBinary,
	UINT32 bucketArgument1,
	UINT32 bucketArgument2,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

ElfrBackupELFA::<lambda_f72234df3d4598b2a8db4ae6f394aa4d>::operator ()(
	WIN32ERROR Return value
	);

ElfrReportEventA::<lambda_a0efadeb1e571559c39e7c6f93577b19>::operator ()(
	WIN32ERROR Return value
	);

ElfrRegisterEventSourceW::<lambda_69e0076b97c2d881cae4d969a1782ad0>::operator ()(
	WIN32ERROR Return value
	);

ElfrBackupELFW::<lambda_b715bc64bed943118361bb369f3d2b1a>::operator ()(
	WIN32ERROR Return value
	);

ElfrOpenELW(
	VOID
	);

ElfrReportEventExA::<lambda_00907944b87c1390a79b3019b6653d54>::operator ()(
	WIN32ERROR Return value
	);

ElfrOldestRecord::<lambda_bb3aba786a05abf3a9f318cac04abfc1>::operator ()(
	WIN32ERROR Return value
	);

ElfrOpenBELW::<lambda_c1fff2da135f7a2e2e7af21fb2fc7a04>::operator ()(
	WIN32ERROR Return value
	);

ElfrReportEventW::<lambda_ed769358a3da1b38cfdc75668a4de84d>::operator ()(
	WIN32ERROR Return value
	);

ElfrDeregisterEventSource::<lambda_4ab3e69bce2f40cf6c643917fcf6bcb2>::operator ()(
	WIN32ERROR Return value
	);

ElfrReportEventA(
	VOID
	);

ElfrRegisterEventSourceA(
	VOID
	);

ElfrReadELW(
	VOID
	);

ElfrChangeNotify(
	VOID
	);

ElfrCloseEL::<lambda_be37bae05060d73a7278994f5c8e9326>::operator ()(
	WIN32ERROR Return value
	);

ElfrOpenBELA(
	VOID
	);

ElfrGetLogInformation::<lambda_e940dd31227729ad7735701953754913>::operator ()(
	WIN32ERROR Return value
	);

ElfrRegisterEventSourceW(
	VOID
	);

ElfrNumberOfRecords(
	VOID
	);

ElfrClearELFW(
	VOID
	);

ElfrRegisterEventSourceA::<lambda_d3175008c5a85da0ce68deb033329605>::operator ()(
	WIN32ERROR Return value
	);

ElfrReadELA(
	VOID
	);

ElfrFlushEL(
	VOID
	);

ElfrClearELFW::<lambda_f87e6310a645ec91c8fcb97430f57478>::operator ()(
	WIN32ERROR Return value
	);

ElfrReportEventExW::<lambda_81b3482b5cc56bdd30be2007355616b8>::operator ()(
	WIN32ERROR Return value
	);

ElfrFlushEL::<lambda_cd6d9594fbb2c1105939a17f3ebb7890>::operator ()(
	WIN32ERROR Return value
	);

ElfrGetLogInformation(
	VOID
	);

ElfrChangeNotify::<lambda_28f30e901f7237a98568c074a2dd6a5a>::operator ()(
	WIN32ERROR Return value
	);

ElfrReportEventExA(
	VOID
	);

ElfrCloseEL(
	VOID
	);

ElfrOpenELA(
	VOID
	);

ElfrReportEventW(
	VOID
	);

ElfrOpenBELW(
	VOID
	);

ElfrClearELFA(
	VOID
	);

ElfrOldestRecord(
	VOID
	);

ElfrOpenELW::<lambda_19d2d3270667f730ae48a377932645c2>::operator ()(
	WIN32ERROR Return value
	);

ElfrDeregisterEventSource(
	VOID
	);

ElfrOpenELA::<lambda_d005f90a1830618eaa4566819b7e331f>::operator ()(
	WIN32ERROR Return value
	);

ElfrBackupELFA(
	VOID
	);

ElfrNumberOfRecords::<lambda_294971f21ab9ddc51a4e86da65ecb2f7>::operator ()(
	WIN32ERROR Return value
	);

ElfrOpenBELA::<lambda_34315bae8bdb35dc375af62bbb417694>::operator ()(
	WIN32ERROR Return value
	);

ElfrBackupELFW(
	VOID
	);

ElfrReadELW::<lambda_9f4cdbf93f973179b9e0ab40b81d6558>::operator ()(
	WIN32ERROR Return value
	);

ElfrReadELA::<lambda_70db0ec9422d4f3594efbf47b0b53a80>::operator ()(
	WIN32ERROR Return value
	);

ElfrClearELFA::<lambda_2762c04b212433300a2210ffe632aff2>::operator ()(
	WIN32ERROR Return value
	);

ElfrReportEventExW(
	VOID
	);

