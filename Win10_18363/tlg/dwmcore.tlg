ProviderNames:
	Microsoft.Windows.Dwm.Interaction
	Microsoft.Windows.Dwm.DwmCore
	WindowsDwmCore
	WindowsDwmCoreTests
	WindowsDwmCoreInstrumentation
	TelemetryAssert
	TelemetryAssertDiagTrack
	InputCore
	Microsoft.Windows.Wil.FeatureLogging
	Microsoft.Windows.Analog.HydrogenCompositor



**** Events *****
DwmInitSessionActivityId(
	GUID activityId,
	UNICODESTRING dwmInitSessionActivityId
	);

DeriveCurrentDisplaySet_Failure(
	GUID activityId
	);

InvalidDisplaySet(
	HRESULT HRESULT,
	GUID activityId,
	INT32 externalUpdateCount_Before,
	INT32 externalUpdateCount_After,
	UINT32 ulDisplayUniquenessLoader_Before,
	UINT32 ulDisplayUniquenessLoader_After,
	UINT32 ulDisplayPrivateUniqueness_Before,
	UINT32 ulDisplayPrivateUniqueness_After
	);

UpdateDxgiEnumeration_Failure(
	HRESULT HRESULT,
	GUID activityId,
	UINT32 ulAdaptersUniquenessLoader
	);

UpdateDisplaySet_Failure(
	GUID activityId
	);

DisplaySet(
	UINT32 version,
	GUID activityId,
	UINT32 displayState,
	BINARY oldDisplaySet,
	BINARY newDisplaySet,
	UINT32 oldAdapterUniqueness,
	UINT32 newAdapterUniqueness,
	UINT32 currentAdapterUniqueness,
	UINT32 oldDisplayUniqueness,
	UINT32 newDisplayUniqueness,
	UINT32 currentDisplayUniqueness
	);

Frames(
	INT32 eventVersion,
	FILETIME systemTime,
	UINT32 dwmSession,
	GUID screenOnStudySession,
	FILETIME firstFrameTime,
	ANSISTRING resources,
	HEX apps,
	UINT32 UTCReplace_AppId,
	UINT64 psn,
	UINT16 appIdIndex,
	ANSISTRING resources,
	ANSISTRING sequences,
	ANSISTRING strings,
	ANSISTRING animations
	);

NoHardwareDevice(
	GUID activityId
	);

ProcessAttribution(
	UINT32 pid,
	BOOLEAN dirtyGenerated,
	BOOLEAN dirtyPropagated,
	BOOLEAN compositorRendered,
	UINT64 processSequenceNumber,
	UINT32 reportDurationInMs
	);

HighResourceUsageAlarm(
	UINT64 PartA_PrivTags,
	UINT32 UTCReplace_AppId,
	UINT32 UTCReplace_AppVersion,
	UINT32 ProcessId,
	UINT64 ProcessSequenceNumber,
	UINT32 VisualsCount,
	UINT32 SurfacesCount,
	UINT32 OtherCount,
	UINT32 LightsCount,
	UINT32 ShapesCount,
	UINT32 KeyframeAnimationsCount
	);

RequestedDisablingSceneVisuals(
	UINT32 dwmPID,
	UINT32 dwmSession,
	UINT64 thresholdForCutoff,
	UINT32 consecutiveIncidentsAllowed,
	UINT64 cutOffFrameID,
	UINT32 consecutiveLongFramesCount,
	UINT64 qpcLastLongFrame
	);

InputActivity(
	UINT64 Current Frame,
	UINT32 Input Type,
	UINT64 key
	);

RenderThreadWatchdogCheckpoint(
	UINT64 PartA_PrivTags,
	INT32 ElapsedMillisecondsSinceWatchdogTimerStarted
	);

AnimationLastFrame(
	UNICODESTRING AnimationScenarioName,
	UINT32 FrameRateInFPS,
	UINT32 AverageLatency,
	UINT32 LatencyMax,
	UINT32 FirstFrameLatency,
	UINT32 FirstFrameLatencySinceInputInMs,
	UINT64 StartFrameId,
	UINT64 StopFrameId,
	UINT32 IntendedDurationInMs,
	UINT32 VsyncCadence,
	UINT32 Vsyncs,
	UINT32 VsyncsMissed,
	UINT32 MaxConsecutiveVsyncsMissed,
	UINT32 Glitches,
	UNICODESTRING AppId,
	UNICODESTRING AppVersion,
	UINT32 AnimationScenarioIndex,
	UNICODESTRING AnimationScenarioDetails,
	UINT32 AnimationScenarioDetailsHash
	);

ActivityStoppedAutomatically(
	VOID
	);

InputSummary(
	UINT64 PartA_PrivTags,
	UNICODESTRING ver,
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 inputType,
	UINT8 interactionContext,
	GUID correlationGuid,
	UINT8 interactionCount,
	UINT32 manipulationDurationMsArray,
	UINT32 inertiaDurationMsArray,
	UINT8 contactCountArray,
	UINT16 vsyncCountArray,
	UINT16 dwmFrameCountArray,
	UINT32 scenarioLatencyMsArray,
	UINT32 summaryDurationMs,
	HRESULT firstFrame,
	UINT32 kernelInputLatencyAvgUs,
	UINT32 appInputLatencyAvgUs,
	UINT32 hostInputLatencyAvgUs,
	UINT32 containerBoundaryInputLatencyAvgUs,
	UINT32 containerKernelInputLatencyAvgUs,
	UINT32 kernelInputLatencyMaxUs,
	UINT32 appInputLatencyMaxUs,
	UINT32 hostInputLatencyMaxUs,
	UINT32 containerBoundaryInputLatencyMaxUs,
	UINT32 containerKernelInputLatencyMaxUs,
	UINT32 kernelInputLatencyUsArray,
	UINT32 appInputLatencyUsArray,
	UINT32 hostInputLatencyUsArray,
	UINT32 containerBoundaryInputLatencyUsArray,
	UINT32 containerKernelInputLatencyUsArray,
	HRESULT steadyStateFrames,
	UINT32 kernelInputLatencyAvgUs,
	UINT32 appInputLatencyAvgUs,
	UINT32 hostInputLatencyAvgUs,
	UINT32 containerBoundaryInputLatencyAvgUs,
	UINT32 containerKernelInputLatencyAvgUs,
	UINT32 kernelInputLatencyMaxUs,
	UINT32 appInputLatencyMaxUs,
	UINT32 hostInputLatencyMaxUs,
	UINT32 containerBoundaryInputLatencyMaxUs,
	UINT32 containerKernelInputLatencyMaxUs,
	UINT32 kernelInputLatencyUsArray,
	UINT32 appInputLatencyUsArray,
	UINT32 hostInputLatencyUsArray,
	UINT32 containerBoundaryInputLatencyUsArray,
	UINT32 containerKernelInputLatencyUsArray,
	UINT32 coalescedFrameMaxCount,
	UINT32 coalescedFramesCountArray,
	FLOAT coalescedFramesAvgCount
	);

InteractionAggregation(
	VOID
	);

RenderSummary(
	UINT64 PartA_PrivTags,
	UNICODESTRING ver,
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 inputType,
	UINT8 interactionContext,
	GUID correlationGuid,
	UINT8 interactionCount,
	UINT32 manipulationDurationMsArray,
	UINT32 inertiaDurationMsArray,
	UINT8 contactCountArray,
	UINT16 vsyncCountArray,
	UINT16 dwmFrameCountArray,
	UINT32 scenarioLatencyMsArray,
	UINT32 summaryDurationMs,
	JSON firstFrame,
	UINT32 appCommitLatencyAvgMs,
	UINT32 dwmRenderLatencyAvgMs,
	UINT32 dwmPresentLatencyAvgMs,
	UINT32 appCommitLatencyMaxMs,
	UINT32 dwmRenderLatencyMaxMs,
	UINT32 dwmPresentLatencyMaxMs,
	UINT32 appCommitLatencyMsArray,
	UINT32 dwmRenderLatencyMsArray,
	UINT32 dwmPresentLatencyMsArray,
	FLOAT vsyncsMissedAvgCount,
	UINT8 vsyncsMissedMaxCount,
	UINT8 vsyncsMissedCountArray,
	HRESULT steadyStateFrames,
	UINT32 appCommitLatencyAvgMs,
	UINT32 dwmRenderLatencyAvgMs,
	UINT32 dwmPresentLatencyAvgMs,
	UINT32 appCommitLatencyMaxMs,
	UINT32 dwmRenderLatencyMaxMs,
	UINT32 dwmPresentLatencyMaxMs,
	UINT32 appCommitLatencyMsArray,
	UINT32 dwmRenderLatencyMsArray,
	UINT32 dwmPresentLatencyMsArray,
	FLOAT vsyncsMissedAvgCount,
	FLOAT maxConsecutiveVsyncsMissedAvgCount,
	UINT16 vsyncsMissedMaxCount,
	UINT16 maxConsecutiveVsyncsMissedMaxCount,
	UINT16 vsyncsMissedCountArray,
	UINT16 maxConsecutiveVsyncsMissedCountArray
	);

InteractionAggregation(
	VOID
	);

InteractionSummary(
	UINT64 PartA_PrivTags,
	UNICODESTRING ver,
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 inputType,
	UINT8 interactionContext,
	GUID correlationGuid,
	UINT8 interactionCount,
	UINT32 manipulationDurationMsArray,
	UINT32 inertiaDurationMsArray,
	UINT8 contactCountArray,
	UINT16 vsyncCountArray,
	UINT16 dwmFrameCountArray,
	UINT32 scenarioLatencyMsArray,
	UINT32 summaryDurationMs,
	FLOAT startedInParalleModeAvgCount,
	BOOLEAN startedInParallelModeArray,
	PORT firstFrame,
	UINT32 osLatencyAvgMs,
	UINT32 osLatencyMaxMs,
	UINT32 osLatencyMsArray,
	FLOAT inputGlitchAvgCount,
	BOOLEAN inputGlitchArray,
	FLOAT renderGlitchAvgCount,
	BOOLEAN renderGlitchArray,
	IPV6 steadyStateFrames,
	UINT32 osLatencyAvgMs,
	UINT32 osLatencyMaxMs,
	UINT32 osLatencyMsArray,
	FLOAT inputGlitchAvgCount,
	UINT16 inputGlitchMaxCount,
	UINT16 inputGlitchCountArray,
	FLOAT renderGlitchAvgCount,
	UINT16 renderGlitchMaxCount,
	UINT16 renderGlitchCountArray
	);

InputGlitchSteadyState(
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	GUID correlationGuid,
	UINT8 inputType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 interactionContext,
	UINT32 manipulationFrameId,
	UINT32 prevManipulationFrameId,
	UINT32 pointerFrameId,
	HEXINT64 startDwmFrameId,
	HEXINT64 currentDwmFrameId,
	UINT16 surfaceWidthPx,
	UINT16 surfaceHeightPx,
	HEXINT64 surfacePointer,
	UINT32 kernelAndAppLatenciesMs,
	UINT32 kernelInputLatencyUs,
	UINT32 appInputLatencyUs,
	UINT32 appCommitLatencyMs,
	UINT32 hostInputLatencyUs,
	UINT32 containerBoundaryInputLatencyUs,
	UINT32 containerKernelInputLatencyUs,
	UINT64 latencyThresholdMs,
	UINT32 scenarioUpdateLatencyMs,
	UINT64 kernelInputStartQpc,
	UINT64 appInputStartQpc,
	UINT64 appCommitQpc,
	UINT64 dwmRenderStartQpc,
	UINT64 hostInputSendQpc,
	UINT64 containerInputReceiveQpc,
	UINT64 dwmRefreshPeriodQpc,
	UINT64 prevScenarioUpdateQpc,
	UINT64 lastScenarioUpdateQpc
	);

InputGlitchFirstFrame(
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	GUID correlationGuid,
	UINT8 inputType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 interactionContext,
	UINT32 manipulationFrameId,
	UINT32 pointerFrameId,
	HEXINT64 dwmFrameId,
	UINT16 surfaceWidthPx,
	UINT16 surfaceHeightPx,
	HEXINT64 surfacePointer,
	UINT32 kernelAndAppLatenciesMs,
	UINT32 kernelInputLatencyUs,
	UINT32 appInputLatencyUs,
	UINT32 appCommitLatencyMs,
	UINT32 hostInputLatencyUs,
	UINT32 containerBoundaryInputLatencyUs,
	UINT32 containerKernelInputLatencyUs,
	UINT64 latencyThresholdMs,
	UINT64 kernelInputStartQpc,
	UINT64 appInputStartQpc,
	UINT64 appCommitQpc,
	UINT64 dwmRenderStartQpc,
	UINT64 hostInputSendQpc,
	UINT64 containerInputReceiveQpc,
	UINT64 dwmRefreshPeriodQpc
	);

UpdateInputActivity(
	HEXINT32 inputMessage,
	HEXINT64 virtualKey,
	HEXINT64 dwmFrameCount
	);

InputAnalysis(
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	GUID correlationGuid,
	UINT8 inputType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 interactionContext,
	UINT8 contactCount,
	UINT16 manipulationDurationMs,
	UINT16 inertiaDurationMs,
	UINT16 dwmFrameCount,
	UINT32 vsyncCount,
	UINT16 surfaceWidthPx,
	UINT16 surfaceHeightPx,
	HEXINT64 surfacePointer,
	BOOLEAN scenarioTimedOut,
	PID firstFrame,
	UINT32 kernelInputLatencyUs,
	UINT32 appInputLatencyUs,
	UINT32 hostInputLatencyUs,
	UINT32 containerBoundaryInputLatencyUs,
	UINT32 containerKernelInputLatencyUs,
	SOCKETADDRESS steadyStateFrames,
	UINT32 kernelInputLatencyAvgUs,
	UINT32 appInputLatencyAvgUs,
	UINT32 hostInputLatencyAvgUs,
	UINT32 containerBoundaryInputLatencyAvgUs,
	UINT32 containerKernelInputLatencyAvgUs,
	UINT32 kernelInputLatencyMaxUs,
	UINT32 appInputLatencyMaxUs,
	UINT32 hostInputLatencyMaxUs,
	UINT32 containerBoundaryInputLatencyMaxUs,
	UINT32 containerKernelInputLatencyMaxUs,
	UINT32 coalescedFrameCount
	);

Interaction(
	VOID
	);

RenderAnalysis(
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	GUID correlationGuid,
	UINT8 inputType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 interactionContext,
	UINT8 contactCount,
	UINT16 manipulationDurationMs,
	UINT16 inertiaDurationMs,
	UINT16 dwmFrameCount,
	UINT32 vsyncCount,
	UINT16 surfaceWidthPx,
	UINT16 surfaceHeightPx,
	HEXINT64 surfacePointer,
	BOOLEAN scenarioTimedOut,
	HEX firstFrame,
	UINT32 appCommitLatencyMs,
	UINT32 dwmRenderLatencyMs,
	UINT32 dwmPresentLatencyMs,
	UINT8 vsyncsMissedCount,
	IPV4 steadyStateFrames,
	UINT32 appCommitLatencyAvgMs,
	UINT32 dwmRenderLatencyAvgMs,
	UINT32 dwmPresentLatencyAvgMs,
	UINT32 appCommitLatencyMaxMs,
	UINT32 dwmRenderLatencyMaxMs,
	UINT32 dwmPresentLatencyMaxMs,
	UINT16 vsyncsMissedCount,
	UINT16 maxConsecutiveVsyncsMissedCount,
	UINT16 frameRateFps,
	UINT16 vsyncCandenceHz
	);

Interaction(
	VOID
	);

InteractionAnalysis(
	UINT32 monitorCount,
	STRING primaryAdapterLuid,
	HEXINT32 lowPart,
	HEXINT32 highPart,
	BOOLEAN primaryAdapterWarp,
	UNICODESTRING appId,
	UNICODESTRING appVersion,
	UINT8 appType,
	GUID correlationGuid,
	UINT8 inputType,
	UINT8 interactionLibraryType,
	UINT8 interactionType,
	UINT8 interactionContext,
	UINT8 contactCount,
	UINT16 manipulationDurationMs,
	UINT16 inertiaDurationMs,
	UINT16 dwmFrameCount,
	UINT32 vsyncCount,
	UINT16 surfaceWidthPx,
	UINT16 surfaceHeightPx,
	HEXINT64 surfacePointer,
	BOOLEAN scenarioTimedOut,
	BOOLEAN firstFrame,
	UINT32 osLatencyMs,
	BOOLEAN inputGlitch,
	BOOLEAN renderGlitch,
	HEX steadyStateFrames,
	UINT32 osLatencyAvgMs,
	UINT32 osLatencyMaxMs,
	UINT16 inputGlitchCount,
	UINT16 renderGlitchCount,
	BOOLEAN startedInParallelMode
	);

UnpresentedFramesAlarm(
	UINT32 ProcessId,
	UINT32 UnpresentedFrameCount
	);

FrameStatistics(
	UINT32 ProcessId,
	UINT32 SessionId,
	DOUBLE ReportPeriodMs,
	UINT32 FrameCount,
	DOUBLE PerFrameCpuMs,
	DOUBLE MaxFrameCpuMs,
	UINT32 SequenceCount,
	UINT32 WindowBackgroundTreatmentCount,
	UINT32 WindowBackgroundTreatmentCacheMissCount
	);

CreateDesktopRenderTargetEvent(
	UINT32 DisplayCount,
	HRESULT HRESULT
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	TID Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _21,
	FLOAT _22,
	FLOAT _31,
	FLOAT _32
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	FILETIME Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44
	);

DebugProperty AnimationEnded(
	UINT64 FrameId,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING AnimationEndedReason,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	BOOLEAN Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	HEX Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FLOAT W
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	HEX Value,
	FLOAT R,
	FLOAT G,
	FLOAT B,
	FLOAT A
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	BOOL32 Value
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	FLOAT Value
	);

DebugProperty Updated(
	UINT64 FrameId,
	UNICODESTRING Resource Type,
	UINT32 TargetObjectHandle,
	UINT32 TargetPropertyId,
	UNICODESTRING TargetMaskInfo,
	UNICODESTRING AnimationDataType,
	UNICODESTRING CompositorComment,
	UNICODESTRING Comment,
	STRING Value,
	FLOAT X,
	FLOAT Y
	);

Expression_ProcessExpressions(
	DOUBLE TotalDuration,
	UINT32 NumExpressionsCalculated,
	UINT32 NumTracedExpressionsCalculated,
	UINT32 NumActiveExpressions,
	UINT32 NumSuspendedAnimations,
	BOOLEAN IsGraphDirty,
	DOUBLE AverageCalculateValueDuration,
	DOUBLE AverageCalculateValueWorkerDuration,
	DOUBLE AverageProcessDependenciesDuration,
	DOUBLE AverageResolveReferenceDuration,
	DOUBLE AverageWriteToCacheDuration,
	DOUBLE AverageSetOutputValueDuration,
	UINT64 FrameId
	);

CVisual::CalcEffectiveTransform ParentTransform(
	HEXINT64 this,
	HEXINT64 Interaction,
	FILETIME pParentTransform,
	FLOAT pParentTransform->M11(),
	FLOAT pParentTransform->M12(),
	FLOAT pParentTransform->M13(),
	FLOAT pParentTransform->M14(),
	FLOAT pParentTransform->M21(),
	FLOAT pParentTransform->M22(),
	FLOAT pParentTransform->M23(),
	FLOAT pParentTransform->M24(),
	FLOAT pParentTransform->M31(),
	FLOAT pParentTransform->M32(),
	FLOAT pParentTransform->M33(),
	FLOAT pParentTransform->M34(),
	FLOAT pParentTransform->M41(),
	FLOAT pParentTransform->M42(),
	FLOAT pParentTransform->M43(),
	FLOAT pParentTransform->M44()
	);

CVisual::CalcEffectiveTransform(
	HEXINT64 this,
	HEXINT64 Interaction,
	FILETIME pTransform,
	FLOAT pTransform->M11(),
	FLOAT pTransform->M12(),
	FLOAT pTransform->M13(),
	FLOAT pTransform->M14(),
	FLOAT pTransform->M21(),
	FLOAT pTransform->M22(),
	FLOAT pTransform->M23(),
	FLOAT pTransform->M24(),
	FLOAT pTransform->M31(),
	FLOAT pTransform->M32(),
	FLOAT pTransform->M33(),
	FLOAT pTransform->M34(),
	FLOAT pTransform->M41(),
	FLOAT pTransform->M42(),
	FLOAT pTransform->M43(),
	FLOAT pTransform->M44()
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	FLOAT Value
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	UNICODESTRING Value
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	HEX Value,
	FLOAT R,
	FLOAT G,
	FLOAT B,
	FLOAT A
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	HEX Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FLOAT W
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	TID Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _21,
	FLOAT _22,
	FLOAT _31,
	FLOAT _32
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	FILETIME Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	STRING Value,
	FLOAT X,
	FLOAT Y
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	BOOLEAN Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z
	);

Expression_CalculateValueWorker_Failure(
	UINT32 Cookie,
	UINT32 LastProcessedNodeType,
	HRESULT hr
	);

Expression_CacheAccess(
	UINT32 Cookie,
	UINT32 CacheOffset,
	ANSISTRING AccessType,
	UINT32 DataType,
	UINT64 FrameId,
	BOOL32 Value
	);

Expression_Initialization(
	UINT32 Cookie,
	INT32 Result
	);

CInteraction::UpdateDefaultInteractionForCurrentMC(
	HEXINT64 pInteraction,
	BOOL32 DefaultForCurrentMC,
	BOOL32 DefaultInteraction
	);

CInteraction::ResetDefaultInteractionForCurrentMC(
	HEXINT64 pInteraction,
	BOOL32 DefaultInteraction
	);

CInteraction::SetTemporaryConfiguration(
	HEXINT64 object,
	UINT32 axis,
	UINT32 type,
	BOOL32 fTempConfigEnabled,
	HEXINT32 config
	);

VisualInteractionSource animated by InteractionTracker(
	UINT32 PropertyHandle,
	HEXINT64 Visual,
	HEXINT64 InteractionTracker,
	HEXINT64 Interaction
	);

CInteractionTracker::SetState(
	HEXINT64 CInteractionTracker,
	INT32 m_state,
	INT32 newState
	);

CInteractionTracker::SetMinScale(
	HEXINT64 CInteractionTracker,
	FLOAT m_minScale
	);

CInteractionTracker::SetMaxScale(
	HEXINT64 CInteractionTracker,
	FLOAT m_maxScale
	);

Expression_DelayTimeValue(
	UINT32 Cookie,
	FLOAT ResolvedDelayMs
	);

Expression_DurationValue(
	UINT32 Cookie,
	FLOAT ResolvedDurationMs
	);

CManipulation::Update(
	HEXINT64 object,
	BOOLEAN pan,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN deltaPan,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN scale,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN deltaScale,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN centerPoint,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FLOAT cumulativeExpansion,
	FLOAT expansionVelocity,
	BOOLEAN panVelocity,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN scaleVelocity,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	INT32 interactionState,
	INT32 parentX,
	INT32 parentY,
	INT32 parentZ,
	BOOL32 fXRailsEnabled,
	BOOL32 fYRailsEnabled
	);

CManipulation::_SendUpdateToRenderThread(
	HEXINT64 object,
	BOOLEAN pan,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN scale,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FLOAT cumulativeExpansion,
	BOOLEAN panVelocity,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN scaleVelocity,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FLOAT expansionVelocity,
	FILETIME matrix,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44,
	INT32 interactionState,
	INT32 parentX,
	INT32 parentY,
	INT32 parentZ,
	INT32 railsState,
	BOOL32 fXRailsEnabled,
	BOOL32 fYRailsEnabled,
	INT32 m_captureState
	);

Manipulation Transform Matrix(
	FILETIME Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44
	);

Manipulation Transform Components(
	BOOLEAN Translation,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN Pan,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN Scale,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN CenterPoint,
	FLOAT X,
	FLOAT Y,
	FLOAT Z
	);

CNaturalAnimation::CalculateValueWorker(
	UINT32 Cookie,
	FLOAT elapsedTime,
	BOOLEAN currentPotionInForceBasis,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN result,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN *pNeedsUpdateForNextFrame
	);

CNaturalAnimation::InitializeForces(
	UINT32 Cookie,
	BOOLEAN InitialVelocity_StandardBasis,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN InitialValue_StandardBasis,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN FinalValue_StandardBasis,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN InitialVelocity_ForceBasis,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	BOOLEAN DistanceToTravel_ForceBasis,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FILETIME m_TStandardToForceBasis,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	ANSISTRING Value
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	HEX Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FLOAT W
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	TID Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _21,
	FLOAT _22,
	FLOAT _31,
	FLOAT _32
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	FILETIME Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	FLOAT Value
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	STRING Value,
	FLOAT X,
	FLOAT Y
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	BOOLEAN Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	HEX Value,
	FLOAT R,
	FLOAT G,
	FLOAT B,
	FLOAT A
	);

Expression_SetOutputValue(
	UINT32 Cookie,
	UINT32 DataType,
	UINT64 Mask,
	UINT64 FrameId,
	BOOL32 Value
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	FILETIME Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	HEX Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z,
	FLOAT W
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	HEX Value,
	FLOAT R,
	FLOAT G,
	FLOAT B,
	FLOAT A
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	TID Value,
	FLOAT _11,
	FLOAT _12,
	FLOAT _21,
	FLOAT _22,
	FLOAT _31,
	FLOAT _32
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	BOOL32 Value
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	FLOAT Value
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	STRING Value,
	FLOAT X,
	FLOAT Y
	);

Property Bag Base Value Updated(
	INT32 Cookie,
	INT32 Update Type,
	INT32 Property Type,
	INT32 Property Id,
	BOOLEAN Value,
	FLOAT X,
	FLOAT Y,
	FLOAT Z
	);

PropertySetDestroyed(
	INT32 Cookie
	);

CMotion::UpdateValueWithChaining(
	HEXINT64 CScrollAnimation,
	UNICODESTRING axis,
	UINT32 interactionState,
	UINT32 newInteractionState,
	UINT32 boundaryState,
	UINT32 newBoundaryState,
	FLOAT currentManipulationValue,
	FLOAT m_chainingData.lastValue,
	FLOAT m_chainingData.startingValue,
	FLOAT m_chainingData.chainingDirection,
	FLOAT value,
	BOOL32 fChainingAllowed,
	BOOL32 m_chainingData.handled,
	BOOL32 m_chainingData.chainingDirectionDirty
	);

CScrollAnimation::StartInContact(
	HEXINT64 CScrollAnimation
	);

CInteractionTrackerPositionAnimation::CalculateInertiaValueWorker(
	HEXINT64 CInteractionTrackerPositionAnimation,
	UNICODESTRING axis,
	FLOAT currentPosition,
	FLOAT centerPoint,
	FLOAT elapsedTime
	);

CMotion::AdvanceInertiaToTimeInertiaModifier(
	HEXINT64 CMotion,
	UNICODESTRING axis,
	FLOAT value,
	FLOAT m_currentTime,
	FLOAT velocity,
	FLOAT acceleration
	);

CMotion::AdvanceInertiaToTime(
	HEXINT64 CMotion,
	UNICODESTRING axis,
	FLOAT value,
	FLOAT currentVelocity,
	FLOAT elapsedTime
	);

CMotion::StartInertia(
	HEXINT64 CMotion,
	UNICODESTRING axis,
	FLOAT m_initialValue,
	FLOAT m_initialVelocity,
	FLOAT m_timeToMinimumVelocity,
	FLOAT m_naturalEndpoint,
	BOOL32 restart
	);

CMotion::StartInContact(
	HEXINT64 CMotion,
	UNICODESTRING m_axis
	);

CGravityBounceAccelerator::Accelerate(
	UINT32 Cookie,
	FLOAT result,
	FLOAT state->Position,
	FLOAT state->Velocity,
	FLOAT state->Acceleration,
	FLOAT time,
	FLOAT m_acceleration,
	FLOAT m_restitution
	);

Assert(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

AssertWithArgs(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	ANSISTRING originatingBinary,
	UINT32 bucketArgument1,
	UINT32 bucketArgument2,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

GestureTargeting::ForcePalmRejection(
	VOID
	);

GestureTargeting::InteractionConfig(
	HEXINT64 InteractionObject,
	HEX Touch,
	UINT32 Count,
	HEXINT32 Interactions,
	HEXINT32 MinContacts,
	HEXINT32 MaxContacts,
	HEX Touchpad,
	UINT32 Count,
	HEXINT32 Interactions,
	HEXINT32 MinContacts,
	HEXINT32 MaxContacts,
	HEX Pen,
	UINT32 Count,
	HEXINT32 Interactions,
	HEXINT32 MinContacts,
	HEXINT32 MaxContacts,
	HEX Mousewheel,
	UINT32 Count,
	HEXINT32 Interactions,
	HEXINT32 MinContacts,
	HEXINT32 MaxContacts,
	NOPRINT Mouse,
	HEXINT32 Interactions,
	HEXINT32 TempConfig,
	HEXINT32 TempConfigMask
	);

DWM::HitTestTreeWalkResult(
	ANSISTRING PointerType,
	IPV6 HitTestAttributes,
	UNICODESTRING MouseWheel,
	UNICODESTRING WheelIncreasing,
	UNICODESTRING WheelHorizontal,
	UNICODESTRING ButtonDown,
	UNICODESTRING TouchTargeting,
	UNICODESTRING NoHoverPointer,
	UNICODESTRING BarrelButtonDown,
	UNICODESTRING EraserDown,
	UNICODESTRING ControlDown,
	HEXINT32 HitTestAttributesValue,
	HEXINT64 DuplicatedInputSink,
	HEXINT64 WindowHandle,
	HEXINT64 InputSink,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource
	);

DWM::EvaluateHitTestCandidate(
	BOOL32 Selected,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GestureTargeting::UpdateActiveConfig(
	NTSTATUS Interactions,
	ANSISTRING PanXIncreasing,
	ANSISTRING PanXDecreasing,
	ANSISTRING PanYIncreasing,
	ANSISTRING PanYDecreasing,
	ANSISTRING ZoomIncreasing,
	ANSISTRING ZoomDecreasing,
	ANSISTRING Tap,
	ANSISTRING Hold,
	ANSISTRING Button,
	ANSISTRING Eraser,
	ANSISTRING Hover,
	ANSISTRING Wheel,
	ANSISTRING DisableGestures,
	ANSISTRING StopInertia,
	HEXINT32 MinContacts,
	HEXINT32 MaxContacts
	);

Palm Rejection Enabled(
	HEXINT64 object
	);

CInteractionProcessor::ResolveProhibitedMotion(
	HEXINT64 object,
	STRING InteractionContextWrapper,
	HEXINT64 touch,
	HEXINT64 touchpad,
	HEXINT64 pen,
	HEXINT64 mousewheel,
	UINT32 currentInputType,
	UINT32 currentContactCount,
	BOOL32 handlesMotion,
	HEX prohibitedConfigurations[i],
	UINT32 i,
	UINT32 minContactCount,
	UINT32 maxContactCount,
	HEXINT32 interactions,
	PID pHandledInteractions,
	BOOL32 tap,
	BOOL32 hold,
	FLOAT x,
	FLOAT y,
	FLOAT z,
	IPV6 supportedMotions,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33
	);

CInteractionProcesor::ComputeHandledInteractionsFromLocal(
	HEXINT64 object,
	HEXINT64 InteractionContextWrapper,
	UINT32 currentInputType,
	BOOLEAN handledMotion,
	FLOAT x,
	FLOAT y,
	FLOAT z,
	IPV6 S_n_transpose,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	IPV6 supported,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33
	);

CInteractionProcessor::CalculateDetectedInteractions(
	HEXINT64 object,
	HEXINT64 InteractionContextWrapper,
	HEXINT64 pTapHoldContext,
	UINT32 currentInputType,
	UINT32 new state,
	INT32 supportedInteractionsAdded,
	INT32 mustHandleInteractionsAdded
	);

CInteractionProcessor::CaptureCurrentManipulation(
	HEXINT64 object,
	UINT32 pointerId,
	UINT64 pointerTimeStamp
	);

CInteractionProcessor::ProcessOutput(
	HEXINT64 object,
	HEXINT64 pManipulation,
	BOOL32 fHandling,
	BOOL32 fCaptured,
	UINT32 currentContactCount,
	HEXINT32 output.interactionFlags,
	HRESULT hr
	);

CInteractionProcessor::SetTemporaryConfiguration(
	HEXINT64 object,
	UINT32 axis,
	UINT32 type,
	INT32 index,
	BOOL32 fTempConfigEnabled,
	BOOL32 rgTempConfig[index].fEnabled,
	HEXINT32 config,
	HEXINT32 mask,
	HEXINT32 newConfig,
	HEXINT32 rgTempConfig[index].config,
	BOOL32 m_fTemporaryProhibitedDescendantConfigSet
	);

CInteractionProcessor::ConstructLocalToGlobalTransform(
	HEXINT64 object,
	HEX InteractionContextWrapper,
	HEXINT64 touch,
	HEXINT64 touchpad,
	HEXINT64 pen,
	HEXINT64 mousewheel,
	UINT32 currentInputType,
	IPV6 T_localToGlobal,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33
	);

CInteractionProcessor::CalculateHandledInteractions(
	HEXINT64 object,
	UINT32 currentInputType,
	UINT32 previous state,
	UINT32 new state,
	BOOL32 fHandledX,
	BOOL32 fHandledY,
	BOOL32 fHandledScale,
	BOOL32 fHandledStaticGesture,
	BOOL32 handlesRequired,
	PID handledInteractions,
	BOOL32 tap,
	BOOL32 hold,
	FLOAT x,
	FLOAT y,
	FLOAT z,
	PID m_parentProhibited,
	BOOL32 tap,
	BOOL32 hold,
	FLOAT x,
	FLOAT y,
	FLOAT z
	);

CInteractionProcessor::ResolveMustHandleMotion(
	HEXINT64 object,
	STRING InteractionContextWrapper,
	HEXINT64 touch,
	HEXINT64 touchpad,
	HEXINT64 pen,
	HEXINT64 mousewheel,
	UINT32 currentInputType,
	BOOL32 handlesRequiredMotions,
	PID pHandledInteractions,
	BOOL32 tap,
	BOOL32 hold,
	FLOAT x,
	FLOAT y,
	FLOAT z,
	BOOLEAN detectionLocalHandledVector,
	FLOAT x,
	FLOAT y,
	FLOAT z
	);

CInteractionProcessor::ConvertGlobalMotionToLocalMotion(
	HEXINT64 object,
	HEX InteractionContextWrapper,
	HEXINT64 touch,
	HEXINT64 touchpad,
	HEXINT64 pen,
	HEXINT64 mousewheel,
	UINT32 currentInputType,
	BOOLEAN localVector,
	FLOAT x,
	FLOAT y,
	FLOAT z,
	BOOLEAN globalMotion,
	FLOAT x,
	FLOAT y,
	FLOAT scale,
	IPV6 T_GlobalToLocal,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	IPV6 T_ScaleOnlyInverse,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33
	);

CInteractionProcessor::ProcessInput(
	HEXINT64 CInteraction,
	HEXINT64 InteractionProcessor,
	HEX InteractionContextWrapper,
	HEXINT64 touch,
	HEXINT64 touchpad,
	HEXINT64 pen,
	HEXINT64 mousewheel
	);

CInteractionProcessor DecomposeMatrix(
	BOOL32 fCanDecompose,
	FILETIME matrix,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44,
	STRING translationData,
	FLOAT x,
	FLOAT y,
	STRING scaleData,
	FLOAT x,
	FLOAT y,
	HEX rotationData,
	FLOAT x,
	FLOAT y,
	FLOAT z,
	FLOAT w,
	FLOAT theta,
	UINT32 hDevice,
	HEX rcPhysicalSize,
	INT32 left,
	INT32 top,
	INT32 right,
	INT32 bottom,
	HEX rcPixelSize,
	INT32 left,
	INT32 top,
	INT32 right,
	INT32 bottom
	);

CInteractionContextWrapper::_UpdateInteractionOutput(
	HEXINT64 object,
	BOOLEAN delta (no prediction),
	FLOAT x,
	FLOAT y,
	FLOAT scale,
	STRING IC's cumulative translation,
	FLOAT x,
	FLOAT y,
	STRING IC's cumulative prediction,
	FLOAT x,
	FLOAT y,
	BOOLEAN delta (predicted),
	FLOAT x,
	FLOAT y,
	FLOAT scale,
	FLOAT velocityX,
	FLOAT velocityY,
	FLOAT velocityExpansion,
	FLOAT velocityScale,
	STRING center,
	FLOAT x,
	FLOAT y
	);

CInteractionContextWrapper::InteractionContextCallback(
	HEXINT64 object,
	HEXINT32 interactionId,
	HEXINT32 interactionFlags,
	BOOL32 fCallbackCurrentFrame
	);

CInteractionContextWrapper::InteractionContextCallback MANIPULATION(
	HEXINT64 object,
	BOOLEAN raw IC deltas,
	FLOAT x,
	FLOAT y,
	FLOAT scale,
	STRING raw IC velocity,
	FLOAT velocityX,
	FLOAT velocityY,
	BOOLEAN cumulative,
	FLOAT x,
	FLOAT y,
	FLOAT scale,
	HEXINT32 railsState,
	INT32 m_output.railsState
	);

CInteractionContextWrapper::ConfigureInteractionContext(
	HEXINT64 object,
	HEXINT32 manipulationConfig,
	HEXINT32 tapConfig,
	HEXINT32 holdConfig,
	HRESULT hr
	);

CInteractionContextWrapper::GetGlobalMotion recalculated(
	HEXINT64 object,
	BOOLEAN m_globalOutput.delta,
	FLOAT x,
	FLOAT y,
	FLOAT scale
	);

CInteractionContextWrapper::ProcessInput(
	HEXINT64 object,
	UINT32 PointerId,
	UINT32 PointerType,
	UINT32 FrameId,
	INT32 InputData,
	UINT32 dwTime,
	STRING ptHimetricLocationRaw UnTransformed,
	UINT32 x,
	UINT32 y,
	STRING ptHimetricLocationRaw Transformed,
	UINT32 x,
	UINT32 y,
	FILETIME transform,
	FLOAT _11,
	FLOAT _12,
	FLOAT _13,
	FLOAT _14,
	FLOAT _21,
	FLOAT _22,
	FLOAT _23,
	FLOAT _24,
	FLOAT _31,
	FLOAT _32,
	FLOAT _33,
	FLOAT _34,
	FLOAT _41,
	FLOAT _42,
	FLOAT _43,
	FLOAT _44,
	HRESULT hr
	);

CInteractionContextWrapper::ResetOutput(
	HEXINT64 object
	);

CInteractionContextWrapper::GetTransformedOutput recalculated(
	HEXINT64 object,
	BOOLEAN delta,
	FLOAT x,
	FLOAT y,
	FLOAT scale,
	FLOAT velocityX,
	FLOAT velocityY,
	FLOAT velocityExpansion,
	FLOAT velocityScale,
	STRING center,
	FLOAT x,
	FLOAT y,
	HRESULT hr
	);

CInteractionContextWrapper::StopInteraction(
	HEXINT64 object,
	HRESULT hr
	);

CManipulationTelemetryData::UpdateOnRenderThread(
	UINT64 RenderThreadStartTime,
	UINT32 mtTelemetryData.InputType,
	UINT32 mtTelemetryData.FrameId,
	UINT32 mtTelemetryData.ManipulationFrameId,
	BOOLEAN mtTelemetryData.FrameTimes,
	INT64 KernelInputReadQPC,
	INT64 HostInputSendQPC,
	INT64 ContainerInputReceiveQPC,
	UINT64 mtTelemetryData.qpcManipulationThreadStartTime,
	UINT64 mtTelemetryData.qpcManipulationThreadStopTime,
	UINT32 mtTelemetryData.cCoalescedFrames,
	UINT32 mtTelemetryData.cContacts
	);

CManipulationTelemetryData::EndInteraction(
	HEXINT64 uniqueKey
	);

CManipulationTelemetryData::UpdateInteraction(
	HEXINT64 spTelemetryInfo->uniqueKey,
	UINT32 spTelemetryInfo->inputType,
	UINT32 spTelemetryInfo->interactionType,
	UINT16 spTelemetryInfo->numTouchPoints,
	UINT32 spTelemetryInfo->manipulationFrameId,
	UINT32 spTelemetryInfo->pointerFrameId,
	UINT64 spTelemetryInfo->qpcKernelInputStart,
	UINT64 spTelemetryInfo->qpcHostInputSend,
	UINT64 spTelemetryInfo->qpcContainerInputReceive,
	UINT64 spTelemetryInfo->qpcInteractionLibraryStart,
	UINT64 spTelemetryInfo->qpcInteractionLibraryStop,
	UINT64 spTelemetryInfo->hostPerformanceFrequency,
	UINT32 spTelemetryInfo->numCoalescedFrames
	);

CManipulationTelemetryData::BeginInteraction(
	UNICODESTRING appId,
	HEXINT64 telemetryInfo.uniqueKey,
	UINT16 telemetryInfo.surfaceWidth,
	UINT16 telemetryInfo.surfaceHeight,
	UINT32 telemetryInfo.appType,
	UINT32 telemetryInfo.interactionLibraryType
	);

CManipulationTelemetryData::SendUpdateToRenderThread(
	HEXINT64 object,
	UINT32 m_mtData.InputType,
	UINT32 m_mtData.FrameId,
	UINT32 m_mtData.ManipulationFrameId,
	BOOLEAN m_mtData.FrameTimes,
	INT64 KernelInputReadQPC,
	INT64 HostInputSendQPC,
	INT64 ContainerInputReceiveQPC,
	UINT64 m_mtData.qpcManipulationThreadStartTime,
	UINT64 m_mtData.qpcManipulationThreadStopTime,
	UINT32 m_mtData.cCoalescedFrames,
	UINT32 m_mtData.cContacts
	);

Perf::DWM(
	UNICODESTRING Name
	);

Perf::DWM(
	UNICODESTRING Name
	);

GestureTargeting::UpdateInteraction Config(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	ANSISTRING UpdateType,
	ANSISTRING InputType,
	UINT32 ConfigCount,
	UINT32 ConfigIndex,
	NTSTATUS Interactions,
	ANSISTRING PanXIncreasing,
	ANSISTRING PanXDecreasing,
	ANSISTRING PanYIncreasing,
	ANSISTRING PanYDecreasing,
	ANSISTRING ZoomIncreasing,
	ANSISTRING ZoomDecreasing,
	ANSISTRING Tap,
	ANSISTRING Hold,
	ANSISTRING Button,
	ANSISTRING Eraser,
	ANSISTRING Hover,
	ANSISTRING Wheel,
	ANSISTRING DisableGestures,
	ANSISTRING StopInertia,
	HEXINT32 MinContacts,
	HEXINT32 MaxContacts
	);

GestureTargeting::UpdateInteraction Config(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	ANSISTRING UpdateType,
	ANSISTRING InputType,
	UINT32 ConfigCount
	);

Setting Pointer Target(
	UINT32 frameId,
	UINT32 pointerId,
	HEXINT64 Input Sink
	);

Gesture Targeting Result(
	UINT32 pointerId,
	HEXINT64 InputHandler,
	UINT32 PointerResult,
	INT32 x,
	INT32 y,
	INT32 HRESULT
	);

CGlobalManipulationManager::ProcessManipulationInfo(
	UINT32 pFrame->FrameId,
	UINT32 pFrame->telemetryData.ManipulationFrameId,
	UINT32 pFrame->cPointers,
	UINT64 pFrame->PerfCount,
	INT64 pFrame->FrameTimes().qpcKernelInputRead,
	UINT32 pFrame->PointerType
	);

GestureTargeting::UpdateInteraction TempConfig(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	ANSISTRING UpdateType,
	BOOLEAN Enabled,
	ANSISTRING Axis,
	TID Flags,
	ANSISTRING PanXIncreasing,
	ANSISTRING PanXDecreasing,
	ANSISTRING PanYIncreasing,
	ANSISTRING PanYDecreasing,
	ANSISTRING ZoomIncreasing,
	ANSISTRING ZoomDecreasing
	);

GestureTargeting::UpdateInteraction Capture(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	UINT32 PointerId,
	UINT32 FrameId,
	UINT64 PointerTimestamp,
	BOOLEAN HasBufferedOutput
	);

GestureTargeting::UpdateInteraction Config (UNKNOWN INPUT TYPE)(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	ANSISTRING UpdateType,
	UINT32 InputType,
	UINT32 ConfigCount
	);

GestureTargeting::UpdateInteraction Rails(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	BOOLEAN Enabled,
	ANSISTRING Axis
	);

GestureTargeting::SetPointerResult(
	INT64 InputQPC,
	INT64 KernelInputReadQPC,
	UINT32 FrameId,
	UINT32 PointerId,
	ANSISTRING Result,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource
	);

GestureTargeting::RoutePointer(
	INT64 InputQPC,
	INT64 KernelInputReadQPC,
	UINT32 FrameId,
	UINT32 PointerId,
	HEXINT64 InputSink
	);

GestureTargeting::UpdateInteraction(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	HEXINT64 Visual
	);

GestureTargeting::UpdateInteraction Config(
	ANSISTRING Type,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource,
	ANSISTRING UpdateType,
	ANSISTRING InputType,
	UINT32 ConfigCount,
	UINT32 ConfigIndex,
	NTSTATUS Interactions,
	ANSISTRING PanXIncreasing,
	ANSISTRING PanXDecreasing,
	ANSISTRING PanYIncreasing,
	ANSISTRING PanYDecreasing,
	ANSISTRING ZoomIncreasing,
	ANSISTRING ZoomDecreasing,
	ANSISTRING Tap,
	ANSISTRING Hold,
	ANSISTRING Button,
	ANSISTRING Eraser,
	ANSISTRING Hover,
	ANSISTRING Wheel,
	ANSISTRING DisableGestures,
	ANSISTRING StopInertia
	);

GestureTargeting::QueuePointerFrame(
	INT64 InputQPC,
	INT64 KernelInputReadQPC,
	UINT32 FrameId,
	UINT32 PointerCount
	);

GestureTargeting::DequeuePointerFrame(
	INT64 InputQPC,
	INT64 KernelInputReadQPC,
	UINT32 FrameId,
	UINT32 PointerCount
	);

FeatureUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 kind,
	UINT64 addend
	);

EnabledFeatureUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 kind,
	UINT64 addend
	);

FeatureVariantUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 variantKind,
	UINT8 variant,
	UINT64 addend
	);

FeatureError(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	HRESULT hr,
	ANSISTRING file,
	UINT16 lineNumber,
	ANSISTRING module,
	ANSISTRING process,
	ANSISTRING originFile,
	UINT16 originLineNumber,
	ANSISTRING originModule,
	ANSISTRING originName,
	ANSISTRING message,
	ANSISTRING callerModule,
	UINT32 callerReturnAddressOffset,
	ANSISTRING originCallerModule,
	UINT32 originCallerReturnAddressOffset
	);

CManipulationContext::RevalidateMCTree MCTreeAncestor(
	HEXINT64 pMC,
	HEXINT64 pIter
	);

CManipulationContext::RevalidateMCTree(
	HEXINT64 pMC,
	HEXINT64 pVisTreeNextParent,
	HEXINT64 pMCTreeNextParent
	);

CManipulationContext::RevalidateMCTree VisTreeAncestor(
	HEXINT64 pMC,
	HEXINT64 pIter
	);

CManipulationContext::RevalidateMCTree MCWalk(
	HEXINT64 pMC,
	HEXINT64 pVisTreeNextParent,
	HEXINT64 pMCTreeNextParent,
	HEXINT64 pChild,
	BOOL32 fIgnoreDefault
	);

CManipulationContext::CleanStaleFork(
	HEXINT64 pMC,
	HEXINT64 pIter,
	HEXINT64 pIterParent,
	UINT32 pIter->numContacts
	);

CManipulationContext::RemoveInteractionLeafFromTree(
	HEXINT64 pInteraction
	);

CManipulationContext::RevalidateMC(
	HEXINT64 this,
	HEXINT64 spMCMatch,
	INT32 iContact,
	INT32 m_contactInteractionMap.GetSize(),
	HEXINT64 pRoot
	);

GestureTargeting::SetInteractionChain NONE(
	UINT32 PointerId
	);

GestureTargeting::SetInteractionChain(
	UINT32 PointerId,
	HEXINT64 InteractionObject,
	HEXINT64 ResourceObject,
	ANSISTRING Type,
	ANSISTRING Default,
	UINT32 HitTestHandle,
	HEXINT64 InputSink,
	UINT32 ProcessId,
	BOOL32 PalmRejection,
	BOOL32 InputTransparency,
	BOOL32 HoverSource
	);

HolographicInteropTargetCreated(
	INT32 AdapterLuid.HighPart,
	UINT32 AdapterLuid.LowPart
	);

DwmHolographicSuspendRequest(
	BOOLEAN Suspend
	);

HolographicClientCreated(
	VOID
	);

DwmHolographicCompositionAdd(
	VOID
	);

DwmHolographicViewerRemove(
	UINT32 Id
	);

DwmHolographicCompositionRemove(
	VOID
	);

DwmHolographicViewerAdd(
	UINT32 Id,
	UINT32 OwningProcessId
	);

DwmHolographicViewerUpdate(
	UINT32 Id
	);

DwmHolographicDisplayAdd(
	UINT32 Id,
	GUID SystemDisplayGuid
	);

DwmHolographicDisplayUpdate(
	UINT32 Id
	);

DwmHolographicDisplayRemove(
	UINT32 Id
	);

DwmHolographicInteropTextureAdd(
	UINT32 Id,
	BOOLEAN Stereoscopic
	);

DwmHolographicInteropTextureRemove(
	UINT32 Id
	);

DwmHolographicInteropTextureSizeChanged(
	UINT32 Id,
	UINT32 NewWidth,
	UINT32 NewHeight
	);

AppSwapChainTelemetry(
	UNICODESTRING appName,
	UINT32 UTCReplace_AppId,
	UINT32 appProcessId,
	BOOLEAN isVideoContent,
	UINT64 swapChainTime,
	UINT64 directFlipTime,
	UINT64 overlayTime,
	UINT64 independentFlipTime
	);

