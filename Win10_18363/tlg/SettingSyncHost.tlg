ProviderNames:
	Microsoft.Windows.BackupAndRoaming.WilProvider
	Microsoft.Windows.BackupAndRoaming.SyncOperations
	Microsoft.Windows.BackupAndRoaming.Diagnostics
	Microsoft.Windows.BackupAndRoaming.SyncEngine
	Microsoft.Windows.TlgAggregateInternal
	TelemetryAssert
	TelemetryAssertDiagTrack



**** Events *****
FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

DeleteMetadataStoresActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

DeleteMetadataStoresActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

DeleteMetadataStoresActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	HEX wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PerformSingleOperation(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT32 OperationFlags,
	GUID OperationId,
	INT32 OperationOrigin,
	INT32 Priority,
	INT32 AccountType,
	UNICODESTRING CollectionId
	);

PerformSingleOperation(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PerformSingleOperation(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GetRemoteBackupCollectionIdsActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

GetRemoteBackupCollectionIdsActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetRemoteBackupCollectionIdsActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetRemoteRoamingCollectionIdsActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

GetRemoteRoamingCollectionIdsActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetRemoteRoamingCollectionIdsActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

CorruptedStructuredStateAppData(
	VOID
	);

OnWorkFinished(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT32 OperationFlags,
	GUID OperationId,
	INT32 OperationOrigin,
	INT32 Priority,
	INT32 AccountType,
	UNICODESTRING CollectionId,
	INT32 SyncResult
	);

OnWorkFinished(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

OnWorkFinished(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

DatabaseSizes(
	UINT64 LocalDataBaseSize,
	UINT64 RemoteDataBaseSize
	);

EnsureNoEdgeDataLossSuccess(
	UINT64 Count,
	UINT64 PreviousCount,
	BOOL32 PreviousCountFound
	);

NotificationSubscriptionLimitExceeded(
	VOID
	);

DeviceTrustRefreshed(
	UNICODESTRING CallingOperation,
	BOOL32 PreviousState,
	BOOL32 NewState,
	HEXINT32 HResult
	);

MigrationDownsyncMaxAttemptPeriodExceeded(
	UNICODESTRING CollectionId
	);

LiveStorageMetabaseInvalidModifiedTime(Aggregate)(
	NULL Count,
	UNICODESTRING CollectionId,
	UNICODESTRING SettingUnitId,
	UNICODESTRING Context,
	INT64 DateModified
	);

CheckCollectionThrottlingFailed(Aggregate)(
	NULL Count,
	UNICODESTRING CollectionId,
	HEXINT32 HResult
	);

PdcRevocation(
	HEXINT64 PDCHandle,
	HEXINT64 PDCActivationHandle
	);

BackupNotAllowedOnNetwork(
	NULL Count
	);

PdcClientUnregistrationFailed(
	HEXINT32 HResult,
	HEXINT64 PDCHandle
	);

PdcDeactivationFailed(
	HEXINT32 HResult,
	HEXINT64 PDCHandle,
	HEXINT64 PDCActivationHandle
	);

MsaPolicyDocumentNotCached(
	VOID
	);

PdcClientRegistrationFailed(
	HEXINT32 HResult
	);

SettingUnitMetadataFiletime(
	UNICODESTRING ContextMessage,
	UNICODESTRING CollectionId,
	UNICODESTRING SettingUnitId,
	FILETIME CurrentTime,
	FILETIME SettingUnitModifiedTime,
	FILETIME MetadataModifiedTime,
	INT64 SettingUnitModifiedTimeInt64,
	INT64 MetadataModifiedTimeInt64
	);

LogCollectionThrottledForUpload(Aggregate)(
	NULL Count,
	UNICODESTRING CollectionId
	);

ScheduleUploadComplete(Aggregate)(
	NULL Count,
	HEXINT32 HResult
	);

SyncOperationEnded(
	UNICODESTRING ContextMessage,
	UNICODESTRING CollectionId,
	HEXINT32 SyncOperationFlag,
	HEXINT32 hrResult
	);

NewMetadataItemCreated(
	UNICODESTRING CollectionId,
	UNICODESTRING UnitId,
	UINT64 SyncGIDPrefix,
	GUID SyncGIDUniqueId,
	UNICODESTRING CallingMethod
	);

GetMsaLoginProofTokenFailed(
	HRESULT HResult,
	BOOL32 IsDeviceTrusted
	);

InvalidateMsaTokenCache(
	FILETIME CurrentTime,
	FILETIME LastTokenCacheInvalidationTime
	);

GetMsaTokenFailed(
	UINT32 WebTokenRequestStatus,
	HEXINT32 TBCoreHResult,
	HEXINT32 WebProviderError,
	BOOL32 WebProviderErrorAvailable
	);

SingletonCreateInstanceFailed(
	UNICODESTRING riid
	);

SyncAtPostLogon(
	HEXINT32 HResult
	);

AppRestoreStuck(
	UNICODESTRING FullyQualifiedCollectionId
	);

UnableToSaveFindChangesMetadata(
	UNICODESTRING FullyQualifiedCollectionId
	);

StagingAppVersionMismatch(
	UNICODESTRING FullyQualifiedCollectionId,
	UINT32 EnumerationMode
	);

GetSettingHandlerInstanceFromFullyQualifiedCollectionIdFailed(
	UNICODESTRING CallingMethod,
	UNICODESTRING CollectionId,
	HEXINT32 HResult
	);

SyncGIDsOfFailingSync(
	UNICODESTRING CollectionId,
	UNICODESTRING UnitId,
	UINT64 SyncGIDPrefix,
	GUID SyncGIDUniqueId
	);

SpecificSyncUnitErrorHitWithSyncGID(
	UNICODESTRING CollectionId,
	UNICODESTRING UnitId,
	UINT64 SyncGIDPrefix,
	GUID SyncGIDUniqueId,
	HEXINT32 ErrorCode,
	UINT32 ProviderOperation,
	UINT32 SyncOperation
	);

CheckMetadataStores(
	BOOL32 ThereWasAnInvalidSyncGIdError,
	HRESULT InvalidSyncGIdErrorHresult,
	BOOL32 IsPhoneDevice,
	BOOL32 ReplicasHaveBeenCleanedSinceLastFix,
	BOOL32 ShouldDeleteMetadataStores
	);

ResurrectDeletedItemWithoutSettingUnitId(
	UNICODESTRING CollectionId,
	UNICODESTRING UnitId
	);

DeletedMetadataStores(
	VOID
	);

OneDriveUploadBatch(
	UNICODESTRING collectionId,
	UNICODESTRING operation,
	HEXINT32 hr,
	UINT32 unitCount,
	UINT64 totalBytes
	);

BackupDisabledInCloud(
	BOOL32 CloudResponse,
	BOOL32 Outcome
	);

IdentityChange(
	BOOL32 IsRoamingEnabled,
	UINT32 RoamingReasonCode,
	BOOL32 IsBackupEnabled,
	UINT32 BackupReasonCode,
	GUID ProviderId,
	HEXINT32 HResult,
	ANSISTRING AccountSyncing
	);

LiveStorageRedirect(
	UNICODESTRING itemURL,
	HRESULT Execute result
	);

GetSettingSyncOperationInfoForCollection(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	GUID OperationId,
	INT32 OperationOrigin,
	INT32 Priority,
	INT32 AccountType
	);

GetSettingSyncOperationInfoForCollection(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function,
	GUID OperationId,
	INT32 OperationOrigin,
	INT32 Priority,
	INT32 AccountType
	);

GetSettingSyncOperationInfoForCollection(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT32 OperationFlags,
	UNICODESTRING CollectionId
	);

GetSettingSyncOperationInfoForCollection(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetSettingSyncOperationInfoForCollection(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

TlgAggregateSummary(
	GUID Provider,
	UINT64 NumFlushes,
	UINT64 MaxEntriesStored,
	UINT64 TotalEntriesFlushed,
	UINT32 MaxEntriesFlushed,
	UINT32 MinEntriesFlushed,
	UINT32 NumBucketLimitReached,
	UINT32 NumAllocationFailures,
	UINT32 NumLargeEventFailures
	);

GetMsaToken(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING ServiceName,
	UNICODESTRING Policy
	);

GetMsaToken(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetMsaToken(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

RoamingScenarioQOS(
	UINT32 ScenarioId,
	HEXINT32 HResult,
	UINT32 ErrorType,
	UINT32 Duration,
	HEXINT64 TransactionId,
	UNICODESTRING StringArgument,
	UINT32 DwordArgument,
	GUID ProviderId,
	UNICODESTRING IdentityHash,
	UINT32 UnitsSucceeded,
	UINT32 UnitsFailed,
	UINT64 UnitsSize,
	GUID OperationId,
	UINT32 OperationOrigin,
	UINT32 Priority,
	UINT32 AccountType
	);

RoamingAPIQOS(
	UINT32 APICode,
	HEXINT32 HResult,
	UINT32 Duration,
	UNICODESTRING StringArgument,
	UINT32 DwordArgument
	);

PerformPdcActivation(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

PerformPdcActivation(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PerformPdcActivation(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

LogonFindChanges(
	HEXINT32 HResult,
	INT64 Duration
	);

EnumerateRestoreCollections(
	UINT32 BackupType,
	HEXINT32 HResult,
	UNICODESTRING DeviceId,
	UINT32 RootItemCount,
	UINT32 CollectionCount
	);

BootstrapRestore(
	UNICODESTRING DeviceIdToRestoreFrom,
	HEXINT32 HResult,
	UINT32 NumRetries
	);

AttemptSyncActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UINT32 uploadSyncAttempts,
	UINT32 downloadSyncAttempts,
	UINT32 backupSyncAttempts,
	UINT32 restoreSyncAttempts
	);

AttemptSyncActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function,
	UINT32 uploadSyncAttempts,
	UINT32 downloadSyncAttempts,
	UINT32 backupSyncAttempts,
	UINT32 restoreSyncAttempts
	);

AttemptSyncActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

AttemptSyncActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

AttemptSyncActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

Assert(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

AssertWithArgs(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	ANSISTRING originatingBinary,
	UINT32 bucketArgument1,
	UINT32 bucketArgument2,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

EmptyStructuredState(
	UNICODESTRING CollectionId
	);

ParseLiveMetadata(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ParseLiveMetadata(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ParseLiveMetadata(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

DetectEdgeDataLossActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

DetectEdgeDataLossActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

DetectEdgeDataLossActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

