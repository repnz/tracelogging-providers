ProviderNames:
	Microsoft.Windows.Provisioning.ProvTool



**** Events *****
AddPackageStarted(
	VOID
	);

ProvToolStartedCmdLine(
	UNICODESTRING ProvToolCommandLine
	);

ManagementRefreshStarted(
	INT32 Timeloop
	);

ApplyTurnEnded(
	INT32 HResult
	);

ProvToolActivities(
	VOID
	);

CleanupLockScreenText(
	INT32 HResult
	);

ApplyTurnStarted(
	UINT32 ProvisioningTurn
	);

BootPostReset(
	VOID
	);

AddPackageEnded(
	INT32 HResult
	);

ProvToolActivities(
	VOID
	);

RemovePackageEnded(
	INT32 HResult
	);

RemovePackageStarted(
	VOID
	);

ProvToolEnded(
	INT32 HResult
	);

ManagementRefreshEnded(
	INT32 HResult,
	INT32 TimeloopInitiated
	);

ProvToolStarted(
	VOID
	);

ActivityStoppedAutomatically(
	VOID
	);

BootNotPostReset(
	VOID
	);

CleanUpLockScreenText(
	VOID
	);

PackageCollectorSearchDone(
	VOID
	);

PackageCollectorPathCchCombineFullName(
	UNICODESTRING Path,
	UNICODESTRING FileName,
	INT32 HResult
	);

PackageCollectorPackageFound(
	UNICODESTRING Path,
	UNICODESTRING FileName
	);

PackageCollectorFindError(
	UNICODESTRING Path,
	UINT32 LastError
	);

PackageCollectorFileNotFound(
	UNICODESTRING Path
	);

PackageCollectorPathCchCombine(
	UNICODESTRING Path,
	INT32 HResult
	);

InvalidPackageExtension(
	UNICODESTRING Path,
	UNICODESTRING Name,
	INT32 HResult
	);

InvalidPath(
	UNICODESTRING Path
	);

NonPpkgDefaultPathFile(
	UNICODESTRING Path,
	UNICODESTRING Name
	);

PackageCollectorSkippingPackagePath(
	UNICODESTRING Path
	);

PackageCollectorPathAdd(
	UNICODESTRING Path,
	INT32 HResult
	);

PackageCollectorPathAdd(
	UNICODESTRING Path
	);

PackageCollectorDeinit(
	VOID
	);

PackageCollectorInit(
	VOID
	);

RemoveProvPackagePackageFail(
	UNICODESTRING Path,
	UINT32 LastError
	);

RemoveProvPackage(
	UNICODESTRING Path
	);

GetNextElementTooMany(
	INT32 HResult
	);

GetNextElementFailed(
	INT32 HResult
	);

NonProvisioningPackage(
	UNICODESTRING PackageId,
	UNICODESTRING PackagePath
	);

EnumerateElementsFailed(
	INT32 HResult
	);

ProvPackageNotOpened(
	VOID
	);

ProvPackageOpened(
	UNICODESTRING PackageName,
	INT32 HResult
	);

GetProvisionPackageNameFailed(
	INT32 HResult
	);

TryCreateProvisioningFileManagerOnPPKGFailed(
	UNICODESTRING Path
	);

OpenProvisioningPackageFailed(
	UNICODESTRING Path,
	INT32 HResult
	);

ProvPackageIsEmpty(
	VOID
	);

OpeningProvPackage(
	UNICODESTRING Path
	);

AutoDeleteFileStreamFailed(
	UNICODESTRING Path
	);

