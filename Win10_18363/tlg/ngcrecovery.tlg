ProviderNames:
	Microsoft.Windows.Security.NGC.Recovery
	Microsoft.Windows.Security.NGC.Recovery
	TelemetryAssert
	TelemetryAssertDiagTrack



**** Events *****
PdcActivationTimedOut(
	UINT32 ActivationCallbackReason
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

RecoverPin(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ProtectPinRecoverySecret(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

IsNonDestructivePinRecoveryEnabled(
	UINT64 PartA_PrivTags,
	UINT32 containerStatus,
	UINT32 ngcPolicyStatus,
	BOOLEAN doesRecoveryBlobExist,
	BOOLEAN isPinRecoveryAvailable,
	HRESULT retVal,
	ANSISTRING __TlgCV__
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ResetPin(
	HRESULT status,
	INT64 duration,
	BOOLEAN silent,
	ANSISTRING __TlgCV__
	);

ProtectPinRecoverySecret(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

RecoverPin(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ResetPinBlobData(
	HRESULT status,
	GUID tenantId,
	UINT32 joinType,
	ANSISTRING __TlgCV__
	);

NgcRecoveryUsingRelaxedCertValidation(
	VOID
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

RecoverPinSilent(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ProtectPinRecoverySecret(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

RecoverPinSilent(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

RecoverPinSilent(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

RecoverPin(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ConvertSidToStringSid(
	UINT32 retVal
	);

LookupAccountSidLocal(
	UINT32 retVal
	);

GetTokenInformation(
	UINT32 retVal
	);

GetUserInfoFromToken(
	INT32 retVal
	);

QueryUserToken(
	UINT32 retVal
	);

QueryActiveSession(
	UINT32 retVal
	);

QueryActiveSessionNotPresent(
	INT32 retVal
	);

CacheGetUserNameAndDomain(
	SID userSid,
	UNICODESTRING userName,
	UNICODESTRING domain
	);

InvalidSidNameUse(
	INT32 retVal,
	UINT32 sidNameUse
	);

LsaLookupSids2(
	INT32 retVal
	);

LookupAccountSidLocalW(
	UINT32 retVal
	);

FallBackToLocalSidLookup(
	INT32 retVal
	);

LsaOpenPolicy(
	INT32 retVal
	);

LsaLookupUserAccountType(
	INT32 retVal
	);

NgcMgmtRecoverPinSilentClientBind(
	INT32 retVal
	);

I_NgcMgmtRecoverPinSilent(
	INT32 retVal
	);

ClientRpcRecoverableError(
	INT32 retVal
	);

NgcMgmtRecoverPinClientBind(
	INT32 retVal
	);

c_NgcMgmtRecoverPin(
	INT32 retVal
	);

NgcMgmtGetProtectedRecoveryBlobClientBind(
	INT32 retVal
	);

I_NgcMgmtGetProtectedRecoveryBlob(
	INT32 retVal
	);

NgcMgmtEnumContainersClientBind(
	INT32 retVal
	);

c_NgcMgmtEnumContainers(
	INT32 retVal
	);

RegGetValueW(
	INT32 retVal
	);

RpcClientBindError(
	INT64 retVal
	);

RpcClientCreateBindingHandleError(
	INT32 retVal
	);

RpcClientAlreadyBound(
	VOID
	);

NoNewBindAttemptsOnUnrecoverableError(
	INT32 retVal
	);

RpcClientCreateSecurityDescriptorFailure(
	UINT32 retVal
	);

RpcClientInvalidServerSid(
	UINT32 retVal
	);

RpcClientCannotCopyServerSid(
	UINT32 retVal
	);

Assert(
	UINT32 assertVersion,
	UINT32 rva,
	UINT32 timestamp,
	UINT32 imageSize,
	ANSISTRING imageName,
	UINT32 count,
	UINT32 totalHits,
	UINT32 ModuleCollection,
	UINT32 GlobalCollection
	);

