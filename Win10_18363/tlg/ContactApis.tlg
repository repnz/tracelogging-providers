ProviderNames:
	Microsoft.Windows.UserDataAccess.ContactApis
	Microsoft.Windows.UserDataAccess.UserDataApisBase



**** Events *****
SaveContactAsync(
	UNICODESTRING LocalId,
	UINT64 ElapsedTime,
	UINT32 Count
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ShowContactCard(
	UNICODESTRING callerPfn,
	BOOLEAN isDelayLoad,
	INT32 headerKind,
	INT32 initialTabKind,
	UINT32 contactListIdCount,
	GUID correlationGuid
	);

ShowContactCardAppLaunch(
	GUID correlationGuid
	);

ShowFullContactCard(
	VOID
	);

RequestMissingOpKindError(
	UNICODESTRING CallerName
	);

RequestParsingError(
	UNICODESTRING CallerName,
	UINT32 OpKind,
	INT32 HR
	);

FindContacts(
	UNICODESTRING OpName,
	BOOL32 HasOptions,
	UINT64 ElapseTime,
	UINT32 Size,
	UINT32 Count
	);

GetContactReader(
	ANSISTRING File,
	ANSISTRING Function,
	BOOL32 HasOptions,
	UINT32 Count
	);

GetResultsError(
	UNICODESTRING ProviderName,
	ANSISTRING File,
	INT32 HR
	);

Unlink(
	UNICODESTRING aggregateId,
	UNICODESTRING contactId
	);

Link(
	BOOLEAN wasAgg1,
	UNICODESTRING aggregateId1,
	BOOLEAN wasAgg2,
	UNICODESTRING aggregateId2
	);

OpenStream(
	UINT32 EventCount,
	UINT32 PropCode,
	UNICODESTRING LocalId
	);

ReconnectSession(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 Session
	);

RetryConnectionWaitFailure(
	UINT32 hr,
	UINT32 session
	);

ReceiveServiceInitialize(
	INT32 initialized
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ReconnectSession(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ReconnectSession(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

