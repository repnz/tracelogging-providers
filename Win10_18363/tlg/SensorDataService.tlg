ProviderNames:
	Microsoft-Windows-PerceptionSensorDataService-Verbose
	Microsoft-Windows-PerceptionSensorDataService



**** Events *****
IGNORE_HR(
	UNICODESTRING DebugInfoEvent
	);

ServiceInitializationFailure(
	UNICODESTRING Source,
	UINT32 ErrorCode
	);

ServiceInitializationFailure(
	UNICODESTRING Source,
	UINT32 ErrorCode
	);

IFR(
	UNICODESTRING DebugInfoEvent
	);

IFR_VERIFY(
	UNICODESTRING DebugInfoEvent
	);

ClientDisconnected(
	UINT32 ClientProcessId,
	UNICODESTRING ClientProcessName
	);

ConnectionManagerRemoveClientConnection(
	UNICODESTRING DebugInfoEvent
	);

ClientConnected(
	UINT32 ClientProcessId
	);

ConnectionManagerEstablishClientConnection(
	UNICODESTRING DebugInfoEvent
	);

ActivityStoppedAutomatically(
	VOID
	);

ProviderCallWatchdogTimeout(
	UNICODESTRING RegistryKeyName,
	UNICODESTRING ProviderId,
	UNICODESTRING ProviderDisplayName,
	UNICODESTRING Description,
	UINT32 Timeout,
	UINT32 QueueCount,
	UINT32 MaxQueueCount
	);

ProviderCallWatchdogTimeout(
	UNICODESTRING RegistryKeyName,
	UNICODESTRING ProviderId,
	UNICODESTRING ProviderDisplayName,
	UNICODESTRING Description,
	UINT32 Timeout,
	UINT32 QueueCount,
	UINT32 MaxQueueCount
	);

SourceManagerRemoveFrameProviderId(
	VOID
	);

SourceManagerRemoveFrameProviderId(
	UNICODESTRING EventLogEvent
	);

SourceManagerRemoveFaceAuthenticationGroupIds(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerRemoveFaceAuthenticationGroupIds(
	VOID
	);

SourceManagerRemoveFaceAuthenticationGroupIds(
	UNICODESTRING EventLogEvent
	);

SourceManagerRemoveCorrelationGroupIds(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerRemoveCorrelationGroupIds(
	VOID
	);

SourceManagerRemoveCorrelationGroupIds(
	UNICODESTRING EventLogEvent
	);

SourceManagerRemoveControlGroupIds(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerRemoveControlGroupIds(
	VOID
	);

SourceManagerRemoveControlGroupIds(
	UNICODESTRING EventLogEvent
	);

SourceManagerUpdateProviderAvailability(
	VOID
	);

SourceManagerUpdateProviderAvailability(
	UNICODESTRING EventLogEvent
	);

SourceManagerFaceAuthenticationGroupRemove(
	VOID
	);

SourceManagerFaceAuthenticationGroupRemove(
	UNICODESTRING EventLogEvent
	);

SourceManagerFaceAuthenticationGroupAdd(
	VOID
	);

SourceManagerFaceAuthenticationGroupAdd(
	UNICODESTRING EventLogEvent
	);

SourceManagerCorrelationGroupRemove(
	VOID
	);

SourceManagerCorrelationGroupRemove(
	UNICODESTRING EventLogEvent
	);

SourceManagerCorrelationGroupAdd(
	VOID
	);

SourceManagerCorrelationGroupAdd(
	UNICODESTRING EventLogEvent
	);

SourceManagerControlGroupRemove(
	VOID
	);

SourceManagerControlGroupRemove(
	UNICODESTRING EventLogEvent
	);

SourceManagerControlGroupAdd(
	VOID
	);

SourceManagerControlGroupAdd(
	UNICODESTRING EventLogEvent
	);

SourceManagerControlGroupAdd(
	VOID
	);

SourceManagerControlGroupAdd(
	UNICODESTRING EventLogEvent
	);

SourceManagerFrameProviderRemove(
	VOID
	);

SourceManagerFrameProviderRemove(
	UNICODESTRING EventLogEvent
	);

SourceManagerFrameProviderAdd(
	VOID
	);

SourceManagerFrameProviderAdd(
	UNICODESTRING EventLogEvent
	);

SourceManagerMissingSource(
	VOID
	);

SourceManagerMissingSource(
	UNICODESTRING EventLogEvent
	);

SourceManagerMissingProvider(
	VOID
	);

SourceManagerMissingProvider(
	UNICODESTRING EventLogEvent
	);

SourceManagerRegistryChangeActivity(
	VOID
	);

SourceManagerRegistryChangeStop(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerProviderRemoved(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerProviderCached(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerProviderCaching(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerProviderInitializing(
	UNICODESTRING DebugInfoEvent
	);

FrameProviderMissingActivatableClassRegistryEntry(
	VOID
	);

FrameProviderMissingActivatableClassRegistryEntry(
	UNICODESTRING EventLogEvent
	);

FrameProviderMissingModulePathRegistryEntry(
	VOID
	);

FrameProviderMissingModulePathRegistryEntry(
	UNICODESTRING EventLogEvent
	);

SourceManagerRegistryChangeStart(
	UNICODESTRING DebugInfoEvent
	);

SourceManagerRegistryChangeActivity(
	VOID
	);

SourceManagerShutdown(
	UNICODESTRING DebugInfoEvent
	);

ThreadSafetyFailCritical(
	UNICODESTRING KpiDataEvent
	);

ClientConnectionSourceClose(
	UNICODESTRING DebugInfoEvent
	);

ClientConnectionSourceOpen(
	UNICODESTRING DebugInfoEvent
	);

SendCorrelationSourceSetRegisterFail(
	UNICODESTRING DebugInfoEvent
	);

SendSourceRegisteredFail(
	VOID
	);

SendSourceRegisteredFail(
	UNICODESTRING EventLogEvent
	);

ClientConnection::HandleMessage(
	ANSISTRING Description,
	UINT32 MessageType,
	ANSISTRING MessageTypeString,
	INT32 Result
	);

ClientConnection::HandleMessage(
	ANSISTRING Description,
	UINT32 MessageType,
	ANSISTRING MessageTypeString
	);

FaceAuthenticationGroupUnregistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceSetTag,
	UNICODESTRING SourceIds
	);

FaceAuthenticationGroupRegistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceSetTag,
	UNICODESTRING SourceIds
	);

CorrelationGroupUnregistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceSetTag,
	UNICODESTRING SourceIds
	);

CorrelationGroupRegistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceSetTag,
	UNICODESTRING SourceIds
	);

ControlGroupUnregistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceSetTag,
	UNICODESTRING SourceIds
	);

ControlGroupRegistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceSetTag,
	UNICODESTRING SourceIds
	);

FrameProviderInfoUnregistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceTag,
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName
	);

FrameProviderInfoRegistered(
	UNICODESTRING ProviderManagerRegistryKeyName,
	UINT64 SourceTag,
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName,
	UNICODESTRING DeviceKind,
	UNICODESTRING FrameKind,
	BOOLEAN Hidden,
	BOOLEAN Available
	);

ProviderManagerModuleUnloaded(
	UNICODESTRING RegistryKeyName,
	UNICODESTRING ModulePath,
	UNICODESTRING ActivatableClass
	);

ProviderManagerStopped(
	UNICODESTRING RegistryKeyName
	);

ProviderControlFail(
	VOID
	);

ProviderControlFail(
	UNICODESTRING EventLogEvent
	);

ProviderManagerStarted(
	UNICODESTRING RegistryKeyName
	);

ProviderManagerModuleLoaded(
	UNICODESTRING RegistryKeyName,
	UNICODESTRING ActivatableClass,
	UNICODESTRING FileVersion
	);

FrameProviderStopped(
	UINT64 SourceTag,
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName,
	UINT64 FrameCount,
	INT32 OpenCount,
	BOOL32 UTCReplace_AppSessionGuid
	);

FrameProviderAvailableChanged(
	UINT64 SourceTag,
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName,
	UINT8 Available
	);

FramePublished(
	UINT64 SourceTag,
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName,
	UINT64 FrameCount,
	BOOL32 UTCReplace_AppSessionGuid
	);

IFR_OVERRIDE(
	UNICODESTRING DebugInfoEvent
	);

FrameProviderStarted(
	UINT64 SourceTag,
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName,
	INT32 Count,
	BOOL32 UTCReplace_AppSessionGuid
	);

FrameProviderReleased(
	UINT64 SourceTag,
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName
	);

SensorDataServiceSourceInit(
	VOID
	);

SensorDataServiceSourceInit(
	UNICODESTRING EventLogEvent
	);

RegisterFrameProviderInfo(
	UNICODESTRING ProviderId,
	UNICODESTRING DisplayName,
	UNICODESTRING DeviceKind,
	UNICODESTRING FrameKind,
	UINT8 Hidden,
	BOOL32 UTCReplace_AppSessionGuid
	);

ControllerModeExited(
	UINT64 SourceSetTag,
	UNICODESTRING ProviderManagerRegistryKeyName,
	UNICODESTRING SourceIds,
	UINT32 ClientProcessId
	);

ControllerModeEntered(
	UINT64 SourceSetTag,
	UNICODESTRING ProviderManagerRegistryKeyName,
	UNICODESTRING SourceIds,
	UINT32 ClientProcessId,
	UINT32 PreviousClientProcessId
	);

FaceAuthenticationModeExited(
	UINT64 SourceSetTag,
	UNICODESTRING ProviderManagerRegistryKeyName,
	UNICODESTRING SourceIds,
	UINT64 ClientProcessId
	);

FaceAuthenticationModeEntered(
	UINT64 SourceSetTag,
	UNICODESTRING ProviderManagerRegistryKeyName,
	UNICODESTRING SourceIds,
	UINT64 ClientProcessId
	);

EncodePropertyFailed(
	UNICODESTRING Key,
	UNICODESTRING ValueRuntimeClassName
	);

