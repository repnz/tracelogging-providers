ProviderNames:
	Microsoft.Windows.Devices.Midi



**** Events *****
Errors(
	ANSISTRING Func,
	UINT32 LineNum,
	HRESULT HResult
	);

MidiSynthesizerSessionStatistics(
	UINT32 Messages Sent,
	UINT32 Buffers Sent,
	HEXINT64 objectPointer
	);

MidiSynthesizerSendBuffer(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer,
	HRESULT HResult
	);

MidiSynthesizerSendBuffer(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer,
	HRESULT HResult
	);

MidiSynthesizerSendMessage(
	HEXINT64 messagePointer,
	HRESULT HResult
	);

MidiSynthesizerSendMessage(
	HEXINT64 messagePointer,
	HRESULT HResult
	);

MidiOutPortSessionStatistics(
	UINT32 Messages Sent,
	UINT32 Buffers Sent,
	HEXINT64 objectPointer
	);

MidiOutPortSendBuffer(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer,
	HRESULT HResult
	);

MidiOutPortSendBuffer(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer,
	HRESULT HResult
	);

MidiOutPortSendMessage(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer,
	HRESULT HResult
	);

MidiOutPortSendMessage(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer,
	HRESULT HResult
	);

MidiInPortSessionStatistics(
	UINT32 Messages Received,
	HEXINT64 objectPointer
	);

MidiSynthesizerCreateFromAudioDeviceAsync(
	HRESULT HResult
	);

MidiSynthesizerCreateFromAudioDeviceAsync(
	HRESULT HResult
	);

MidiSynthesizerCreateAsync(
	HRESULT HResult
	);

MidiSynthesizerCreateAsync(
	HRESULT HResult
	);

MidiOutPortFromIdAsync(
	HRESULT HResult
	);

MidiOutPortFromIdAsync(
	HRESULT HResult
	);

MidiObjectsMemoryFootprint(
	UINT32 MidiMessageObjectCount,
	UINT64 MidiMessageObjectSize,
	UINT32 KSMidiDeviceObjectCount,
	UINT64 KSMidiDeviceObjectSize,
	UINT32 MidiPortMediatorObjectCount,
	UINT64 MidiPortMediatorObjectSize,
	UINT32 MidiPortBrokerObjectCount,
	UINT64 MidiPortBrokerObjectSize,
	UINT32 MidiPortBrokerFactoryObjectCount,
	UINT64 MidiPortBrokerFactoryObjectSize,
	UINT32 MidiInPortFactoryObjectCount,
	UINT64 MidiInPortFactoryObjectSize,
	UINT32 MidiMessageReceivedEventArgsObjectCount,
	UINT64 MidiMessageReceivedEventArgsObjectSize,
	UINT32 MidiOutPortFactoryObjectCount,
	UINT64 MidiOutPortFactoryObjectSize,
	UINT32 MidiPortBaseObjectCount,
	UINT64 MidiPortBaseObjectSize,
	UINT32 MidiInPortDeviceOperationObjectCount,
	UINT64 MidiInPortDeviceOperationObjectSize,
	UINT32 MidiOutPortDeviceOperationObjectCount,
	UINT64 MidiOutPortDeviceOperationObjectSize,
	UINT32 MidiInPortObjectCount,
	UINT64 MidiInPortObjectSize,
	UINT32 MidiOutPortObjectCount,
	UINT64 MidiOutPortObjectSize,
	UINT32 MidiSynthesizerObjectCount,
	UINT64 MidiSynthesizerObjectSize
	);

MidiMemoryFootprint(
	HEXINT64 objectPointer,
	UINT64 MidiAppPageFaultCount,
	UINT64 MidiAppWorkingSetSize,
	UINT64 MidiAppPeakWorkingSetSize,
	UINT64 MidiAppPageFileUsage,
	UINT64 MidiAppPeakPageFileUsage,
	UINT64 TotalMidiObjectsMemory
	);

MidiApiCallResults(
	HEXINT64 AggregatorId,
	HRESULT MidiInPortFromIdAsyncHresult,
	UINT32 MidiInPortFromIdAsyncSuccess,
	UINT32 MidiInPortFromIdAsyncFailure,
	HRESULT MidiOutPortFromIdAsyncInternalSynthHresult,
	UINT32 MidiOutPortFromIdAsyncInternalSynthSuccess,
	UINT32 MidiOutPortFromIdAsyncInternalSynthFailure,
	HRESULT MidiOutPortFromIdAsyncHresult,
	UINT32 MidiOutPortFromIdAsyncSuccess,
	UINT32 MidiOutPortFromIdAsyncFailure,
	HRESULT MidiSynthesizerCreateAsyncHresult,
	UINT32 MidiSynthesizerCreateAsyncSuccess,
	UINT32 MidiSynthesizerCreateAsyncFailure,
	HRESULT MidiSynthesizerCreateFromAudioDeviceAsyncHresult,
	UINT32 MidiSynthesizerCreateFromAudioDeviceAsyncSuccess,
	UINT32 MidiSynthesizerCreateFromAudioDeviceAsyncFailure,
	HRESULT MidiOutPortSendMessageHresult,
	UINT32 MidiOutPortSendMessageSuccess,
	UINT32 MidiOutPortSendMessageFailure,
	HRESULT MidiOutPortSendBufferHresult,
	UINT32 MidiOutPortSendBufferSuccess,
	UINT32 MidiOutPortSendBufferFailure,
	HRESULT MidiSynthesizerSendMessageHresult,
	UINT32 MidiSynthesizerSendMessageSuccess,
	UINT32 MidiSynthesizerSendMessageFailure,
	HRESULT MidiSynthesizerSendBufferHresult,
	UINT32 MidiSynthesizerSendBufferSuccess,
	UINT32 MidiSynthesizerSendBufferFailure
	);

MidiSynthesizerCreateFromAudioDeviceAsync(
	UNICODESTRING AudioDeviceId,
	HRESULT HResult
	);

MidiSynthesizerCreateFromAudioDeviceAsync(
	UNICODESTRING AudioDeviceId,
	HRESULT HResult
	);

MidiSynthesizerCreateAsync(
	HRESULT HResult
	);

MidiSynthesizerCreateAsync(
	HRESULT HResult
	);

MidiOutPortFromIdAsync(
	UNICODESTRING MidiOutDeviceId,
	HRESULT HResult
	);

MidiOutPortFromIdAsync(
	UNICODESTRING MidiOutDeviceId,
	HRESULT HResult
	);

MidiInPortFromIdAsync(
	UNICODESTRING MidiInDeviceId,
	HRESULT HResult
	);

MidiInPortFromIdAsync(
	UNICODESTRING MidiInDeviceId,
	HRESULT HResult
	);

MidiSynthesizerSendBuffer(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer
	);

MidiSynthesizerSendMessage(
	HEXINT64 messagePointer,
	INT32 MessageType,
	HEXINT64 objectPointer
	);

MidiOutPortSendBuffer(
	HEXINT64 messagePointer,
	HEXINT64 objectPointer
	);

MidiOutPortSendMessage(
	HEXINT64 messagePointer,
	INT32 MessageType,
	HEXINT64 objectPointer
	);

MidiInPort::MessageReceived(
	HEXINT64 This
	);

MidiInPort::MessageReceived(
	HEXINT64 This
	);

MidiInPortFromIdAsync(
	HRESULT HResult
	);

MidiSynthesizerCreateFromAudioDeviceAsync(
	UNICODESTRING audioDeviceId
	);

MidiSynthesizerCreateAsync(
	VOID
	);

MidiOutPortFromIdAsync(
	UNICODESTRING DeviceId
	);

MidiInPortFromIdAsync(
	UNICODESTRING DeviceId
	);

MidiPortBrokerCreated(
	UNICODESTRING Midi Device Id
	);

MidiMediatorConnectedStandby(
	HRESULT HResult
	);

MidiMediatorConnectedStandby(
	VOID
	);

MidiMessageReceivedFailed(
	HEXINT64 objectPointer,
	HRESULT HResult
	);

MidiMessageReceived(
	HEXINT64 objectPointer
	);

MidiDataReceivedNotifyBrokerFailed(
	HEXINT64 BrokerPointer,
	HRESULT HResult
	);

MidiPortMediator::MidiDataReceived(
	HEXINT64 This
	);

MidiPortMediatorCreated(
	UNICODESTRING Midi Device Id
	);

Create Midi Device adapter(
	UNICODESTRING Midi Device Id,
	BOOL32 isInput,
	BOOL32 isBleMidi,
	HRESULT HResult
	);

MidiPortBroker::AddMessageToQueue(
	HEXINT64 This
	);

MidiPortBroker::MidiPortBrokerWorker_MessageReady(
	VOID
	);

MidiPortBroker::MidiPortBrokerWorker_Terminating(
	VOID
	);

BleMidiOutDevice::WriteMidiData(
	HEX output packet
	);

BleMidiOutDevice::WriteMidiData(
	HEX output message
	);

BleMidiOutDevice::WriteMidiData(
	HEXINT64 This,
	INT32 m_RealDeviceMode
	);

BleMidiOutDevice::Create(
	UNICODESTRING DeviceId
	);

BleMidiOutDevice::RuntimeClassInitialize(
	HEXINT64 This
	);

BleMidiInDevice::ProcessMidiPacketBody(
	HEX short midiMessage,
	INT64 userTime,
	INT16 midiTimeStamp
	);

BleMidiInDevice::OnValueChangedEvent(
	HEX CharacteristicValue
	);

BleMidiInDevice::OnValueChangedEvent(
	HEXINT64 pMidiDevice,
	UINT32 DataSize
	);

BleMidiInDevice::HandleSystemExMessage(
	HEX System Ex midiMessage part,
	INT64 userTime,
	INT16 midiTimeStamp
	);

BleMidiInDevice::Create(
	UNICODESTRING DeviceId
	);

BleMidiInDevice::~BleMidiInDevice(
	HEXINT64 This
	);

BleMidiInDevice::RegisterGattInputEventCallback_BluetoothGATTRegisterEvent(
	VOID
	);

BleMidiInDevice::RegisterGattInputEventCallback_ClientCharacteristicConfiguration(
	VOID
	);

BleMidiInDevice::RegisterGattInputEventCallback_GattDescriptor(
	HEXINT64 m_DeviceHandle,
	UINT16 expectedBufferCount
	);

BleMidiInDevice::RegisterGattInputEventCallback_Entry(
	HEXINT64 This
	);

BleMidiInDevice::RuntimeClassInitialize(
	HEXINT64 This,
	INT32 m_RealDeviceMode,
	UNICODESTRING DeviceId
	);

BleMidiInDevice::Stop(
	HEXINT64 This
	);

BleMidiDevice::Stop(
	HEXINT64 This
	);

BleMidiDevice::Initialize(
	UNICODESTRING midiInterfaceId,
	UINT64 m_DeviceTag,
	INT32 m_RealDeviceMode
	);

BluetoothGATTGetCharacteristics(
	HEXINT64 pGattCharacteristics,
	UINT16 gattCharacteristicsCount,
	HRESULT HResult
	);

BleMidiDevice::InitializeViaBluetoothGATT(
	HEXINT64 This,
	HEXINT64 pGattServices,
	UINT16 gattServicesCount,
	HRESULT HResult
	);

BleMidiDevice::~BleMidiDevice(
	HEXINT64 This
	);

BleMidiInDevice::ReadMidiMessageFromEmulator_Info(
	HEXINT64 BleMidiInDevice,
	UINT32 ulBufferSizeNeeded,
	UINT32 bytesReturned
	);

BleMidiInDevice::ReadMidiMessageFromEmulator(
	HEXINT64 BleMidiInDevice
	);

BleMidiInDevice::MidiInMessageReadyWorkRoutine_exit(
	VOID
	);

BleMidiInDevice::MidiInMessageReadyWorkRoutine_WaitForMultipleError(
	VOID
	);

BleMidiInDevice::MidiInMessageReadyWorkRoutine_hMidiInReadyEvent_signaled(
	HEXINT64 pMidiDevice
	);

BleMidiInDevice::MidiInMessageReadyWorkRoutine_enter(
	VOID
	);

