ProviderNames:
	Microsoft.Windows.Wil.FeatureLogging
	Microsoft.Windows.Shell.TaskFlow.DataEngine
	Microsoft.Windows.Shell.TaskFlow.DataEngine.Aggregate
	Microsoft.Windows.TlgAggregateInternal



**** Events *****
FeatureError(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	HRESULT hr,
	ANSISTRING file,
	UINT16 lineNumber,
	ANSISTRING module,
	ANSISTRING process,
	ANSISTRING originFile,
	UINT16 originLineNumber,
	ANSISTRING originModule,
	ANSISTRING originName,
	ANSISTRING message,
	ANSISTRING callerModule,
	UINT32 callerReturnAddressOffset,
	ANSISTRING originCallerModule,
	UINT32 originCallerReturnAddressOffset
	);

FeatureVariantUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 variantKind,
	UINT8 variant,
	UINT64 addend
	);

EnabledFeatureUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 kind,
	UINT64 addend
	);

FeatureUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 kind,
	UINT64 addend
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityStoppedAutomatically(
	VOID
	);

CreatingActivityActivationState(
	GUID activityId,
	UINT64 PartA_PrivTags
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GetActivityActivationInfo(
	UINT64 PartA_PrivTags
	);

GetActivityActivationStatesAsync(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId
	);

GetActivityActivationStatesAsync(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetActivityActivationStatesAsync(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GetActivityActivationStateAsync(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID activityId
	);

GetActivityActivationStateAsync(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetActivityActivationStateAsync(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

LaunchingShellGeneratedActivity(
	UINT64 PartA_PrivTags
	);

LaunchingAppGeneratedActivity(
	UINT64 PartA_PrivTags
	);

LaunchUserActivityAsync(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID activityId
	);

LaunchUserActivityAsync(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

LaunchUserActivityAsync(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

LaunchActivityAsyncWithOptions(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID activityId,
	BOOL32 hasOptions,
	UNICODESTRING appId
	);

LaunchActivityAsyncWithOptions(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UNICODESTRING accountId,
	GUID activityId,
	BOOL32 hasOptions,
	UNICODESTRING appId
	);

LaunchActivityAsyncWithOptions(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID activityId,
	BOOL32 hasOptions
	);

LaunchActivityAsyncWithOptions(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

LaunchActivityAsyncWithOptions(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

OnActivityDataUpdatedReceived(
	VOID
	);

FlatListQueryActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT64 startTime,
	INT64 endTime,
	BOOL32 searchKeywordExists,
	UNICODESTRING groupByProperty,
	UINT32 groupSortOrder,
	UNICODESTRING sortByProperty,
	UINT32 sortOrder,
	BOOL32 collapseOnActivityId,
	UNICODESTRING deviceId,
	UNICODESTRING townFilter
	);

FlatListQueryActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FlatListQueryActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GroupQueryActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT64 startTime,
	INT64 endTime,
	BOOL32 searchKeywordExists,
	UNICODESTRING groupByProperty,
	UINT32 groupSortOrder,
	UNICODESTRING sortByProperty,
	UINT32 sortOrder,
	BOOL32 collapseOnActivityId,
	UNICODESTRING deviceId,
	UNICODESTRING townFilter
	);

GroupQueryActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GroupQueryActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

SuggestionsQueryActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UINT32 suggestionCount,
	UINT32 timeOfDayCount,
	UINT32 mostUsedCount
	);

SuggestionsQueryActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 suggestionCount,
	UINT32 timeOfDayCount,
	UINT32 mostUsedCount
	);

SuggestionsQueryActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

SuggestionsQueryActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SuggestionsQueryActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

InstallationProgressUpdate(
	UNICODESTRING accountId,
	GUID activityId,
	UNICODESTRING utmAppId,
	DOUBLE installProgress,
	UINT32 installState
	);

StartInlineInstall(
	UNICODESTRING utmAppId,
	UINT64 PartA_PrivTags
	);

ActivityActivationInitialState(
	UNICODESTRING accountId,
	GUID activityId,
	BOOLEAN isActivatable,
	BOOLEAN isInstallable,
	UNICODESTRING utmAppId
	);

InstallTargetApp(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID afcActivityId,
	UINT32 appInstallationState
	);

InstallTargetApp(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

InstallTargetApp(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityIndexerStatePerAccountIndexUpdate(
	UNICODESTRING accountId,
	UNICODESTRING RecentIndexerAddTime,
	UINT32 RecentIndexerAddResult,
	UNICODESTRING RecentIndexerUpdateTime,
	UINT32 RecentIndexerUpdateResult,
	UNICODESTRING RecentIndexerDeleteTime,
	UINT32 RecentIndexerDeleteResult,
	UINT64 PartA_PrivTags
	);

ActivityIndexerStatePerAccountDelete(
	UNICODESTRING accountId,
	UINT64 DeleteAttemptsDueToLastDeleteAll,
	UNICODESTRING RecentDeleteAllTime,
	UINT32 RecentDeleteAllResult,
	UINT64 DeleteAttemptsDueToAFCStoreReset,
	UNICODESTRING RecentAFCStoreResetTime,
	UINT32 RecentAFCStoreResetResult,
	UINT64 PartA_PrivTags
	);

ActivityIndexerStateBulkDelete(
	UINT32 BulkHistoryDeleteReason,
	UNICODESTRING RecentBulkHistoryDeleteTime,
	UINT32 RecentBulkHistoryDeleteResult,
	UINT64 PartA_PrivTags
	);

ActivityIndexerStatePerAccountListenerState(
	UNICODESTRING accountId,
	UINT16 ListenerState,
	UNICODESTRING RecentAFCStoreSubscriptionTime,
	UINT32 RecentAFCStoreSubscriptionResult,
	UNICODESTRING RecentAFCStoreUpdateNotificationTime,
	UNICODESTRING RecentAFCFetchTime,
	UINT32 RecentAFCFetchResult,
	UINT16 RecentAFCFetchedActivityCount,
	UINT64 PartA_PrivTags
	);

ActivityIndexerStateAFCStoreInfoWatcher(
	UNICODESTRING AFCStoreInfoWatcherSubscriptionTime,
	UINT32 AFCStoreInfoWatcherResult,
	UNICODESTRING RecenttAFCStoreInfoWatcherNotificationTime,
	UINT64 PartA_PrivTags
	);

ActivityIndexerStateIndexUpdate(
	UNICODESTRING RecentIndexerUpdateTime,
	UINT32 RecentIndexerUpdateResult,
	UNICODESTRING RecentIndexerDeleteTime,
	UINT32 RecentIndexerDeleteResult,
	UINT64 PartA_PrivTags
	);

ActivityIndexerStateStartup(
	UINT32 startupResult,
	UNICODESTRING startupExceptionMessage,
	UINT64 PartA_PrivTags
	);

ActivityIndexerStateAFCServiceReady(
	UNICODESTRING AFCServiceReadySubscriptionTime,
	UINT32 AFCServiceReadySubscriptionResult,
	UNICODESTRING RecentAFCServiceReadyNotificationTime,
	UINT64 PartA_PrivTags
	);

DeleteAndReIndexAllActivities(
	UINT64 currentRevision,
	UINT64 targetRevision,
	UINT64 PartA_PrivTags
	);

OnActivityStoreAdded(
	UNICODESTRING accountId,
	UINT64 PartA_PrivTags
	);

OnActivityStoreRemoved(
	UNICODESTRING accountId,
	UINT64 PartA_PrivTags
	);

IndexerShutdownDueToPolicy(
	BOOLEAN duringStart,
	UINT64 PartA_PrivTags
	);

DeleteExpiredHistoryItems(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

DeleteExpiredHistoryItems(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

DeleteExpiredHistoryItems(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

DeleteAllActivitiesDueToPolicy(
	UINT64 PartA_PrivTags
	);

OnCDPUserServiceReady(
	UINT64 PartA_PrivTags
	);

GotActivities(
	UNICODESTRING accountId,
	ANSISTRING initialReaderState,
	ANSISTRING newReaderState,
	UINT16 fetchedCount,
	BOOLEAN resetRequired
	);

UnSubscribedFromAFC(
	UNICODESTRING accountId,
	UINT64 PartA_PrivTags
	);

SubscribedToAFC(
	UNICODESTRING accountId,
	UINT64 PartA_PrivTags
	);

ResetActivityStore(
	UNICODESTRING accountId,
	ANSISTRING initialReaderState,
	ANSISTRING newReaderState,
	UINT64 PartA_PrivTags
	);

PurgeAllItems(
	UNICODESTRING accountId,
	UINT64 initialLastDeleteAllTime,
	UINT64 newLastDeleteAllTime,
	UINT64 PartA_PrivTags
	);

ProcessActivitiesFromStore(
	UINT32 hresult,
	UINT64 PartA_PrivTags
	);

OnActivityStoreUpdated(
	UNICODESTRING accountId
	);

OnLastDeleteAllTimeUpdated(
	UNICODESTRING accountId,
	UINT64 PartA_PrivTags
	);

SubscribeToActivityEvents(
	UINT32 hresult,
	UINT64 PartA_PrivTags
	);

TimeZoneNameNotFound(
	UINT32 hresult,
	UNICODESTRING timeZoneName
	);

BulkDeleteHistories(
	UINT32 bulkHistoryDeleteReason,
	UINT64 historyItemCount,
	UINT64 PartA_PrivTags
	);

BulkDeleteActivities(
	UINT32 bulkHistoryDeleteReason,
	UINT64 activityItemCount,
	UINT64 PartA_PrivTags
	);

RemoveAsyncFailed(
	GUID afcHistoryId,
	UINT32 hresult,
	UINT64 PartA_PrivTags
	);

UpdateAsyncTimedOut(
	GUID afcHistoryId,
	UINT64 PartA_PrivTags
	);

AddAsyncTimedOut(
	UNICODESTRING accountId,
	GUID afcActivityId,
	GUID afcHistoryId,
	UINT64 PartA_PrivTags
	);

UpdateHistoryItem(
	UINT32 hresult,
	UINT64 PartA_PrivTags
	);

HistoryItemSkipped(
	UNICODESTRING accountId,
	GUID afcActivityId,
	GUID afcHistoryId,
	UINT32 hresult,
	UINT64 PartA_PrivTags
	);

HistoryItemsImpacted(
	UINT64 historyItemCount,
	UINT64 PartA_PrivTags
	);

TimeZoneNotFound(
	NULL Count,
	BOOLEAN timeZoneNameEmpty,
	UINT32 hr
	);

AddOrUpdateTimelineActivitySummary(
	NULL Count,
	NULL HistoryItemsImpacted,
	UINT32 hr
	);

AddOrUpdateTimelineHistorySummary(
	NULL Count,
	UINT32 hr,
	BOOLEAN IsRetryable
	);

DeviceInfoChangedActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING deviceId
	);

DeviceInfoChangedActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

DeviceInfoChangedActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

RemoveTimelineActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID afcActivityId
	);

OnActivityDataUpdatedPublished(
	VOID
	);

RemoveTimelineActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

RemoveTimelineActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

RemoveTimelineHistory(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID afcHistoryId
	);

RemoveTimelineHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

RemoveTimelineHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

AddorUpdateTimelineHistory(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID afcActivityId,
	GUID afcHistoryId
	);

AddorUpdateTimelineHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

AddorUpdateTimelineHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

AddorUpdateTimelineActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID afcActivityId
	);

AddorUpdateTimelineActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

AddorUpdateTimelineActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

UpdatedActivityStoreReaderState(
	UNICODESTRING accountId,
	UINT64 indexerRevision,
	UINT64 lastDeleteAllTime,
	ANSISTRING readerState
	);

ReconcileIndexerRevision(
	UNICODESTRING accountId,
	UINT64 newIndexerRevision,
	UINT64 latestHandledRevision,
	UINT64 startupRevision,
	UINT64 resetRevision,
	UINT64 PartA_PrivTags
	);

AddTileForHistoryItem(
	UNICODESTRING appId,
	INT32 tileAddedToCollection,
	UINT64 PartA_PrivTags
	);

RemoveTileForHistoryItem(
	UNICODESTRING appId,
	INT32 tileRemovedFromCollection,
	UINT64 PartA_PrivTags
	);

ExecutingIndexerQuery(
	UNICODESTRING query
	);

GetActivityInfoForAppView(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 appViewId
	);

ProcessAppActivitySessions(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 appViewId
	);

ProcessSnapSignalData(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ProcessClipboardSignalData(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

OnFocusIgnoredAppIdKindUnknown(
	UNICODESTRING appId
	);

DoesAppViewTitleMatchFileName(
	BOOLEAN isOfficeApp,
	BOOLEAN titleMatched
	);

ProcessClipboardSignalInfo(
	UINT32 signalType,
	UNICODESTRING appId,
	UINT64 PartA_PrivTags
	);

ViewIdNotFoundForClipboardSignal(
	UINT32 signalType,
	UNICODESTRING appId,
	UINT64 PartA_PrivTags
	);

SnapSignalInfo(
	UINT32 snapEventType,
	UINT64 Timestamp,
	UINT64 PartA_PrivTags
	);

ViewInfoNotFoundForSnapSignal(
	UINT32 snapEventType,
	UINT64 Timestamp,
	UINT64 PartA_PrivTags
	);

AppActivitySessionStatus(
	BOOLEAN sessionDisposed,
	BOOLEAN topSessionDisposed,
	UINT64 PartA_PrivTags
	);

MissedUserPresenceNotice(
	INT32 presenceState,
	UINT64 PartA_PrivTags
	);

ActivityDisallowedDueToAppAutoGenerationPolicy(
	UINT64 PartA_PrivTags
	);

ActivityInfoCreatedForShellActivityNoContent(
	UINT64 PartA_PrivTags
	);

ActivityInfoCreatedForShellActivityWithContent(
	UINT64 PartA_PrivTags
	);

ActivityInfoCreatedForAppActivity(
	UINT64 PartA_PrivTags
	);

GetActivityInfoForAppView(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GetActivityInfoForAppView(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

NoMatchingInProgressActivityToUnfocus(
	UINT64 PartA_PrivTags
	);

ProcessSnapSignalData(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ProcessSnapSignalData(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ProcessClipboardSignalData(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ProcessClipboardSignalData(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	HEX wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

MissedActivityUnfocus(
	UINT64 PartA_PrivTags
	);

ViewNotFoundInCache(
	UINT64 PartA_PrivTags
	);

ProcessAppActivitySessions(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ProcessAppActivitySessions(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

UserAwayIgnoringListenersData(
	UINT64 PartA_PrivTags
	);

SignalProcessingActivityArbiterCountersReport(
	UINT32 successCounter,
	UINT32 knownFailureCounter,
	UINT32 unknownFailureCounter,
	UINT32 historiesCounter,
	UINT32 filteredOutHistoriesCounter,
	UINT32 historyFilteringThreshold,
	UINT32 historyMergedGapLimitInSeconds,
	UINT64 PartA_PrivTags
	);

ListenerDataQueuedWithDelay(
	VOID
	);

LaunchShellUserActivityInternal(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID activityId
	);

LaunchShellUserActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID activityId
	);

LaunchShellActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING accountId,
	GUID activityId
	);

LaunchShellNullActivity(
	GUID activityId,
	UINT64 PartA_PrivTags
	);

LaunchShellContentActivity(
	GUID activityId,
	UINT64 PartA_PrivTags
	);

LaunchShellUserActivityInternal(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

LaunchShellUserActivityInternal(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

LaunchShellUserActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

LaunchShellUserActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

LaunchShellActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

LaunchShellActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SetActivitySessionDataCreated(
	UNICODESTRING setId,
	UNICODESTRING appId,
	UNICODESTRING host,
	UINT64 Timestamp
	);

SetActivitySessionDataDisposed(
	UNICODESTRING setId,
	UINT64 Timestamp
	);

AppActivitySessionDataCreated(
	UNICODESTRING appId,
	UNICODESTRING host,
	UINT64 Timestamp
	);

AppActivitySessionDataDisposed(
	UNICODESTRING appId,
	UNICODESTRING host,
	UINT64 Timestamp
	);

DisableAutoSessionsCreated(
	UINT64 Timestamp
	);

HandleOnJumplistChanged(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING appId
	);

FileActivityDataCreated(
	INT32 HasAppId,
	INT32 HasContentId,
	INT32 HasContentUri,
	INT32 HasDisplayName,
	UINT64 Timestamp,
	UINT64 PartA_PrivTags
	);

HandleOnJumplistChanged(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

HandleOnJumplistChanged(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

NotifyJumplistChanged(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING appId
	);

TryGetUserActivityMonitor(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

TryGetUserActivityMonitor(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

TryGetUserActivityMonitor(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

NotifyJumplistChanged(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

NotifyJumplistChanged(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HandleClipboardSignal(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 signalType
	);

StopListeningForClipboardSignals(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

StopClipboardSignalListener(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

StartListeningForClipboardSignals(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

StartClipboardSignalListener(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

CreateClipboardSignalListener(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

HandleClipboardSignalInfo(
	UINT32 signalType,
	UNICODESTRING clipboardDataId,
	UNICODESTRING appId,
	UNICODESTRING appName,
	UINT64 PartA_PrivTags
	);

ClipboardReportedViewNotFound(
	UINT64 PartA_PrivTags
	);

HandleClipboardSignal(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

HandleClipboardSignal(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

UnsubscribedPasteSignal(
	VOID
	);

UnsubscribedCopySignal(
	VOID
	);

StopListeningForClipboardSignals(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

StopListeningForClipboardSignals(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SubscribedPasteSignal(
	VOID
	);

SubscribedCopySignal(
	VOID
	);

StartListeningForClipboardSignals(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

StartListeningForClipboardSignals(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

StopClipboardSignalListener(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

StopClipboardSignalListener(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

StartClipboardSignalListener(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

StartClipboardSignalListener(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

CreateClipboardSignalListener(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

CreateClipboardSignalListener(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityIsActivatable(
	UNICODESTRING crossPlatName,
	UNICODESTRING crossPlatValue
	);

ActivateWithActivationUri(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivateWithActivationUri(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivateWithContentUri(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivateWithContentUri(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HasLinkArguments(
	UINT64 PartA_PrivTags
	);

HasLinkTarget(
	UINT64 PartA_PrivTags
	);

ActivateWithSerializedShellLink(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivateWithSerializedShellLink(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivateWithActivationUri(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING uwpAppId,
	UNICODESTRING win32AppId,
	UNICODESTRING exePath
	);

ActivateWithContentUri(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING uwpAppId,
	UNICODESTRING win32AppId,
	UNICODESTRING exePath
	);

ActivateWithSerializedShellLink(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING uwpAppId,
	UNICODESTRING win32AppId,
	UNICODESTRING exePath
	);

CoreIsApplicationServiceSupported(
	UINT32 processId,
	UINT32 hresult
	);

CreateAndPublishNewActivityHistory(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	GUID afcActivityId,
	INT64 startTime,
	INT64 endTime
	);

TryGetExistingActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	GUID cachedAfcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

PublishAnnotationActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	ANSISTRING annotationKind,
	GUID afcParentActivityId,
	GUID afcAnnotationActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

CreateAndPublishNewActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

PublishHistory(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	GUID afcActivityId,
	GUID afcHistoryActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	BOOL32 isShellGenerated,
	INT64 startTime,
	INT64 endTime,
	INT64 activeDurationInSeconds
	);

PublishActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

GetUserActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID cachedAfcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

EndMatchingInProgressHistory(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	GUID cachedAfcActivityId,
	GUID cachedAfcHistoryActivityId,
	INT64 cachedStartTime,
	INT64 cachedEndTime,
	INT64 cachedRecentStartTime,
	INT64 endTime
	);

StartActivityHistory(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	GUID cachedAfcActivityId,
	GUID cachedAfcHistoryActivityId,
	INT64 cachedStartTime,
	INT64 cachedEndTime,
	INT64 cachedRecentStartTime,
	INT64 startTime
	);

GetOrCreateActivity(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID cachedAfcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

CreateAndPublishNewActivityHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UNICODESTRING activityStoreId,
	GUID afcActivityId,
	GUID afcHistoryActivityId,
	INT64 startTime,
	INT64 endTime
	);

CreateAndPublishNewActivityHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	GUID afcActivityId,
	GUID afcHistoryActivityId,
	INT64 startTime,
	INT64 endTime
	);

TryGetExistingActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function,
	UNICODESTRING activityStoreId,
	GUID cachedAfcActivityId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

TryGetExistingActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	GUID cachedAfcActivityId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

PublishAnnotationActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	ANSISTRING annotationKind,
	GUID afcParentActivityId,
	GUID afcAnnotationActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

PublishAnnotationActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	ANSISTRING annotationKind,
	GUID afcParentActivityId,
	GUID afcAnnotationActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

CreateAndPublishNewActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

CreateAndPublishNewActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

PublishHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UNICODESTRING activityStoreId,
	GUID afcActivityId,
	GUID afcHistoryActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	BOOL32 isShellGenerated,
	INT64 startTime,
	INT64 endTime,
	INT64 activeDurationInSeconds
	);

PublishHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	GUID afcActivityId,
	GUID afcHistoryActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	BOOL32 isShellGenerated,
	INT64 startTime,
	INT64 endTime,
	INT64 activeDurationInSeconds
	);

PublishActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

PublishActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

GetUserActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function,
	GUID cachedAfcActivityId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

GetUserActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	GUID cachedAfcActivityId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

ReassociateActivityHistory(
	GUID sourceActivityId,
	GUID destinationActivityId,
	INT64 startTime,
	INT64 endTime,
	UINT64 PartA_PrivTags
	);

EndMatchingInProgressHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UNICODESTRING activityStoreId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	GUID cachedAfcActivityId,
	GUID cachedAfcHistoryActivityId,
	INT64 cachedStartTime,
	INT64 cachedEndTime,
	INT64 cachedRecentStartTime
	);

EndMatchingInProgressHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	GUID cachedAfcActivityId,
	GUID cachedAfcHistoryActivityId,
	INT64 cachedStartTime,
	INT64 cachedEndTime,
	INT64 cachedRecentStartTime
	);

StartActivityHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UNICODESTRING activityStoreId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	GUID cachedAfcActivityId,
	GUID cachedAfcHistoryActivityId,
	INT64 cachedStartTime,
	INT64 cachedEndTime,
	INT64 cachedRecentStartTime
	);

StartActivityHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING activityStoreId,
	UNICODESTRING appId,
	BOOL32 hasContentUri,
	GUID cachedAfcActivityId,
	GUID cachedAfcHistoryActivityId,
	INT64 cachedStartTime,
	INT64 cachedEndTime,
	INT64 cachedRecentStartTime
	);

GetOrCreateActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	GUID cachedAfcActivityId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

GetOrCreateActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	GUID cachedAfcActivityId,
	GUID afcActivityId,
	UNICODESTRING appId,
	BOOL32 hasContentUri
	);

CreateAndPublishNewActivityHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

CreateAndPublishNewActivityHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

TryGetExistingActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

TryGetExistingActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PublishAnnotationActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

PublishAnnotationActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

CreateAndPublishNewActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

CreateAndPublishNewActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PublishHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

PublishHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PublishActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

PublishActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetUserActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetUserActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

EndMatchingInProgressHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

EndMatchingInProgressHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

StartActivityHistory(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

StartActivityHistory(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SetActivityNotFoundHistoryIgnored(
	UINT64 PartA_PrivTags
	);

GetOrCreateActivity(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GetOrCreateActivity(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

TlgAggregateSummary(
	GUID Provider,
	UINT64 NumFlushes,
	UINT64 MaxEntriesStored,
	UINT64 TotalEntriesFlushed,
	UINT32 MaxEntriesFlushed,
	UINT32 MinEntriesFlushed,
	UINT32 NumBucketLimitReached,
	UINT32 NumAllocationFailures,
	UINT32 NumLargeEventFailures
	);

