ProviderNames:
	CortanaPersona
	Microsoft-Windows-Shell-CortanaTrace
	Microsoft.Windows.Wil.FeatureLogging
	Microsoft.Windows.Shell.CortanaPersonality



**** Events *****
Noisy(
	ANSISTRING file,
	ANSISTRING function,
	UINT32 lineNumber,
	ANSISTRING message
	);

DataDump(
	ANSISTRING file,
	ANSISTRING function,
	UINT32 lineNumber,
	ANSISTRING message
	);

Info(
	ANSISTRING file,
	ANSISTRING function,
	UINT32 lineNumber,
	ANSISTRING message
	);

Warning(
	ANSISTRING file,
	ANSISTRING function,
	UINT32 lineNumber,
	ANSISTRING message
	);

Perf(
	ANSISTRING file,
	ANSISTRING function,
	UINT32 lineNumber,
	ANSISTRING message
	);

Error(
	ANSISTRING file,
	ANSISTRING function,
	UINT32 lineNumber,
	ANSISTRING message
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FeatureError(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	HRESULT hr,
	ANSISTRING file,
	UINT16 lineNumber,
	ANSISTRING module,
	ANSISTRING process,
	ANSISTRING originFile,
	UINT16 originLineNumber,
	ANSISTRING originModule,
	ANSISTRING originName,
	ANSISTRING message,
	ANSISTRING callerModule,
	UINT32 callerReturnAddressOffset,
	ANSISTRING originCallerModule,
	UINT32 originCallerReturnAddressOffset
	);

FeatureVariantUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 variantKind,
	UINT8 variant,
	UINT64 addend
	);

EnabledFeatureUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 kind,
	UINT64 addend
	);

FeatureUsage(
	UINT32 featureId,
	INT32 featureVersion,
	INT32 featureBaseVersion,
	INT16 featureStage,
	BOOLEAN enabled,
	UINT32 kind,
	UINT64 addend
	);

PersonaAnimator_ParseAnimationsString(
	INT32 HResult,
	UNICODESTRING animationString
	);

PersonaAnimator_Play(
	UNICODESTRING animationString
	);

PersonaAnimator_AnimationNotFound(
	INT32 HResult,
	UNICODESTRING RequestedString
	);

PersonaAnimator_AnimationRequested(
	UNICODESTRING RequestedString,
	UNICODESTRING PreviousString,
	BOOLEAN Requested
	);

PersonaAnimator_AnimationStats(
	UNICODESTRING AnimationName,
	UINT64 currentFps,
	UINT64 maxFps,
	UINT64 minFps,
	UINT64 dwellTime
	);

PersonaAnimator_PlayEmpty(
	VOID
	);

PersonaAssetFile_InitializeFromFile(
	UNICODESTRING animation,
	UNICODESTRING shapePrefix,
	BOOLEAN loadedPersonaFromDownloadLocation,
	INT32 HResult
	);

PersonaRenderThread_RenderLoop(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

PersonaRenderThread_CreateDevice(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

PersonaRenderThread_CreateSizeDeviceDependentResources(
	UINT32 Width,
	UINT32 Height,
	FLOAT ScaleX,
	FLOAT ScaleY
	);

PersonaRenderThread_WakeUp(
	VOID
	);

PersonaRenderThread_Pause(
	VOID
	);

PersonaRenderThread_RenderLoop(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PersonaRenderThread_RenderLoop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PersonaRenderThread_SwapChainFrameLatencyTimeout(
	VOID
	);

PersonaRenderThread_DeviceLost(
	VOID
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PersonaRenderThread_CreateDevice(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PersonaRenderThread_CreateDevice(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	HEX wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

PersonaRenderThread_Startup(
	VOID
	);

PersonaUtils_GetStreamAsyncFromInstalledLocation(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

PersonaUtils_GetStreamAsyncFromResourceManager(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

PersonaUtils_GetStreamAsyncFromDownloadLocation(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

PersonaUtils_GetStream(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

PersonaUtils_GetStream_TrueResult(
	INT32 HResult
	);

PersonaUtils_GetStreamAsyncFromDownloadLocation_TrueResult(
	INT32 HResult
	);

PersonaUtils_GetStreamAsyncFromInstalledLocation_TrueResult(
	INT32 HResult
	);

PersonaUtils_GetStreamAsyncFromResourceManager_TrueResult(
	INT32 HResult
	);

PersonaUtils_GetStream(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PersonaUtils_GetStream(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PersonaUtils_GetStreamAsyncFromDownloadLocation(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PersonaUtils_GetStreamAsyncFromDownloadLocation(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PersonaUtils_GetStreamAsyncFromInstalledLocation(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PersonaUtils_GetStreamAsyncFromInstalledLocation(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

PersonaUtils_GetStreamAsyncFromResourceManager(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

PersonaUtils_GetStreamAsyncFromResourceManager(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

