ProviderNames:
	Microsoft.Windows.DeviceManagement.OmaDmApiProvider
	Microsoft.Windows.DeviceManagement.SessionManagement
	Microsoft.Windows.DeviceManagement.OmaDmClient
	Microsoft.Windows.DeviceManagement.OMADMPRC
	Microsoft.Windows.EnterpriseManagement.ResourceManager
	Microsoft.Windows.EnterpriseManagement.ResourceManagerUnenrollHook
	Microsoft.Windows.DeviceManagement.DmAccCsp
	Microsoft.Windows.DeviceManagement.DevInfo
	Microsoft.Windows.DeviceManagement.DevDetailCsp
	Microsoft-Windows-DeviceManagement-W7NodeProcessor
	Microsoft.Windows.DeviceManagement.SecurityPolicyCsp
	Microsoft.Windows.EnterpriseManagement.DeclaredConfiguration
	Microsoft.Windows.EnterpriseManagement.PolicyManager
	Microsoft.Windows.EnterpriseManagement.ConfigManagerHook
	Microsoft.Windows.DeviceManagement.ConfigManager2
	Microsoft.Windows.EMPS.Enrollment
	Microsoft.Windows.EnterpriseManagement.Enrollment
	Microsoft.Windows.DeviceManagement.AdmxIngestion



**** Events *****
FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

Delete ADMX Metadata(
	HRESULT HResult,
	UNICODESTRING AreaName,
	ANSISTRING __TlgCV__
	);

AdmxIngestionStatus(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING Mode,
	ANSISTRING __TlgCV__
	);

AdmxIngestionStatus(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	UNICODESTRING AppName,
	UNICODESTRING SettingType,
	UNICODESTRING FileUid,
	UINT32 Policies,
	UINT32 Status,
	ANSISTRING __TlgCV__
	);

AdmxIngestionStatus(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

AdmxIngestionStatus(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

AdmxIngestionStatus(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UNICODESTRING AppName,
	UNICODESTRING SettingType,
	UNICODESTRING FileUid,
	UINT32 Policies,
	UINT32 Status,
	ANSISTRING __TlgCV__
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

Circular dependency in ADMX categories(
	UNICODESTRING category,
	UNICODESTRING parentCategory,
	ANSISTRING __TlgCV__
	);

Policy RegKey integrity check(
	HRESULT HResult,
	UNICODESTRING TagType,
	UNICODESTRING TagName,
	UNICODESTRING RegKey,
	ANSISTRING __TlgCV__
	);

Equivalent Area name from categories should be limited to 255 characters(
	UNICODESTRING EquivalentAreaName,
	ANSISTRING __TlgCV__
	);

InvalidAttribute(
	UNICODESTRING TagType,
	UNICODESTRING TagName,
	UNICODESTRING Value,
	ANSISTRING __TlgCV__
	);

ParentCategory of policy is not defined in categories(
	UNICODESTRING policyName,
	UNICODESTRING parentCategory,
	ANSISTRING __TlgCV__
	);

ExtractTagAttributesFailed(
	HRESULT HResult,
	UNICODESTRING TagName,
	UINT32 LineNumber,
	UINT32 LinePosition,
	UINT32 Depth,
	ANSISTRING __TlgCV__
	);

SaveExtractedDataFailed(
	HRESULT HResult,
	UNICODESTRING TagName,
	UINT32 LineNumber,
	UINT32 LinePosition,
	UINT32 Depth,
	ANSISTRING __TlgCV__
	);

XmlReadError(
	UNICODESTRING TagName,
	UINT32 LineNumber,
	UINT32 LinePosition,
	HRESULT HResult,
	ANSISTRING __TlgCV__
	);

InvalidAdmxChildTag(
	UNICODESTRING ChildTag,
	UNICODESTRING ParentTag,
	ANSISTRING __TlgCV__
	);

DoesNotContainRequiredAttribute(
	UNICODESTRING TagName,
	UNICODESTRING MissingAttribute,
	UINT32 LineNumber,
	UINT32 LinePosition,
	ANSISTRING __TlgCV__
	);

SettingAttribute(
	HRESULT HResult,
	UNICODESTRING LocalName,
	UNICODESTRING Value,
	ANSISTRING __TlgCV__
	);

PolicyManager(
	UNICODESTRING EvaluatorWNFFiredForEvaluator,
	HRESULT HRESULTForEvaluatorWNF,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING WNFFiredForArea,
	HRESULT HRESULTForAreaWNF,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

GPCSEPolicySetAndDelete(
	INT32 GroupPolicyAction,
	INT32 GroupPolicyCSE,
	UNICODESTRING GroupPolicyNameSpace,
	UNICODESTRING GroupPolicyValueName,
	BOOLEAN GroupPolicyPerUser,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING WNFFiredForPolicy,
	UNICODESTRING WNFTypeForPolicy,
	HRESULT HRESULTForPolicyWNF,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING MergeIntPolicyProviderID,
	UNICODESTRING MergeIntPolicyName,
	UNICODESTRING MergeIntAreaName,
	INT32 MergeIntPolicyType,
	INT32 MergeIntAlgorithm,
	INT32 DefaultDwordPolicyValue,
	UNICODESTRING MergeIntPolicyScopeUserSid,
	BOOLEAN MergeIntPolicyTarget,
	INT32 MergeIntPolicyCSPNameSpace,
	INT32 MergedDwordPolicyValue,
	INT32 MergeIntEnrollmentType,
	HRESULT HRESULTForMergeIntPolicy,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING PolicyDefinitionsForAreaNotFoundDuringMergeArea,
	HRESULT PolicyDefinitionsForAreaNotFoundDuringMergeHRESULT,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

MDMWinsOverGP(
	INT32 MDMWinsBlockedGroupPolicyAction,
	INT32 MDMWinsBlockedGroupPolicyCSE,
	UNICODESTRING MDMWinsBlockedGroupPolicyNameSpace,
	UNICODESTRING MDMWinsBlockedGroupPolicyValueName,
	BOOLEAN MDMWinsBlockedGroupPolicyPerUser,
	HRESULT MDMWinsBlockedGroupPolicyHRESULT,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING EvaluatorWNFRequested,
	UNICODESTRING EvaluatorWNFRequestedForArea,
	UNICODESTRING EvaluatorWNFRequestedForPolicy,
	HRESULT HRESULTForEvaluatorWNFRequested,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING DeletedPolicy,
	UNICODESTRING DeletedProviderID,
	UNICODESTRING DeletePolicyScopeUserSid,
	BOOLEAN DeletePolicyTarget,
	UNICODESTRING DeletedArea,
	SYSTEMTIME DeleteStartTime,
	SYSTEMTIME DeleteEndTime,
	INT32 DeletePolicyBehavior,
	HRESULT HRESULTForDeletePolicy,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING MergeStringPolicyName,
	UNICODESTRING MergeStringAreaName,
	INT32 MergeStringPolicyType,
	INT32 MergeStringAlgorithm,
	UNICODESTRING MergeStringPolicyProviderID,
	UNICODESTRING MergeStringPolicyScopeUserSid,
	BOOLEAN MergeStringPolicyTarget,
	INT32 MergeStringPolicyCSPNameSpace,
	INT32 MergeStringEnrollmentType,
	HRESULT HRESULTForMergeStringPolicy,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING MergeBinaryPolicyProviderID,
	UNICODESTRING MergeBinaryPolicyName,
	UNICODESTRING MergeBinaryAreaName,
	INT32 MergeBinaryPolicyType,
	INT32 MergeBinaryAlgorithm,
	UNICODESTRING MergeBinaryPolicyScopeUserSid,
	BOOLEAN MergeBinaryPolicyTarget,
	INT32 MergeBinaryPolicyCSPNameSpace,
	INT32 MergeBinaryEnrollmentType,
	HRESULT HRESULTForMergeBinaryPolicy,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	UNICODESTRING PolicyDefinitionForPolicyNotFoundDuringEnumOfPoliciesArea,
	UNICODESTRING PolicyDefinitionForPolicyNotFoundDuringEnumOfPoliciesPolicy,
	HRESULT PolicyDefinitionForPolicyNotFoundDuringEnumOfPoliciesHRESULT,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

PolicyManager(
	INT32 SetPolicyAction,
	UNICODESTRING SetPolicyName,
	UNICODESTRING SetPolicyEnrollmentId,
	UNICODESTRING SetPolicyArea,
	INT32 SetPolicyEnrollmentType,
	UNICODESTRING SetPolicyScopeUserSid,
	INT32 SetPolicyCSPNameSpace,
	INT32 SetPolicyVarLval,
	INT32 SetPolicyBehavior,
	ANSISTRING SetPolicySlapiPolicyData,
	HRESULT SetPolicyHResult,
	ANSISTRING __TlgCV__,
	UINT64 PartA_PrivTags
	);

