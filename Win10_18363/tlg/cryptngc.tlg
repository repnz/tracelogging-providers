ProviderNames:
	Microsoft.Windows.Security.NGC.CryptNgc



**** Events *****
FailureInfo(
	INT32 retVal,
	UNICODESTRING debugString
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityStoppedAutomatically(
	VOID
	);

NgcGetPkcs7ChainBlobFromCertificateBlob(
	INT32 retVal
	);

NgcGetPkcs7ChainBlobFromCertificateBlob(
	INT32 retVal
	);

NgcRenewKeyAttestation(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName
	);

NgcRenewKeyAttestation(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName
	);

ClientRpcRecoverableError(
	INT32 retVal
	);

NgcGetKeyAttestationForContainerService(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName,
	HEX aikBlob,
	HEX aikCert,
	UINT32 keyStatus
	);

NgcGetKeyAttestationForContainerService(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName,
	HEX aikBlob,
	HEX aikCert,
	UINT32 keyStatus
	);

NgcGetKeyAttestationForUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	NULL keyName,
	HEX attestationStatement,
	HEX aikChain,
	UINT32 keyStatus
	);

NgcGetKeyAttestationForUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	NULL keyName,
	HEX attestationStatement,
	HEX aikChain,
	UINT32 keyStatus
	);

InvalidAuthBufferProtectedNewPasswordTooLarge(
	INT32 retVal
	);

InvalidAuthBufferProtectedNewPasswordLength(
	INT32 retVal
	);

InvalidAuthBufferNoProtectedNewPassword(
	INT32 retVal
	);

InvalidAuthBufferProtectedCurrentCredentialsTooLarge(
	INT32 retVal
	);

InvalidAuthBufferProtectedCurrentCredentialsLength(
	INT32 retVal
	);

InvalidAuthBufferNoProtectedCurrentCredentials(
	INT32 retVal
	);

InvalidAuthBufferUserNameTooLarge(
	INT32 retVal
	);

InvalidAuthBufferUserNameLength(
	INT32 retVal
	);

InvalidAuthBufferNoUserName(
	INT32 retVal
	);

InvalidAuthBufferDomainNameTooLarge(
	INT32 retVal
	);

InvalidAuthBufferDomainNameLength(
	INT32 retVal
	);

InvalidAuthBufferNoDomainName(
	INT32 retVal
	);

InvalidAuthBufferTooSmall(
	INT32 retVal
	);

StringCbLengthWUserNameFailed(
	INT32 retVal
	);

StringCbLengthWDomainNameFailed(
	INT32 retVal
	);

InvalidAuthBufferKerbCertLogonBufferTooLarge(
	INT32 retVal
	);

InvalidAuthDataCredType(
	INT32 retVal
	);

InvalidAuthBufferPackedCredentialsTooLarge(
	INT32 retVal
	);

InvalidPackedCredentialsTooSmall(
	INT32 retVal
	);

InvalidAuthBufferDecryptionKeyAuthTicketStringConversion(
	INT32 retVal
	);

InvalidAuthBufferDecryptionKeyAuthTicketStringTooLarge(
	INT32 retVal
	);

InvalidAuthBufferDecryptionKeyAuthTicketStringLength(
	INT32 retVal
	);

InvalidAuthBufferNoDecryptionKeyAuthTicketString(
	INT32 retVal
	);

InvalidAuthBufferDecryptionKeyNameTooLarge(
	INT32 retVal
	);

InvalidAuthBufferDecryptionKeyNameLength(
	INT32 retVal
	);

InvalidAuthBufferNoDecryptionKeyName(
	INT32 retVal
	);

InvalidAuthBufferUserIdKeyAuthTicketStringConversion(
	INT32 retVal
	);

InvalidAuthBufferUserIdKeyAuthTicketStringTooLarge(
	INT32 retVal
	);

InvalidAuthBufferUserIdKeyAuthTicketStringLength(
	INT32 retVal
	);

InvalidAuthBufferNoUserIdKeyAuthTicketString(
	INT32 retVal
	);

InvalidAuthBufferUserIdKeyNameTooLarge(
	INT32 retVal
	);

InvalidAuthBufferUserIdKeyNameLength(
	INT32 retVal
	);

InvalidAuthBufferNoUserIdKeyName(
	INT32 retVal
	);

StringCbLengthWUserIdKeyNameFailed(
	INT32 retVal
	);

InvalidAuthBufferCspInfoBufferWrongSize(
	INT32 retVal
	);

InvalidAuthBufferCspInfoBufferTooLarge(
	INT32 retVal
	);

InvalidCspInfoBufferTooSmall(
	INT32 retVal
	);

InvalidNgcCredDataBufferTooSmall(
	INT32 retVal
	);

NgcPackAuthBuffer(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 keyImplType
	);

NgcPackAuthBuffer(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 keyImplType
	);

StringCbLengthWDecryptionKeyNameFailed(
	INT32 retVal
	);

NgcDeleteSymmetricPopKeyTransportKey(
	INT32 retVal
	);

NgcDeleteSymmetricPopKeyTransportKey(
	INT32 retVal
	);

NgcGetSymmetricPopKeyTransportKeyName(
	INT32 retVal,
	UINT32 flags,
	UINT32 keyType,
	UINT32 keyStatus
	);

NgcGetSymmetricPopKeyTransportKeyName(
	INT32 retVal,
	UINT32 flags,
	UINT32 keyType,
	UINT32 keyStatus
	);

NgcGetSymmetricPopKeyTransportKey(
	INT32 retVal,
	UINT32 flags,
	UINT32 keyType,
	UINT32 keyStatus
	);

NgcGetSymmetricPopKeyTransportKey(
	INT32 retVal,
	UINT32 flags,
	UINT32 keyType,
	UINT32 keyStatus
	);

HelloUsedForNegoOnSingleSessionSku(
	VOID
	);

I_NgcGetTenantId(
	INT32 retVal
	);

HelloCertsAreSmartCardCertsInRemoteSession(
	VOID
	);

WinStationIsSessionRemoteable(
	UINT32 retVal
	);

I_VscCreated(
	INT32 retVal
	);

NgcNotifyVscProvisioned(
	INT32 retVal
	);

NgcNotifyVscProvisioned(
	INT32 retVal
	);

ActivityStoppedAutomatically(
	VOID
	);

QueryWindowsHelloFailed(
	UINT64 PartA_PrivTags,
	ANSISTRING functionName,
	HRESULT retVal
	);

QueryWindowHelloStates(
	UINT64 PartA_PrivTags,
	BOOLEAN doesFailToGetTelemetry,
	UINT32 userAccountType,
	UINT32 joinType,
	UINT32 ngcEnableState,
	UINT32 ngcPolicySource,
	UINT32 hardwarePolicy,
	BOOLEAN hasTpm,
	BOOLEAN excludeTpm12,
	BOOLEAN isInsecureTpm,
	BOOLEAN isInsecureTpmBlockedByTpmPolicy,
	BOOLEAN isInsecureTpmBlockedByWHFBPolicy,
	BOOLEAN isUnsatisfactoryTpm20,
	BOOLEAN isTpmLocked,
	UINT32 tpmVersion,
	BOOLEAN provisionedTpm,
	UINT32 certEnrollMethod,
	BOOLEAN certEnrollmentRequired,
	BOOLEAN isSelfSignedCert,
	BOOLEAN isCertTimeValid,
	BOOLEAN secureBioEnabled,
	BOOLEAN isHelloProvisioned ,
	BOOLEAN isFaceAvailable ,
	BOOLEAN isFaceEnrolled,
	BOOLEAN isFingerprintAvailable,
	BOOLEAN isFingerprintEnrolled,
	BOOLEAN isStoredPassword,
	BOOLEAN isCurrentContainerHardwareCapable
	);

LogNgcInfo(
	VOID
	);

LogNgcInfo(
	VOID
	);

NgcMgmtIsAnyContainerInVsm(
	INT32 retVal
	);

I_NgcCancelPendingUIRequest(
	INT32 retVal
	);

NgcCancelPendingUIRequest(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcCancelPendingUIRequest(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtRemoveCompanionDeviceProtector(
	INT32 retVal
	);

NgcRemoveCompanionDeviceProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcRemoveCompanionDeviceProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtAddCompanionDeviceProtector(
	INT32 retVal
	);

NgcAddCompanionDeviceProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcAddCompanionDeviceProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtRemovePrebootProtector(
	INT32 retVal
	);

NgcRemovePrebootProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcRemovePrebootProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtAddPrebootProtector(
	INT32 retVal
	);

NgcAddPrebootProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcAddPrebootProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtRemoveBioProtector(
	INT32 retVal
	);

NgcRemoveBioProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcRemoveBioProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtAddBioProtector(
	INT32 retVal
	);

NgcAddBioProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcAddBioProtector(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtChangePinSilent(
	INT32 retVal
	);

NgcChangePinSilent(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcChangePinSilent(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcMgmtChangePin(
	INT32 retVal
	);

NgcChangePin(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcChangePin(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

EnterpriseKeysFound(
	INT32 retVal,
	BOOLEAN enterpriseKeyFound
	);

NgcEnumUserIdKeys(
	INT32 retVal
	);

ContainerNotFound(
	INT32 retVal
	);

NgcEnumContainers(
	INT32 retVal
	);

NgcMgmtGetPolicy(
	INT32 retVal
	);

NgcGetPolicy(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetPolicy(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

EnumContainersCopyUserSid(
	INT32 retVal
	);

EnumContainersAllocateContainerInfoOutOfMemory(
	INT32 retVal
	);

EnumContainersGetUserSidStringLength(
	INT32 retVal
	);

NgcMgmtEnumContainers(
	INT32 retVal
	);

EnumContainersAllocateEnumStateOutOfMemory(
	INT32 retVal
	);

NgcDeleteContainerDeleteAllUserIdKeyCertificates(
	INT32 retVal
	);

FailedToDeleteUserIdKeyCertificates(
	UINT64 PartA_PrivTags,
	HRESULT retVal
	);

I_NgcDeleteContainer(
	INT32 retVal
	);

NgcDeleteContainerGetAllUserIdKeyCertificates(
	INT32 retVal
	);

NgcDeleteContainer(
	INT32 retVal,
	UINT32 flag
	);

NgcDeleteContainer(
	INT32 retVal,
	UINT32 flag
	);

I_NgcCreateContainer(
	INT32 retVal
	);

NgcCreateContainerSilent(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	BOOLEAN secureBioEnabled,
	BOOLEAN ngcIsoEverywhereEnabled,
	BOOLEAN vsmAvailable
	);

NgcCreateContainerSilent(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	BOOLEAN secureBioEnabled,
	BOOLEAN ngcIsoEverywhereEnabled,
	BOOLEAN vsmAvailable
	);

NgcUtilsGetUserAccountType(
	INT32 retVal
	);

ConvertStringSidToSidW(
	UINT32 retVal
	);

PolicyManager::QueryIsNgcEnabled(
	INT32 retVal
	);

NgcCreateContainer(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	BOOLEAN secureBioEnabled,
	BOOLEAN ngcIsoEverywhereEnabled,
	BOOLEAN vsmAvailable
	);

NgcCreateContainer(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	BOOLEAN secureBioEnabled,
	BOOLEAN ngcIsoEverywhereEnabled,
	BOOLEAN vsmAvailable
	);

GetManagedPolicy(
	INT32 retVal
	);

ConvertSidToStringSidW(
	UINT32 retVal
	);

GetCallerSid(
	INT32 retVal
	);

EmptyStringTenant(
	INT32 retVal,
	UNICODESTRING pwszTenantDomainName
	);

OpenPlatformCryptoProviderFailed(
	INT32 retVal
	);

GetProviderNameNotTpmKsp(
	INT32 retVal
	);

GetProviderNameFailed(
	INT32 retVal
	);

DsrGetJoinInfo(
	INT32 retVal
	);

NgcQueryEnabledGetManagedPolicy(
	INT32 retVal
	);

NgcQueryEnabledManagedPolicyNotFound(
	INT32 retVal
	);

NgcQueryEnabledIsSessionRemoteFailed(
	INT32 retVal
	);

NgcQueryEnabled(
	HRESULT retVal,
	UNICODESTRING tenantDomainName,
	UINT32 ngcEnabled,
	UINT32 ngcPolicySource,
	UINT32 ngcEnabledModifiers,
	BOOLEAN hardwareRequired,
	BOOLEAN hardwareCapable,
	BOOLEAN containerExists,
	BOOLEAN disallowedTPM,
	BOOLEAN provisionedTPM,
	BOOL32 successExpected
	);

NgcEnumContainersFailed(
	INT32 retVal
	);

IsNgcContainerHardwareCapableNoMatchFound(
	VOID
	);

NgcDecryptWithSymmetricPopKey(
	INT32 retVal
	);

NgcDecryptWithSymmetricPopKey(
	INT32 retVal
	);

NgcEncryptWithSymmetricPopKey(
	INT32 retVal
	);

NgcEncryptWithSymmetricPopKey(
	INT32 retVal
	);

NgcVerifyWithSymmetricPopKey(
	INT32 retVal
	);

NgcVerifyWithSymmetricPopKey(
	INT32 retVal
	);

NgcSignWithSymmetricPopKey(
	INT32 retVal
	);

NgcSignWithSymmetricPopKey(
	INT32 retVal
	);

NgcImportSymmetricPopKey(
	INT32 retVal
	);

NgcImportSymmetricPopKey(
	INT32 retVal
	);

ActivityStoppedAutomatically(
	VOID
	);

NgcGetPregenKeyState(
	INT32 retVal
	);

NgcGetPregenKeyState(
	INT32 retVal
	);

NgcGetPregenUserKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 type
	);

NgcGetPregenUserKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 type
	);

SignWithUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	BOOLEAN authTicketUsed
	);

SignWithUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	BOOLEAN authTicketUsed
	);

NgcGetKeyImplType(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 keyImplType
	);

NgcGetKeyImplType(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 keyImplType
	);

NgcGetLogonDecryptionKeyNameForFirstLogonAfterUpgradeFromThreshold(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetLogonDecryptionKeyNameForFirstLogonAfterUpgradeFromThreshold(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetLogonDecryptionKeyName(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetLogonDecryptionKeyName(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetDefaultDecryptionKeyName(
	INT32 retVal
	);

NgcGetDefaultDecryptionKeyName(
	INT32 retVal
	);

NgcDeleteUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcDeleteUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetUserIdKeyContainerStatus(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 containerStatus
	);

NgcGetUserIdKeyContainerStatus(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UINT32 containerStatus
	);

NgcGetUserIdKeyCertificate(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetUserIdKeyCertificate(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcGetUserIdKeyPublicKey(
	INT32 retVal
	);

NgcGetUserIdKeyPublicKey(
	INT32 retVal
	);

NgcEnumUserIdKeys(
	INT32 retVal
	);

NgcEnumUserIdKeys(
	INT32 retVal
	);

NgcCreateUserIdKeyEx(
	INT32 retVal,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName
	);

NgcCreateUserIdKeyEx(
	INT32 retVal,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName
	);

NgcCreateUserIdKeyAPI(
	INT32 retVal,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName
	);

NgcCreateUserIdKeyAPI(
	INT32 retVal,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName
	);

NgcCreateUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName,
	BOOLEAN secureBioEnabled,
	BOOLEAN vsmAvailable,
	UINT32 flags,
	BOOLEAN ticketProvided
	);

NgcCreateUserIdKey(
	INT32 retVal,
	UINT64 PartA_PrivTags,
	UNICODESTRING idpDomainName,
	UNICODESTRING tenantDomainName,
	BOOLEAN secureBioEnabled,
	BOOLEAN vsmAvailable,
	UINT32 flags,
	BOOLEAN ticketProvided
	);

NgcCreateUserIdKeyHandle(
	INT32 retVal
	);

NgcCreateUserIdKeyHandle(
	INT32 retVal
	);

NgcDecryptWithUserIdKeySilent(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcDecryptWithUserIdKeySilent(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcEncryptWithAsymmetricKey(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcEncryptWithAsymmetricKey(
	INT32 retVal,
	UINT64 PartA_PrivTags
	);

NgcCreateTicketForSmartCardKeyOperationInvalidParameter(
	INT32 retVal
	);

I_c_RpcVscCreated(
	INT32 retVal
	);

NgcUtils::RpcClient::Bind(
	INT32 retVal
	);

c_NgcRpcDeleteContainer(
	INT32 retVal
	);

SwitchDefaultPasswordCredProvAfterContainerDeleted(
	VOID
	);

c_NgcRpcCreateContainer(
	INT32 retVal
	);

NgcMgmtSetLastCredProv(
	INT32 retVal
	);

InitializeDefaultProPolicy(
	INT32 retVal
	);

InitializeDefaultProPinPolicy(
	INT32 retVal
	);

InitializeDefaultConsumerPolicy(
	INT32 retVal
	);

InitializeDefaultPinPolicy(
	INT32 retVal
	);

NgcPolicyUsingDefaults(
	INT32 retVal
	);

NgcPolicyUsingDeviceLockPolicy(
	INT32 retVal
	);

NgcPolicyUsingMergedPassportCsp(
	INT32 retVal
	);

NgcPolicyUsingPassportCsp(
	INT32 retVal
	);

NgcPolicyUsingGroupPolicy(
	INT32 retVal
	);

PolicyManager.GetManagedPolicy(
	INT32 retVal,
	BOOL32 userSidProvided,
	UNICODESTRING tenantId,
	UINT32 policyType,
	BOOL32 isSupportedDeviceLockPolicy,
	UINT32 biometricsPolicy,
	UINT32 smartCardPolicy,
	UINT32 hardWarePolicy,
	UINT32 pinPolicyMinLength,
	UINT32 pinPolicyMaxLength,
	UINT32 pinPolicyUpperCase,
	UINT32 pinPolicyLowerCase,
	UINT32 pinPolicyDigits,
	UINT32 pinPolicySpecialCharacters,
	UINT32 pinPolicyOtherCharacters,
	BOOL32 allowSequences,
	UINT32 history,
	UINT32 expiration
	);

PolicyManager.GetManagedPolicy(
	INT32 retVal,
	BOOL32 userSidProvided,
	UNICODESTRING tenantId,
	UINT32 policyType,
	BOOL32 isSupportedDeviceLockPolicy,
	UINT32 biometricsPolicy,
	UINT32 smartCardPolicy,
	UINT32 hardWarePolicy,
	UINT32 pinPolicyMinLength,
	UINT32 pinPolicyMaxLength,
	UINT32 pinPolicyUpperCase,
	UINT32 pinPolicyLowerCase,
	UINT32 pinPolicyDigits,
	UINT32 pinPolicySpecialCharacters,
	UINT32 pinPolicyOtherCharacters,
	BOOL32 allowSequences,
	UINT32 history,
	UINT32 expiration
	);

OverrideHardwarePolicyFromRegistry(
	INT32 retVal
	);

InitializeHardwarePolicyFromRegistry(
	INT32 retVal
	);

GetManagedPolicyInternal(
	INT32 retVal
	);

MergedPolicies(
	INT32 retVal,
	UINT32 NumberOfPoliciesMerged
	);

MergePolicyFailed(
	INT32 retVal
	);

MergingPolicyFromTenant(
	INT32 retVal,
	UNICODESTRING TenantId
	);

EnumTenantIdKeys(
	INT32 retVal
	);

QueryKeyInfo(
	INT32 retVal
	);

OpenNgcPolicyKey(
	INT32 retVal
	);

DevicePolicyRootExistsButReadFailed(
	INT32 retVal
	);

ReadProContainerDevicePolicyRootFailed(
	INT32 retVal
	);

UserPolicyRootExistsButReadFailed(
	INT32 retVal
	);

ReadProContainerUserPolicyRootFailed(
	INT32 retVal
	);

InitializeNgcPolicyFailed(
	INT32 retVal
	);

InitializePinPolicyFailed(
	INT32 retVal
	);

FailedToReadAllowSimpleDevicePasswordPolicy(
	INT32 retVal
	);

InvalidExpirationValue(
	INT32 retVal,
	INT32 expiration
	);

FailedToReadDevicePasswordExpirationPolicy(
	INT32 retVal
	);

InvalidHistoryValue(
	INT32 retVal,
	INT32 history
	);

FailedToReadDevicePasswordHistoryPolicy(
	INT32 retVal
	);

InvalidMinDevicePasswordComplexCharactersValue(
	INT32 retVal
	);

FailedToReadMinDevicePasswordComplexCharactersPolicy(
	INT32 retVal
	);

FailedToReadAlphanumericDevicePasswordRequiredPolicy(
	INT32 retVal
	);

InvalidDevicePasswordLengthValue(
	INT32 retVal,
	INT32 minPasswordLength
	);

FailedToReadMinDevicePasswordLengthPolicy(
	INT32 retVal
	);

FailedToReadDevicePasswordEnabledPolicy(
	INT32 retVal
	);

DeviceLockPolicyNotSupportedBySku(
	INT32 retVal
	);

GpKeyEmpty(
	INT32 retVal
	);

IsKeyEmpty(
	INT32 retVal
	);

ReadGroupPolicyRootFailed(
	INT32 retVal
	);

OpenBioPolicyKeyFailed(
	INT32 retVal
	);

ReadPolicyValueDataOutOfRange(
	INT32 retVal,
	UNICODESTRING subKey,
	UNICODESTRING valueName
	);

UnexpectedTpmVersion(
	INT32 retVal
	);

TpmNotFound(
	INT32 retVal
	);

TpmVersionNotSupported(
	INT32 retVal
	);

TpmVersionInFIPSNotSupported(
	INT32 retVal
	);

InsecureTpmBlockedByPolicy(
	INT32 retVal
	);

GetTpmDeviceInfo(
	INT32 retVal
	);

NoTpmFound(
	INT32 retVal
	);

GetContainerTypeInfo(
	UINT32 retVal,
	UINT16 tpmVersion,
	UINT16 tpmSupport,
	UINT16 hardwarePolicy,
	UINT16 smartCardPolicy,
	UNICODESTRING providerName,
	BOOLEAN isInsecureTpm,
	BOOLEAN isInsecureTpmBlockedByWHfBPolicy,
	BOOLEAN isInsecureTpmBlockedByTpmPolicy,
	BOOLEAN isUnsatisfactoryTpm,
	BOOLEAN isUnsatisfactoryPregenPool,
	BOOLEAN isFips,
	BOOLEAN tpmLocked,
	BOOLEAN isexcludeTpm12
	);

NgcGetPregenKeyStateFailed(
	INT32 retVal
	);

IsTpm12ExcludedReadDeviceMDMPolicy(
	INT32 retVal
	);

IsTpm12ExcludedGetJoinInfo(
	INT32 retVal
	);

IsTpm12ExcludedReadDeviceGroupPolicy(
	INT32 retVal
	);

IsInsecureTpmBlockedByWHfBPolicyReadDeviceGroupPolicy(
	INT32 retVal
	);

IsInsecureTpmBlockedByTpmPolicyGetProperty(
	INT32 retVal
	);

IsInsecureTpmBlockedByTpmPolicyOpenStorageProvider(
	INT32 retVal
	);

NgcDisabledByConveniencePinPolicy(
	VOID
	);

RegGetValueW(
	INT32 retVal
	);

GetUserAccountType(
	INT32 retVal
	);

ConvertStringSidToSidW(
	UINT32 retVal
	);

NullNgcEnabledOrPolicySourceOrUserSid(
	INT32 retVal
	);

PolicyManager.QueryIsNgcEnabled(
	INT32 retVal,
	BOOL32 userSidProvided,
	UNICODESTRING tenantId,
	UINT16 ngcEnableState,
	UINT16 ngcPolicySource,
	UINT16 ngcEnabledModifiers,
	INT32 lStatus
	);

PolicyManager.QueryIsNgcEnabled(
	INT32 retVal,
	BOOL32 userSidProvided,
	UNICODESTRING tenantId,
	UINT16 ngcEnableState,
	UINT16 ngcPolicySource,
	UINT16 ngcEnabledModifiers,
	INT32 lStatus
	);

NgcMgmtIsAynContainerInVsmBind(
	INT32 retVal
	);

c_NgcMgmtIsAnyContainerInVsm(
	INT32 retVal
	);

NgcMgmtRemoveCompanionDeviceProtectorClientBind(
	INT32 retVal
	);

c_NgcMgmtRemoveCompanionDeviceProtector(
	INT32 retVal
	);

NgcMgmtAddCompanionDeviceProtectorClientBind(
	INT32 retVal
	);

c_NgcMgmtAddCompanionDeviceProtector(
	INT32 retVal
	);

NgcMgmtRemovePrebootProtectorClientBind(
	INT32 retVal
	);

c_NgcMgmtRemovePrebootProtector(
	INT32 retVal
	);

NgcMgmtAddPrebootProtectorClientBind(
	INT32 retVal
	);

c_NgcMgmtAddPrebootProtector(
	INT32 retVal
	);

NgcMgmtSetLastCredProvClientBind(
	INT32 retVal
	);

c_NgcMgmtSetLastCredProv(
	INT32 retVal
	);

NgcMgmtRemoveBioProtectorClientBind(
	INT32 retVal
	);

c_NgcMgmtRemoveBioProtector(
	INT32 retVal
	);

NgcMgmtAddBioProtectorClientBind(
	INT32 retVal
	);

c_NgcMgmtAddBioProtector(
	INT32 retVal
	);

NgcMgmtChangePinSilentClientBind(
	INT32 retVal
	);

c_NgcMgmtChangePinSilent(
	INT32 retVal
	);

NgcMgmtChangePinClientBind(
	INT32 retVal
	);

c_NgcMgmtChangePin(
	INT32 retVal
	);

NgcMgmtGetPolicyClientBind(
	INT32 retVal
	);

c_NgcMgmtGetPolicy(
	INT32 retVal
	);

NgcMgmtEnumContainersClientBind(
	INT32 retVal
	);

c_NgcMgmtEnumContainers(
	INT32 retVal
	);

NgcUtilsRpcClientBindError(
	INT32 retVal
	);

c_NgcTicketGetTicketFromPinCache(
	INT32 retVal
	);

c_NgcTicketCreateForSmartCard(
	INT32 retVal
	);

GetTokenInformation(
	UINT32 retVal
	);

ConvertStringSidToSid(
	UINT32 retVal
	);

LsaLookupUserAccountType(
	INT32 retVal
	);

OpenEventWFailed(
	UINT32 retVal
	);

StringCchPrintfWFailed(
	INT32 retVal
	);

RpcClientBindError(
	INT64 retVal
	);

RpcClientCreateBindingHandleError(
	INT32 retVal
	);

NoNewBindAttemptsOnUnrecoverableError(
	INT32 retVal
	);

RpcClientAlreadyBound(
	VOID
	);

RpcClientCreateSecurityDescriptorFailure(
	UINT32 retVal
	);

RpcClientCannotCopyServerSid(
	UINT32 retVal
	);

RpcClientInvalidServerSid(
	UINT32 retVal
	);

CannotMergeUninitializedPolicy(
	INT32 retVal
	);

NgcPolicyAlreadyInitialized(
	INT32 retVal
	);

NgcPinPolicyAlreadyInitialized(
	INT32 retVal
	);

NgcPolicyValidationFailedInvalidSmartCardPolicy(
	INT32 retVal
	);

NgcPolicyValidationFailedInvalidAttestationPolicy(
	INT32 retVal
	);

NgcPolicyValidationFailedInvalidbiometricsPolicy(
	INT32 retVal
	);

ValidationFailedInvalidExpiration(
	INT32 retVal
	);

ValidationFailedAllCharacterClassesDisallowed(
	INT32 retVal
	);

ValidationFailedInvalidPinHistoryCount(
	INT32 retVal
	);

ValidationFailedInvalidMinOrMaxLength(
	INT32 retVal
	);

ValidationFailedInvalidCharacterPolicyOption(
	INT32 retVal
	);

