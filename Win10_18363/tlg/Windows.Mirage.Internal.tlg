ProviderNames:
	Microsoft.Windows.Analog.SpectrumContinuous
	Microsoft.Windows.Analog.Spectrum.Activity
	Microsoft.Windows.Analog.Spectrum
	Microsoft.Windows.Analog.FloorFinder
	Microsoft.Windows.Analog.Spectrum.TrackingDiagnostics
	Microsoft.Windows.Analog.HolographicDriverClient
	Microsoft.Windows.Analog.HolographicDriverClientContinuous
	Microsoft.Windows.Analog.SpatialJournal
	Microsoft.Windows.TlgAggregateInternal



**** Events *****
ClientSensorInterest_Destroy(
	UINT32 sensorId
	);

ActivityStoppedAutomatically(
	VOID
	);

MirageInternalDllEntry(
	HEXINT64 MirageInstance,
	UINT32 ReasonCode,
	BOOLEAN LpvReservedIsNull
	);

MirageInternalDllGetActivationFactoryFirstCall(
	UNICODESTRING ActivatableClassId
	);

TelemetryComTaskPoolRemoveThread(
	DOUBLE removeThreadIdleTimeMilliseconds,
	INT32 numFailedTryRemoveThreadAttempts
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

Aggregate_WIL_Error(
	NULL Count,
	UINT32 Thread Id,
	HEXINT64 Return Address,
	INT32 Type,
	HRESULT HR,
	UINT32 Line Number,
	UINT64 PartA_PrivTags
	);

WIL_Error(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FloorDetector_ObjectLifetime(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FloorDetector_ObjectLifetime(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HolographicFrameMetadataToGetPoseAtTime(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT64 targetTimestamp
	);

HolographicFrameMetadata_GetNewPoseForReprojection(
	UINT32 presentId,
	UINT32 holographicFrameId,
	INT64 requestedTargetTimeTicks,
	INT64 sampleTimeTicks,
	INT64 currentTimeTicks,
	INT64 targetTimeTicks,
	INT64 sampleTimeToTargetTimeMicroSecs,
	INT64 currentTimeToTargetTimeMicroSecs,
	INT32 hr
	);

ClientSensorInterest_Initialize(
	UINT32 sensorId
	);

HolographicFrameMetadataToGetPoseAtTime(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function,
	INT64 callTimeInMicrosecs,
	INT64 predictionAmountInMicrosecs
	);

HolographicFrameMetadataToGetPoseAtTime(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	INT64 callTimeInMicrosecs,
	INT64 predictionAmountInMicrosecs
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HolographicFrameMetadataToGetPoseAtTime(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HolographicFrameMetadataToGetPoseAtTime(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityScopeNotExplicitlyStopped(
	UNICODESTRING activityType
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FloorDetector_ObjectLifetime(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

HolographicDevicesErrorStatusWatcherEventHandler(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

HolographicDeviceErrorStatusInfo(
	UNICODESTRING message
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HolographicDevicesErrorStatusWatcherEventHandler(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HolographicDevicesErrorStatusWatcherEventHandler(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

DispatchInputSourceEvent(
	UNICODESTRING EventName
	);

DispatchInputSourceEvent(
	UNICODESTRING EventName
	);

DispatchGestureEvent(
	INT32 Source,
	UNICODESTRING EventName
	);

EnvironmentManager_DataUpdateHandler(
	GUID spaceId,
	GUID oldSpaceId
	);

SpatialStageManager_SetFrameOfReference(
	GUID staticNodeId,
	GUID spatialAnchorId
	);

HolographicDisplayMonitorEnumerated(
	UINT32 vendorId,
	UINT32 deviceId,
	UINT32 luidLowPart,
	INT32 luidHighPart,
	UINT32 monitorTargetId,
	BOOLEAN isHmd,
	BOOLEAN isThrottled,
	BOOLEAN globalRegKeyThrottle,
	BOOLEAN disabledOnHoloLens,
	BOOLEAN whitelistRegKeyThrottle,
	BOOLEAN cpuCoreCountThrottle,
	BOOLEAN isIntegratedThrottle
	);

HolographicDisplayMonitorDropped(
	UNICODESTRING deviceInterfacePath,
	UINT32 outputAdapterLuidLowPart,
	INT32 outputAdapterLuidHighPart,
	UINT32 renderingAdapterLuidLowPart,
	INT32 renderingAdapterLuidHighPart,
	UINT32 targetId
	);

ClientComponentManager_OnSensorInterestCallback(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_OnSensorData(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_OnServerDisconnect(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_OnServerConnect(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_OnDestroy(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_OnStop(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_OnStart(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_OnCreate(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

ClientComponentManager_ThreadProc_WaitResult(
	UINT32 waitResult
	);

ClientComponentManager_ThreadProc(
	VOID
	);

ClientComponentManager_ThreadProc(
	VOID
	);

ClientComponentManager_Server_Disconnect(
	VOID
	);

MirageWaitConnectedTime(
	UINT32 timeInMicroseconds
	);

ClientComponentManager_Server_Connect(
	VOID
	);

ClientComponentManager_Shutdown(
	VOID
	);

ClientComponentManager_Shutdown(
	VOID
	);

ComponentManagerRetriedConnectionFailures(
	INT32 RetriedFailure
	);

ClientComponentManager_OnServerDisconnect(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnServerDisconnect(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ClientComponentManager_OnServerConnect(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnServerConnect(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ClientComponentManager_OnDestroy(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnDestroy(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ClientComponentManager_OnStop(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ClientComponentManager_OnStart(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnStart(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ClientComponentManager_OnCreate(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnCreate(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ClientComponentManager_OnSensorData(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnSensorData(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnSensorInterestCallback(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ClientComponentManager_OnSensorInterestCallback(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityStoppedAutomatically(
	VOID
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	HEX wilActivity,
	UINT32 hresult,
	UINT32 threadId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

ActivityFailure(
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

MetadataRequestedButNotFound(
	INT32 Source,
	UINT32 presentID,
	UINT32 processID,
	INT32 HRESULT
	);

MetadataRequested(
	UINT32 presentID,
	UINT32 committedProcessID
	);

TelemetryMetadataNotFoundCount(
	BOOL32 UTCReplace_AppSessionGuid,
	UINT32 metadataLookUpCount,
	UINT32 metadataNotFoundCount,
	UINT32 metadataNotFoundNoBufferForProcess,
	UINT32 metadataNotFoundIncohorentBufferForProcess
	);

GetRenderingMetadataSharedBufferForProcessResponseReceived(
	INT32 Source,
	UINT32 processId,
	INT32 result,
	UINT64 renderingMetadataFromAppFileMappingHandle,
	UINT64 renderingMetadataFromAppMutexHandle
	);

TelemetryHeartbeat_CountsByExecutionTime(
	INT32 context,
	UINT32 totalCount,
	FLOAT buckets,
	UINT32 counts
	);

TelemetryHeartbeat_CountsByPredictionAmount(
	INT32 context,
	UINT32 totalCount,
	FLOAT buckets,
	UINT32 counts
	);

SpatialDeviceComponent_GetLastKnownTrackerMode(
	STRING module,
	HEXINT64 spatialDeviceId,
	UINT8 trackerMode,
	STRING desiredTrackingLevel
	);

SpatialDeviceComponent_OnSensorData(
	VOID
	);

HeTSharedMemoryLayout_FindCoordinateFrame_UnableToLocate(
	GUID id,
	UINT32 coordinateFrameHint,
	BOOLEAN allowSmooth
	);

SpatialGraphComponent_AugmentedPoseQueryAccessDenied(
	HEXINT64 spatialDeviceId,
	STRING desiredTrackingBehavior
	);

SpatialGraphComponent_AugmentedPoseQueryFallbackBlocked(
	HEXINT64 spatialDeviceId,
	STRING desiredTrackingBehavior
	);

GetLatestPoseStatistics(
	FLOAT roundtripTimeInMilliseconds
	);

HeTSharedMemoryLayout_SmoothFrame(
	GUID id,
	FLOAT layoutToAnchorTransform
	);

HeTSharedMemoryLayout_Frame(
	GUID id,
	FLOAT layoutToAnchorTransform
	);

HeTSharedMemoryLayout_Summary(
	GUID currentLocalAnchor,
	FLOAT layoutToSmoothedTransform,
	FLOAT localGravity,
	UINT32 layoutVersion,
	UINT32 frameCount,
	UINT32 smoothFrameCount
	);

HandComponentGotDataFromSpectrum(
	VOID
	);

OnMapLayoutChanged(
	UINT32 layoutVersion,
	UINT32 orientationDriftMilliradians,
	UINT32 locationDriftMillimeters,
	GUID SpatialAnchor,
	GUID HeTAnchor
	);

HeadComponentHeadEventCallbackPerf(
	VOID
	);

DisplayComponent_UpdateDisplays(
	UINT32 displayCount
	);

TelemetryDisplayComponentDisplayAdded(
	INT32 Source,
	GUID DisplayId
	);

DisplayComponentDisplayRemoved(
	INT32 Source,
	GUID DisplayId
	);

DisplayComponent_OnSensorData(
	INT32 result
	);

TelemetryMetadataWriteFailedCount(
	BOOL32 UTCReplace_AppSessionGuid,
	UINT32 metadataTryWriteCount,
	UINT32 metadataWriteFailedCount,
	UINT32 metadataWriteFailedIncohorentBufferCount,
	UINT32 metadataWriteFailedUninitializedBufferCount
	);

GetRenderingMetadataFromAppSharedBufferResponseReceived(
	INT32 Source,
	INT32 result,
	UINT64 fileMappingHandle,
	UINT64 mutexHandle
	);

GetRenderingMetadataFromAppSharedBufferRequestSent(
	INT32 Source
	);

SharedMemoryMappingFailed(
	INT32 Result
	);

GetPoseAtTime_TranslationInvalid(
	UINT64 PartA_PrivTags
	);

OpenHolographicDevice(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	ANSISTRING DriverType,
	UNICODESTRING DeviceName,
	GUID CorrelationGUID
	);

GetPoseAtTime_NotEnoughPosesToInterpolate(
	UINT64 PartA_PrivTags
	);

HolographicDriverHandleWrapper_DeviceIoControlFailed(
	HEXINT64 pThis,
	UINT32 error,
	UINT32 dwIoControlCode,
	HEXINT64 pThis,
	GUID driverHandleCorrelationGuid
	);

DestroySpatialGraphNodeReference(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

TelemetryCloseHolographicDevice(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	ANSISTRING DriverType,
	UNICODESTRING DeviceName,
	GUID CorrelationGUID
	);

DestroySpatialGraphNodeReference(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

TrackingStateChanged(
	GUID correlationGuid,
	GUID nodeId,
	ANSISTRING oldState,
	ANSISTRING newState,
	INT64 qpf
	);

GetPoseAtTime_NotEnoughPosesToExtrapolate(
	UINT64 PartA_PrivTags
	);

CreateSpatialGraphNodeReference(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

OpenHolographicDevice(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

CloseHolographicDevice(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

OpenHolographicDevice(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

TelemetryOpenHolographicDevice(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

IoctlTimeout(
	GUID correlationGuid,
	HEXINT32 ioctlCode,
	UINT32 timeoutMilliseconds,
	GUID propertyKey,
	GUID nodeId,
	UNICODESTRING forDevice,
	UINT64 PartA_PrivTags
	);

SpatialGraphNodeReferenceFactoryDestroyed(
	HEXINT64 pFactory
	);

GetPoseAtTime_OrientationInvalid(
	UINT64 PartA_PrivTags
	);

TelemetryCloseHolographicDevice(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	NTSTATUS wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

GetPoseAtTime_PredictFromPoses(
	UINT64 PartA_PrivTags,
	INT32 hrPredictFromPoses,
	INT64 poseTimestampInQpcCounts,
	INT64 availableTimestampInQpcCounts,
	UINT32 validity,
	FLOAT nodeToParent
	);

CreateSpatialGraphNodeReference(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

DestroySpatialGraphNodeReference(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID driverHandleCorrelationGuid,
	GUID nodeId
	);

SpatialGraphNodeReferenceFactoryCreated(
	HEXINT64 pFactory
	);

CreateSpatialGraphNodeReference(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	GUID driverHandleCorrelationGuid,
	GUID nodeId,
	INT32 requestedTrackingLevel
	);

CloseHolographicDevice(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	ANSISTRING DriverType,
	UNICODESTRING DeviceName,
	GUID CorrelationGUID
	);

TelemetryOpenHolographicDevice(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

NoPoseReceivedYet(
	GUID nodeId,
	INT32 hr
	);

TelemetryOpenHolographicDevice(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	ANSISTRING DriverType,
	UNICODESTRING DeviceName,
	GUID CorrelationGUID
	);

StartTracking(
	GUID correlationGuid,
	GUID nodeId,
	ANSISTRING newState,
	INT64 qpf
	);

IoctlRanLong(
	GUID correlationGuid,
	HEXINT32 ioctlCode,
	HRESULT hresult,
	FLOAT elapsedMilliseconds,
	UINT32 thresholdMilliseconds,
	UINT64 PartA_PrivTags
	);

GetPoseAtTime_LatestPoseFromDriver(
	UINT64 PartA_PrivTags,
	UINT32 retrievedPoseIndex,
	UINT32 numPosesReturned,
	INT64 poseTimestampInQpcCounts,
	INT64 availableTimestampInQpcCounts,
	UINT32 validity,
	FLOAT nodeToParent
	);

GetPoseAtTime(
	GUID threadActivityId,
	HEXINT64 pNodeRef,
	GUID nodeId,
	INT64 targetTimestamp,
	INT64 basePoseSensorTimestamp,
	INT64 availableTimestamp,
	INT64 executionTimeInMicroSecs,
	INT64 deltaNowMinusSensorInMicroSecs,
	INT64 deltaToMinusNowInMicroSecs,
	INT64 deltaToMinusSensorInMicroSecs,
	INT64 poseRequestToAvailableInMicroSecs,
	INT64 motionToFilterDriverLatencyInMicroSecs,
	INT32 static_cast<int>(predictionType),
	INT64 value.PoseTimestampInQpcCounts,
	INT64 value.AvailableTimestampInQpcCounts,
	FLOAT value.NodeToParent.OrientationAndPosition,
	FLOAT value.LinearVelocity,
	FLOAT value.AngularVelocity,
	FLOAT value.LinearAccel,
	FLOAT value.AngularAccel,
	HEXINT32 value.Validity,
	BOOLEAN positionApproximated,
	HEXINT32 changedValidityFlags
	);

Log_Information(
	UINT32 hr,
	UNICODESTRING message
	);

Log_Error(
	UINT32 hr,
	UNICODESTRING message
	);

CloseHolographicDevice(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

TelemetryCloseHolographicDevice(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SpatialGraphDeviceNotUsable(
	UNICODESTRING deviceInterfacePath
	);

SpatialDeviceManager_FetchAllDevices(
	STRING module
	);

SpatialDeviceManager_FetchAllDevices_Synchronized(
	STRING module,
	HEXINT64 newId,
	HEXINT64 oldId,
	UINT32 deviceCount
	);

SpatialDeviceManager_DeviceAdded(
	STRING module,
	HEXINT64 id,
	UINT32 deviceCount
	);

SpatialDeviceManager_DeviceRemoved(
	STRING module,
	HEXINT64 id,
	UINT32 deviceCount
	);

SpatialDeviceManager_CreateOrUpdateDevice_DynamicNodeId(
	STRING module,
	HEXINT64 id,
	GUID dynamicNodeId,
	UNICODESTRING spatialGraphDeviceInterfacePath,
	INT32 poseQueryLegacyFallbackEnabled,
	UNICODESTRING boundSpatialGraphDeviceInterfacePath,
	GUID boundDynamicNodeId
	);

SpatialDeviceManager_CreateOrUpdateDevice_DynamicNodeId(
	STRING module,
	HEXINT64 id,
	GUID dynamicNodeId,
	INT32 poseQueryLegacyFallbackEnabled,
	UNICODESTRING boundSpatialGraphDeviceInterfacePath,
	GUID boundDynamicNodeId
	);

SpatialDeviceManager_CreateOrUpdateDevice_RelatedDevice(
	STRING module,
	HEXINT64 id,
	UNICODESTRING relatedDeviceInterfacePath,
	INT32 poseQueryLegacyFallbackEnabled,
	UNICODESTRING boundSpatialGraphDeviceInterfacePath,
	GUID boundDynamicNodeId
	);

SpatialDevice_OrphanedDeviceUsed(
	STRING module,
	HEXINT64 id,
	ANSISTRING caller
	);

SpatialDevice_OrphanedDeviceUsed_Aggregated(
	STRING module,
	UINT32 instanceCount,
	HEXINT64 id,
	ANSISTRING lastCaller
	);

SpatialDeviceManager_Destroyed(
	STRING module
	);

SpatialDeviceManager_Initialized(
	STRING module
	);

SpatialDevice_UpdateGravityAlignedPointingToPose(
	FLOAT gravityAlignedPointingToPose
	);

HeadComponent_GetGravityAlignedHeadToPose(
	FLOAT headToRig,
	FLOAT rigPoseToDeviceTransform,
	FLOAT rigGravityInPoseSpace,
	FLOAT gravityAlignedHeadToNonGravityAlignedHead
	);

HeadComponent_UpdateLastKnownGravityAlignedHeadToPose_AdjustOriginalPoseToCurrentPose(
	FLOAT lastKnownPoseToGravityAlignedHead,
	FLOAT originalPoseToOldPose,
	FLOAT originalPoseToCurrentPose
	);

SpatialDevice_InvokeDesiredTrackingExpiringCallbacks(
	STRING module,
	HEXINT64 id,
	STRING desiredTracking
	);

SpatialDevice_InvokeTrackingStateChangedCallbacks(
	STRING module,
	HEXINT64 id,
	STRING currentState,
	STRING previouslyNotifiedState
	);

SpatialDevice_DesiredTrackingExpiring_FirstCall(
	STRING module,
	HEXINT64 id,
	STRING desiredExpiring
	);

SpatialDevice_DesiredTrackingExpiring_Aggregated(
	NULL Count,
	NULL oneDesiredExpiring,
	STRING module,
	HEXINT64 id
	);

SpatialDevice_DesiredTrackingExpiring(
	STRING module,
	HEXINT64 id,
	STRING desiredExpiring
	);

SpatialDevice_DesiredTrackingChanged_FirstCall(
	STRING module,
	HEXINT64 id,
	STRING desiredTracking,
	STRING prevDesiredTracking
	);

SpatialDevice_DesiredTrackingChanged_Aggregated(
	NULL Count,
	NULL oneDesiredTracking,
	NULL onePrevDesiredTracking,
	STRING module,
	HEXINT64 id
	);

SpatialDevice_TrackingStateChanged(
	STRING module,
	HEXINT64 id,
	STRING currentState,
	STRING previousState,
	STRING desired
	);

SpatialDevice_DesiredTrackingChanged(
	STRING module,
	HEXINT64 id,
	STRING desiredTracking,
	STRING prevDesiredTracking
	);

SpatialDevice_ForceNotifyDesiredTracking(
	STRING module,
	HEXINT64 id,
	STRING desiredTracking
	);

SpatialDevice_DesiredTrackingStatistics(
	STRING module,
	HEXINT64 id,
	UINT32 totalCount,
	UINT32 positionCount,
	UINT32 orientationCount
	);

SpatialDevice_DesiredTrackingKeepAlive(
	STRING module,
	HEXINT64 spatialDeviceId,
	STRING desired
	);

SpatialDevice_PoseStatistics(
	STRING module,
	HEXINT64 id,
	UINT32 totalCount,
	UINT32 fallbackCount,
	UINT32 fallbackBlockedCount,
	UINT32 deniedCount,
	UINT32 validCount,
	UINT32 positionCount,
	UINT32 orientationCount,
	UINT32 requestTrackingCount,
	UINT32 requestRenderingCount
	);

SpatialDevice_RecentPoseUpdated(
	STRING module,
	HEXINT64 id
	);

SpatialDevice_GetPoseForTime(
	STRING module,
	HEXINT64 id,
	HEXINT64 nodeReferenceAddress,
	GUID nodeId,
	STRING renderingBehavior,
	STRING desiredTrackingBehavior,
	INT64 targetTimestampQpc,
	FLOAT targetTimestampMillis,
	INT64 poseTimestampQpc,
	UINT8 trackerMode,
	UNICODESTRING processName
	);

SpatialDevice_PoseQueryAccessDenied(
	STRING module,
	HEXINT64 spatialDeviceId,
	STRING desiredTrackingBehavior
	);

SpatialDevice_ApplyDesiredTrackingLevelFailed(
	STRING module,
	HEXINT64 id,
	STRING desiredTracking
	);

SpatialDevice_SynthesizedInvalidPoseDefaults(
	STRING module,
	HEXINT64 id,
	BOOLEAN recentPoseValid,
	GUID rootNodeId,
	FLOAT rootToDevice,
	FLOAT poseToDevice,
	FLOAT gravityInPoseSpace,
	FLOAT gravityInDeviceSpace
	);

SpatialDevice_AppliedDesiredTrackingLevelAfterPreviousFailure(
	STRING module,
	HEXINT64 id,
	STRING desiredTracking
	);

SpatialDevice_FailedToCreateNodeReference(
	STRING module,
	HEXINT64 id,
	INT32 HRESULT
	);

SpatialDevice_ResetNodeReference(
	STRING module,
	HEXINT64 id,
	UNICODESTRING spatialGraphDevicePath,
	GUID spatialGraphDynamicNodeId,
	HEXINT64 driverClientLifetimeId
	);

SpatialDevice_Initialized_FullyQualifiedDynamicNode(
	STRING module,
	HEXINT64 id,
	UNICODESTRING spatialGraphDeviceInterfacePath,
	GUID dynamicNodeId
	);

SpatialDevice_PropertiesUpdated(
	STRING module,
	HEXINT64 id,
	BOOLEAN propertiesChanged,
	UNICODESTRING newSpatialGraphDevicePath,
	HEXINT64 newSpatialGraphDriverClientLifetimeId,
	GUID newSpatialGraphDynamicNodeId,
	HEXINT32 newPoseQueryFlags,
	UNICODESTRING oldSpatialGraphDevicePath,
	HEXINT64 oldSpatialGraphDriverClientLifetimeId,
	GUID oldSpatialGraphDynamicNodeId,
	HEXINT32 oldPoseQueryFlags
	);

SpatialDevice_Initialized_DynamicNodeId(
	STRING module,
	HEXINT64 id,
	GUID dynamicNodeId
	);

SpatialDevice_Initialized_RelatedDeviceInterfacePath(
	STRING module,
	HEXINT64 id,
	UNICODESTRING deviceInterfacePath
	);

SpatialDevice_Destroyed(
	STRING module,
	HEXINT64 id
	);

SpatialDevice_GetNodePoseForTimeHelper(
	STRING module,
	INT32 getPoseAtTimeResult,
	INT64 posePredictionTimeInTicks,
	BOOLEAN wantRenderingPose,
	UINT32 validity,
	GUID parentNodeId,
	FLOAT nodeToParent,
	INT64 predictionAmountInTicks,
	INT32 predictionAmountValid,
	UINT64 remotePoseId,
	INT32 remotePoseValid
	);

PoseDataObserved(
	ANSISTRING file,
	UINT32 line,
	BOOL32 rootToDeviceTransformValid,
	GUID poseData.localStaticNodeId,
	FLOAT poseData.localToPoseTransform,
	FLOAT poseData.localToStationaryCoordinateFrameTransform,
	GUID poseData.rootNodeId,
	INT64 poseData.predictionTimeInTicks,
	FLOAT poseData.rootToDeviceTransform,
	FLOAT poseData.poseToDeviceTransform,
	FLOAT poseData.gravityInPoseSpace,
	BOOL32 poseData.gravityValid,
	UINT8 poseData.trackingMode
	);

DynamicNodePoseQueueLayoutData_PredictionAmountExceeded(
	STRING module,
	INT64 targetTimestampQpc,
	FLOAT targetTimestampMillis,
	FLOAT predictionAmountMillis
	);

LogDynamicUpdateEntries(
	UINT8 data,
	UINT32 sequenceId,
	UINT32 version
	);

LogControlSignalEntries(
	UINT8 data,
	UINT32 sequenceId,
	UINT32 version
	);

LogChangeEntries(
	UINT8 data,
	UINT32 sequenceId,
	UINT32 version
	);

LogStaticUpdateEntries(
	UINT8 data,
	UINT32 sequenceId,
	UINT32 version
	);

TlgAggregateSummary(
	GUID Provider,
	UINT64 NumFlushes,
	UINT64 MaxEntriesStored,
	UINT64 TotalEntriesFlushed,
	UINT32 MaxEntriesFlushed,
	UINT32 MinEntriesFlushed,
	UINT32 NumBucketLimitReached,
	UINT32 NumAllocationFailures,
	UINT32 NumLargeEventFailures
	);

