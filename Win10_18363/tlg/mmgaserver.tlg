ProviderNames:
	Microsoft.Windows.Mapi.MMGA
	Microsoft.Windows.Mapi.MMGA



**** Events *****
ActivityStoppedAutomatically(
	VOID
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

Switching to sta because of simple flag(
	VOID
	);

Selecting clsid(
	UNICODESTRING Selected clsid is
	);

MMGAServerSetup(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

MMGAServerSetup(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MMGAServerSetup(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

HrGetGALFromEmsmdbUIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pSessIdl != nullptr,
	BOOLEAN lpAdrBookIdl != nullptr,
	BOOLEAN pEmsmdbUIDIdl != nullptr,
	BOOLEAN lpcbeid != nullptr,
	BOOLEAN lppeidIdl != nullptr
	);

HrGetGALFromEmsmdbUIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrGetGALFromEmsmdbUIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrGetAutoDiscoverXMLIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING pwzAddress,
	UNICODESTRING pwzPassword,
	UINT64 hCancelEvent,
	UINT32 ulFlags,
	BOOLEAN ppXmlStreamIdl != nullptr
	);

HrGetAutoDiscoverXMLIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrGetAutoDiscoverXMLIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetDefCachedModeDownloadPubFoldFavsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pfPolicy != nullptr
	);

GetDefCachedModeDownloadPubFoldFavsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetDefCachedModeDownloadPubFoldFavsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetDefCachedModeIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pfPolicy != nullptr
	);

GetDefCachedModeIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetDefCachedModeIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrOpenABEntryWithResolvedRowIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN prwResolvedIdl != nullptr,
	BOOLEAN pAddrBookIdl != nullptr,
	UINT32 cbEntryID,
	BOOLEAN lpEntryIDIdl != nullptr,
	BOOLEAN lpInterface != nullptr,
	UINT32 ulFlags,
	BOOLEAN lpulObjType != nullptr,
	BOOLEAN lppUnk != nullptr
	);

HrOpenABEntryWithResolvedRowIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrOpenABEntryWithResolvedRowIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrOpenABEntryWithProviderUIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pEmsabpUIDIdl != nullptr,
	BOOLEAN pAddrBookIdl != nullptr,
	UINT32 cbEntryID,
	BOOLEAN lpEntryIDIdl != nullptr,
	BOOLEAN lpInterface != nullptr,
	UINT32 ulFlags,
	BOOLEAN lpulObjType != nullptr,
	BOOLEAN lppUnk != nullptr
	);

HrOpenABEntryWithProviderUIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrOpenABEntryWithProviderUIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrOpenABEntryWithExchangeContextIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pmsessIdl != nullptr,
	BOOLEAN pEmsmdbUIDIdl != nullptr,
	BOOLEAN pAddrBookIdl != nullptr,
	UINT32 cbEntryID,
	BOOLEAN lpEntryIDIdl != nullptr,
	BOOLEAN lpInterface != nullptr,
	UINT32 ulFlags
	);

HrOpenABEntryWithExchangeContextIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrOpenABEntryWithExchangeContextIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrOpenABEntryUsingDefaultContextIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pmsessIdl != nullptr,
	BOOLEAN pAddrBookIdl != nullptr,
	UINT32 cbEntryID,
	BOOLEAN lpEntryIDIdl != nullptr,
	BOOLEAN lpInterface != nullptr,
	UINT32 ulFlags,
	BOOLEAN lpulObjType != nullptr,
	BOOLEAN lppUnk != nullptr
	);

HrOpenABEntryUsingDefaultContextIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrOpenABEntryUsingDefaultContextIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrDoABDetailsWithProviderUIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pEmsabpUIDIdl != nullptr,
	BOOLEAN pAddrBookIdl != nullptr,
	BOOLEAN lpulUIParam != nullptr,
	BOOLEAN lpfnDismissIdl != nullptr,
	UINT64 lpvDismissContext,
	UINT32 cbEntryID,
	BOOLEAN lpEntryIDIdl != nullptr,
	BOOLEAN lpfButtonCallbackIdl != nullptr,
	UINT64 lpvButtonContext,
	BOOLEAN lpszButtonText != nullptr,
	UINT32 ulFlags
	);

HrDoABDetailsWithProviderUIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrDoABDetailsWithProviderUIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrAddColumnsExIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lptblIdl != nullptr,
	BOOLEAN lpproptagColumnsNewIdl != nullptr,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN lpFreeBufferIdl != nullptr,
	BOOLEAN lpfnFilterColumnsIdl != nullptr
	);

HrAddColumnsExIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrAddColumnsExIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrAddColumnsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lptblIdl != nullptr,
	BOOLEAN lpproptagColumnsNewIdl != nullptr,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN lpFreeBufferIdl != nullptr
	);

HrAddColumnsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrAddColumnsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

CreateTableIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpInterface != nullptr,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN lpAllocateMoreIdl != nullptr,
	BOOLEAN lpFreeBufferIdl != nullptr,
	UINT64 lpvReserved,
	UINT32 ulTableType,
	UINT32 ulPropTagIndexColumn,
	BOOLEAN lpSPropTagArrayColumnsIdl != nullptr,
	BOOLEAN lppTableDataIdl != nullptr
	);

CreateTableIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

CreateTableIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

CreateIPropIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpInterface != nullptr,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN lpAllocateMoreIdl != nullptr,
	BOOLEAN lpFreeBufferIdl != nullptr,
	UINT64 lpvReserved,
	BOOLEAN lppPropDataIdl != nullptr
	);

CreateIPropIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

CreateIPropIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

WrapStoreEntryIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 ulFlags,
	BOOLEAN szDLLName != nullptr,
	UINT32 cbOrigEntry,
	BOOLEAN lpOrigEntryIdl != nullptr,
	BOOLEAN lpcbWrappedEntry != nullptr,
	BOOLEAN lppWrappedEntryIdl != nullptr
	);

WrapStoreEntryIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

WrapStoreEntryIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

WrapCompressedRTFStreamExIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpCompressedRTFStreamIdl != nullptr,
	BOOLEAN pWCSInfoIdl != nullptr,
	BOOLEAN lppUncompressedRTFStreamIdl != nullptr,
	BOOLEAN pRetInfoIdl != nullptr
	);

WrapCompressedRTFStreamExIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

WrapCompressedRTFStreamExIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

WrapCompressedRTFStreamIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpCompressedRTFStreamIdl != nullptr,
	UINT32 ulFlags,
	BOOLEAN lpUncompressedRTFStreamIdl != nullptr
	);

WrapCompressedRTFStreamIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

WrapCompressedRTFStreamIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

UlPropSizeIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpSPropValueIdl != nullptr
	);

UlPropSizeIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

UlPropSizeIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ScCreateConversationIndexIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 cbParent,
	BOOLEAN lpbParent != nullptr,
	BOOLEAN lpcbIndex != nullptr,
	BOOLEAN lppbIndex != nullptr
	);

ScCreateConversationIndexIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ScCreateConversationIndexIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ScDupPropsetIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT32 cprop,
	BOOLEAN rgpropIdl != nullptr,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN prgpropIdl != nullptr
	);

ScDupPropsetIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ScDupPropsetIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ScCountPropsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT32 cprop,
	BOOLEAN rgpropIdl != nullptr,
	BOOLEAN pcb != nullptr
	);

ScCountPropsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ScCountPropsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ScCopyPropsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT32 cprop,
	BOOLEAN rgpropIdl != nullptr,
	BOOLEAN pvDst != nullptr,
	BOOLEAN pcb != nullptr
	);

ScCopyPropsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ScCopyPropsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

RTFSyncIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpMessageIdl != nullptr,
	UINT32 ulFlags,
	BOOLEAN lpfMessageUpdated != nullptr
	);

RTFSyncIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

RTFSyncIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MapStorageSCodeIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	INT32 StgSCode
	);

MapStorageSCodeIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MapStorageSCodeIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrValidateIPMSubtreeIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpMDBIdl != nullptr,
	UINT32 ulFlags,
	BOOLEAN lpcValues != nullptr,
	BOOLEAN lppPropsIdl != nullptr,
	BOOLEAN lppMapiErrorIdl != nullptr
	);

HrValidateIPMSubtreeIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrValidateIPMSubtreeIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrQueryAllRowsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN ptableIdl != nullptr,
	BOOLEAN ptagaIdl != nullptr,
	BOOLEAN presIdl != nullptr,
	BOOLEAN psosIdl != nullptr,
	INT32 crowsMax,
	BOOLEAN pprowsIdl != nullptr
	);

HrQueryAllRowsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrQueryAllRowsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrIStorageFromStreamIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpUnkIn != nullptr,
	BOOLEAN lpInterface != nullptr,
	UINT32 ulFlags,
	BOOLEAN lppStorageOut != nullptr
	);

HrIStorageFromStreamIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrIStorageFromStreamIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrSetOnePropIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pmpIdl != nullptr,
	BOOLEAN ppropIdl != nullptr
	);

HrSetOnePropIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrSetOnePropIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrGetOnePropIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pmpIdl != nullptr,
	UINT32 ulPropTag,
	BOOLEAN pppropIdl != nullptr
	);

HrGetOnePropIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrGetOnePropIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrSzFromEntryIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 cb,
	BOOLEAN pentryIdl != nullptr,
	BOOLEAN psz != nullptr
	);

HrSzFromEntryIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrSzFromEntryIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrEntryIDFromSzIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	ANSISTRING sz,
	BOOLEAN pcb != nullptr,
	BOOLEAN ppentryIdl != nullptr
	);

HrEntryIDFromSzIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrEntryIDFromSzIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrDispatchNotificationsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 ulFlags
	);

HrDispatchNotificationsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrDispatchNotificationsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrDecomposeMsgIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN psessionIdl != nullptr,
	ANSISTRING szMsgID,
	BOOLEAN pcbStoreEID != nullptr,
	BOOLEAN ppStoreEIDIdl != nullptr,
	BOOLEAN pcbMsgEID != nullptr,
	BOOLEAN ppMsgEIDIdl != nullptr
	);

HrDecomposeMsgIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrDecomposeMsgIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrDecomposeEIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN psessionIdl != nullptr,
	UINT32 cbEID,
	BOOLEAN pEIDIdl != nullptr,
	BOOLEAN pcbStoreEID != nullptr,
	BOOLEAN ppStoreEIDIdl != nullptr,
	BOOLEAN pcbMsgEID != nullptr,
	BOOLEAN ppMsgEIDIdl != nullptr
	);

HrDecomposeEIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrDecomposeEIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrComposeMsgIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN psessionIdl != nullptr,
	UINT32 cbStoreRecordKey,
	BOOLEAN pStoreRecordKey != nullptr,
	UINT32 cbMsgEID,
	BOOLEAN pMsgEIDIdl != nullptr,
	BOOLEAN pszMsgID != nullptr
	);

HrComposeMsgIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrComposeMsgIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

HrComposeEIDIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN psessionIdl != nullptr,
	UINT32 cbStoreRecordKey,
	BOOLEAN pStoreRecordKey != nullptr,
	UINT32 cbMsgEID,
	BOOLEAN pMsgEIDIdl != nullptr,
	BOOLEAN pcbEID != nullptr,
	BOOLEAN ppEIDIdl != nullptr
	);

HrComposeEIDIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

HrComposeEIDIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

OpenStreamOnFileWIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN lpFreeBufferIdl != nullptr,
	UINT32 ulFlags,
	UNICODESTRING lpszFileName,
	UNICODESTRING lpszPrefix,
	BOOLEAN lppStreamIdl != nullptr
	);

OpenStreamOnFileWIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

OpenStreamOnFileWIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

OpenStreamOnFileIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN lpFreeBufferIdl != nullptr,
	UINT32 ulFlags,
	ANSISTRING lpszFileName,
	ANSISTRING lpszPrefix,
	BOOLEAN lppStreamIdl != nullptr
	);

OpenStreamOnFileIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

OpenStreamOnFileIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

OpenTnefStreamExIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 lpvSupport,
	BOOLEAN lpStreamIdl != nullptr,
	ANSISTRING lpszStreamName,
	UINT32 ulFlags,
	BOOLEAN lpMessageIdl != nullptr,
	UINT16 wKeyVal,
	BOOLEAN lpAddressBookIdl != nullptr,
	BOOLEAN lppTNEFIdl != nullptr
	);

OpenTnefStreamExIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

OpenTnefStreamExIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

OpenTnefStreamIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 lpvSupport,
	BOOLEAN lpStreamIdl != nullptr,
	ANSISTRING lpszStreamName,
	UINT32 ulFlags,
	BOOLEAN lpMessageIdl != nullptr,
	UINT16 wKey,
	BOOLEAN lppTNEFIdl != nullptr
	);

OpenTnefStreamIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

OpenTnefStreamIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetTnefStreamCodepageIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpStreamIdl != nullptr,
	BOOLEAN lpulCodepage != nullptr,
	BOOLEAN lpulSubCodePage != nullptr
	);

GetTnefStreamCodepageIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetTnefStreamCodepageIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetInstanceIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pvalMvIdl != nullptr,
	BOOLEAN pvalSvIdl != nullptr,
	UINT32 uliInst
	);

GetInstanceIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetInstanceIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

OpenIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpMsgSess != nullptr,
	BOOLEAN lpAllocateBufferIdl != nullptr,
	BOOLEAN lpAllocateMoreIdl != nullptr,
	BOOLEAN lpFreeBufferIdl != nullptr,
	BOOLEAN lpmalloc != nullptr,
	UINT32 lpMapiSup,
	BOOLEAN lpStg != nullptr,
	BOOLEAN lpfMsgCallReleaseIdl != nullptr,
	UINT32 ulCallerData,
	UINT32 ulFlags,
	BOOLEAN lppMsgIdl != nullptr
	);

OpenIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

OpenIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

SetAttribIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpObject != nullptr,
	BOOLEAN lpPropTagsIdl != nullptr,
	BOOLEAN lppPropAttrsIdl != nullptr,
	BOOLEAN lppPropProblemsIdl != nullptr
	);

SetAttribIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

SetAttribIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

GetAttribIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpObject != nullptr,
	BOOLEAN lpPropTagArrayIdl != nullptr,
	BOOLEAN lppPropAttrArrayIdl != nullptr
	);

GetAttribIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

GetAttribIMsgOnIStgIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

LpValFindPropIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 ulPropTag,
	UINT32 cValues,
	BOOLEAN lpPropArrayIdl != nullptr
	);

LpValFindPropIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

LpValFindPropIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FPropExistsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pobjIdl != nullptr,
	UINT32 ulPropTag
	);

FPropExistsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FPropExistsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FPropContainsPropIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpSPropValueDstIdl != nullptr,
	BOOLEAN lpSPropValueSrcIdl != nullptr,
	UINT32 ulFuzzyLevel
	);

FPropContainsPropIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FPropContainsPropIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FPropComparePropIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpSPropValue1Idl != nullptr,
	UINT32 ulRelOp,
	BOOLEAN lpSPropValue2Idl != nullptr
	);

FPropComparePropIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FPropComparePropIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FEqualNamesIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpName1Idl != nullptr,
	BOOLEAN lpName2Idl != nullptr
	);

FEqualNamesIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FEqualNamesIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadSortOrderSetIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpsosIdl != nullptr
	);

FBadSortOrderSetIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadSortOrderSetIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadRowSetIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpRowSetIdl != nullptr
	);

FBadRowSetIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadRowSetIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadRowIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lprowIdl != nullptr
	);

FBadRowIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadRowIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadRglpszWIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lppszW != nullptr,
	UINT32 cStrings
	);

FBadRglpszWIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadRglpszWIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadRestrictionIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpresIdl != nullptr
	);

FBadRestrictionIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadRestrictionIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadPropTagIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 ulPropTag
	);

FBadPropTagIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadPropTagIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadPropIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lppropIdl != nullptr
	);

FBadPropIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadPropIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadEntryListIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpEntryListIdl != nullptr
	);

FBadEntryListIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadEntryListIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FBadColumnSetIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpptaColsIdl != nullptr
	);

FBadColumnSetIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FBadColumnSetIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

EnableIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 ftgIdl,
	INT32 fEnable
	);

EnableIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

EnableIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

DeregisterIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 ftgIdl
	);

DeregisterIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

DeregisterIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ChangeIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 ftgIdl,
	BOOLEAN pfnIdleIdl != nullptr,
	UINT64 pvIdleParam,
	INT16 priIdle,
	UINT32 csecIdle,
	UINT16 iroIdle,
	UINT16 ircIdle
	);

ChangeIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ChangeIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FtgRegisterIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pfnIdleIdl != nullptr,
	UINT64 pvIdleParam,
	INT16 priIdle,
	UINT32 csecIdle,
	UINT16 iroIdle
	);

FtgRegisterIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

FtgRegisterIdleRoutineIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIDeinitIdleIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

MAPIDeinitIdleIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIDeinitIdleIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIInitIdleIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpvReserved != nullptr
	);

MAPIInitIdleIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIInitIdleIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIOpenLocalFormContainerIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN ppfcntIdl != nullptr
	);

MAPIOpenLocalFormContainerIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIOpenLocalFormContainerIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIOpenFormMgrIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN pSessionIdl != nullptr,
	BOOLEAN ppmgrIdl != nullptr
	);

MAPIOpenFormMgrIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIOpenFormMgrIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPICrashRecoveryIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 ulFlags
	);

MAPICrashRecoveryIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPICrashRecoveryIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIAdminProfilesIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 ulFlags,
	BOOLEAN lppProfAdminIdl != nullptr
	);

MAPIAdminProfilesIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIAdminProfilesIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPILogonExIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 ulUIParam,
	BOOLEAN lpszProfileName != nullptr,
	UINT32 ulFlags,
	BOOLEAN lppSessionIdl != nullptr
	);

MAPILogonExIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPILogonExIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

DeinitMapiUtilIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

DeinitMapiUtilIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

DeinitMapiUtilIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

ScInitMapiUtilIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT32 ulFlags
	);

ScInitMapiUtilIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ScInitMapiUtilIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIUninitializeIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

MAPIUninitializeIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIUninitializeIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIInitializeIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	BOOLEAN lpMapiInit != nullptr
	);

MAPIInitializeIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIInitializeIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIResolveNameIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	ANSISTRING lpszName,
	UINT32 flFlags,
	UINT32 ulReserved,
	BOOLEAN lppRecipIdl != nullptr
	);

MAPIResolveNameIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIResolveNameIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIDetailsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	BOOLEAN lpRecipIdl != nullptr,
	UINT32 flFlags,
	UINT32 ulReserved
	);

MAPIDetailsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIDetailsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIAddressIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	ANSISTRING lpszCaption,
	UINT32 nEditFields,
	ANSISTRING lpszLabels,
	UINT32 nRecips,
	BOOLEAN lpRecipsIdl != nullptr,
	UINT32 flFlags,
	UINT32 ulReserved,
	BOOLEAN lpnNewRecips != nullptr,
	BOOLEAN lppNewRecipsIdl != nullptr
	);

MAPIAddressIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIAddressIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIDeleteMailIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	ANSISTRING lpszMessageID,
	UINT32 flFlags,
	UINT32 ulReserved
	);

MAPIDeleteMailIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIDeleteMailIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPISaveMailIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	BOOLEAN lpMessageIdl != nullptr,
	UINT32 flFlags,
	UINT32 ulReserved,
	BOOLEAN lpszMessageID != nullptr
	);

MAPISaveMailIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPISaveMailIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIReadMailIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	ANSISTRING lpszMessageID,
	UINT32 flFlags,
	UINT32 ulReserved,
	BOOLEAN lppMessageIdl != nullptr
	);

MAPIReadMailIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIReadMailIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPIFindNextIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	ANSISTRING lpszMessageType,
	ANSISTRING lpszSeedMessageID,
	UINT32 flFlags,
	UINT32 ulReserved,
	BOOLEAN lpszMessageID != nullptr
	);

MAPIFindNextIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPIFindNextIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPISendMailDocumentsIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 ulUIParam,
	ANSISTRING lpszDelimChar,
	ANSISTRING lpszFilePaths,
	ANSISTRING lpszFileNames,
	UINT32 ulReserved
	);

MAPISendMailDocumentsIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPISendMailDocumentsIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPISendMailWIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	BOOLEAN lpMessageIdl != nullptr,
	UINT32 flFlags,
	UINT32 ulReserved
	);

MAPISendMailWIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPISendMailWIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPISendMailIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	BOOLEAN lpMessageIdl != nullptr,
	UINT32 flFlags,
	UINT32 ulReserved
	);

MAPISendMailIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPISendMailIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPILogoffIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 lhSession,
	UINT64 ulUIParam,
	UINT32 flFlags,
	UINT32 ulReserved
	);

MAPILogoffIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPILogoffIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

MAPILogonIdl(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UINT64 ulUIParam,
	ANSISTRING lpszProfileName,
	UINT32 flFlags,
	UINT32 ulReserved,
	BOOLEAN lplhSession != nullptr
	);

MAPILogonIdl(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

MAPILogonIdl(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

Failed to acquire MAPIFreeBuffer function pointer(
	VOID
	);

Calling server function IExchangeManageStore::GetPublicFolderTable(
	VOID
	);

Calling server function IExchangeManageStore::GetRights(
	VOID
	);

Calling server function IExchangeManageStore::GetMailboxTable(
	VOID
	);

Calling server function IExchangeManageStore::EntryIDFromSourceKey(
	VOID
	);

Calling server function IExchangeManageStore::CreateStoreEntryID(
	VOID
	);

Calling server function IPersistMessage::SaveCompleted(
	VOID
	);

Calling server function IPersistMessage::HandsOffMessage(
	VOID
	);

Calling server function IPersistMessage::Save(
	VOID
	);

Calling server function IPersistMessage::Load(
	VOID
	);

Calling server function IPersistMessage::IsDirty(
	VOID
	);

Calling server function IPersistMessage::InitNew(
	VOID
	);

Calling server function IPersistMessage::GetClassID(
	VOID
	);

Calling server function IPersistMessage::GetLastError(
	VOID
	);

Calling server function IMAPIViewContextIdl::GetViewStatus(
	VOID
	);

Calling server function IMAPIViewContextIdl::GetLastError(
	VOID
	);

Calling server function IMAPIViewContextIdl::GetSaveStream(
	VOID
	);

Calling server function IMAPIViewContextIdl::GetPrintSetup(
	VOID
	);

Calling server function IMAPIViewContextIdl::ActivateNext(
	VOID
	);

Calling server function IMAPIViewContextIdl::SetAdviseSink(
	VOID
	);

Calling server function IMAPIViewAdviseSinkIdl::OnSubmitted(
	VOID
	);

Calling server function IMAPIViewAdviseSinkIdl::OnSaved(
	VOID
	);

Calling server function IMAPIViewAdviseSinkIdl::OnPrint(
	VOID
	);

Calling server function IMAPIViewAdviseSinkIdl::OnNewMessage(
	VOID
	);

Calling server function IMAPIViewAdviseSinkIdl::OnShutdown(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::GetSiteStatus(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::GetLastError(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::SubmitMessage(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::SaveMessage(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::MoveMessage(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::DeleteMessage(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::CopyMessage(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::NewMessage(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::GetMessage(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::GetFormManager(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::GetFolder(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::GetStore(
	VOID
	);

Calling server function IMAPIMessageSiteIdl::GetSession(
	VOID
	);

Calling server function IMAPIFormMgr::IsInConflict(
	VOID
	);

Calling server function IMAPIFormMgr::GetLastError(
	VOID
	);

Calling server function IMAPIFormMgr::PrepareForm(
	VOID
	);

Calling server function IMAPIFormMgr::OpenFormContainer(
	VOID
	);

Calling server function IMAPIFormMgr::SelectMultipleForms(
	VOID
	);

Calling server function IMAPIFormMgr::SelectFormContainer(
	VOID
	);

Calling server function IMAPIFormMgr::SelectForm(
	VOID
	);

Calling server function IMAPIFormMgr::CreateForm(
	VOID
	);

Calling server function IMAPIFormMgr::ResolveMultipleMessageClasses(
	VOID
	);

Calling server function IMAPIFormMgr::CalcFormPropSet(
	VOID
	);

Calling server function IMAPIFormMgr::ResolveMessageClass(
	VOID
	);

Calling server function IMAPIFormMgr::LoadForm(
	VOID
	);

Calling server function IMAPIProp::GetNamesFromIDs(
	VOID
	);

Calling server function IMAPIProp::GetIDsFromNames(
	VOID
	);

Calling server function IMAPIProp::CopyProps(
	VOID
	);

Calling server function IMAPIProp::CopyTo(
	VOID
	);

Calling server function IMAPIProp::SetProps(
	VOID
	);

Calling server function IMAPIProp::DeleteProps(
	VOID
	);

Calling server function IMAPIProp::OpenProperty(
	VOID
	);

Calling server function IMAPIProp::GetPropList(
	VOID
	);

Calling server function IMAPIProp::SaveChanges(
	VOID
	);

Calling server function IMAPIProp::GetProps(
	VOID
	);

Calling server function IMAPIProp::GetLastError(
	VOID
	);

Calling server function IMAPIFormInfo::OpenFormContainer(
	VOID
	);

Calling server function IMAPIFormInfo::MakeIconFromBinary(
	VOID
	);

Calling server function IMAPIFormInfo::SaveForm(
	VOID
	);

Calling server function IMAPIFormInfo::CalcVerbSet(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::GetIDsFromNames(
	VOID
	);

Calling server function IMAPIFormInfo::CalcFormPropSet(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIMAPIFormInfoIdl::SaveChanges(
	VOID
	);

Calling server function IMAPIFormFactory::LockServer(
	VOID
	);

Calling server function IMAPIFormFactory::GetLastError(
	VOID
	);

Calling server function IMAPIFormContainer::GetLastError(
	VOID
	);

Calling server function IMAPIFormFactory::CreateClassFactory(
	VOID
	);

Calling server function IMAPIFormContainer::GetDisplay(
	VOID
	);

Calling server function IMAPIFormContainer::CalcFormPropSet(
	VOID
	);

Calling server function IMAPIFormContainer::ResolveMessageClass(
	VOID
	);

Calling server function IMAPIFormContainer::ResolveMultipleMessageClasses(
	VOID
	);

Calling server function IMAPIFormContainer::RemoveForm(
	VOID
	);

Calling server function IMAPIFormContainer::InstallForm(
	VOID
	);

Calling server function IMAPIFormAdviseSinkIdl::OnChange(
	VOID
	);

Calling server function IMAPIFormAdviseSinkIdl::OnActivateNext(
	VOID
	);

Calling server function IMAPIForm::GetLastError(
	VOID
	);

Calling server function IMAPIForm::Unadvise(
	VOID
	);

Calling server function IMAPIForm::Advise(
	VOID
	);

Calling server function IMAPIForm::ShutdownForm(
	VOID
	);

Calling server function IMAPIForm::DoVerb(
	VOID
	);

Calling server function IMAPIForm::GetViewContext(
	VOID
	);

Calling server function IMAPIForm::SetViewContext(
	VOID
	);

Calling server function IProxyStoreObject::UnwrapNoRef(
	VOID
	);

Calling server function IProxyStoreObject::Placeholder2(
	VOID
	);

Calling server function IProxyStoreObject::Placeholder1(
	VOID
	);

Calling server function IPropData::HrAddObjProps(
	VOID
	);

Calling server function IPropData::HrGetPropAccess(
	VOID
	);

Calling server function IPropData::HrSetObjAccess(
	VOID
	);

Calling server function IPropData::HrSetPropAccess(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::SaveChanges(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIPropDataIdl::GetLastError(
	VOID
	);

Calling server function IXPLogon::ValidateState(
	VOID
	);

Calling server function IXPLogon::FlushQueues(
	VOID
	);

Calling server function IXPLogon::OpenStatusEntry(
	VOID
	);

Calling server function IXPLogon::StartMessage(
	VOID
	);

Calling server function IXPLogon::EndMessage(
	VOID
	);

Calling server function IXPLogon::Poll(
	VOID
	);

Calling server function IXPLogon::SubmitMessage(
	VOID
	);

Calling server function IXPLogon::TransportLogoff(
	VOID
	);

Calling server function IXPLogon::TransportNotify(
	VOID
	);

Calling server function IXPLogon::Idle(
	VOID
	);

Calling server function IXPLogon::RegisterOptions(
	VOID
	);

Calling server function IXPLogon::AddressTypes(
	VOID
	);

Calling server function IMSLogon::Unadvise(
	VOID
	);

Calling server function IMSLogon::OpenStatusEntry(
	VOID
	);

Calling server function IMSLogon::Advise(
	VOID
	);

Calling server function IMSLogon::CompareEntryIDs(
	VOID
	);

Calling server function IMSLogon::Logoff(
	VOID
	);

Calling server function IMSLogon::OpenEntry(
	VOID
	);

Calling server function IMSLogon::GetLastError(
	VOID
	);

Calling server function IMAPISyncProgressCallback::Done(
	VOID
	);

Calling server function IMAPISyncProgressCallback::Progress(
	VOID
	);

Calling server function IMAPISyncProgressCallback::Error(
	VOID
	);

Calling server function IMAPISecureMessage::GetBaseMessage(
	VOID
	);

Calling server function IMAPIProgressIdl::SetLimits(
	VOID
	);

Calling server function IMAPIProgressIdl::GetMax(
	VOID
	);

Calling server function IMAPIProgressIdl::GetMin(
	VOID
	);

Calling server function IMAPIProgressIdl::GetFlags(
	VOID
	);

Calling server function IMAPIProgressIdl::Progress(
	VOID
	);

Calling server function IMAPIProviderShutdown::DoFastShutdown(
	VOID
	);

Calling server function IMAPIProviderShutdown::QueryFastShutdown(
	VOID
	);

Calling server function IMAPIProviderShutdown::NotifyProcessShutdown(
	VOID
	);

Calling server function IMAPIGetSession::GetMAPISession(
	VOID
	);

Calling server function IMAPIClientShutdown::DoFastShutdown(
	VOID
	);

Calling server function IMAPIClientShutdown::NotifyProcessShutdown(
	VOID
	);

Calling server function IMAPIAdviseSinkIdl::OnNotify(
	VOID
	);

Calling server function IMAPIClientShutdown::QueryFastShutdown(
	VOID
	);

Calling server function IMAPIStatus::FlushQueues(
	VOID
	);

Calling server function IMAPIStatus::SettingsDialog(
	VOID
	);

Calling server function IMAPIStatus::ChangePassword(
	VOID
	);

Calling server function IMAPIStatus::ValidateState(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::SaveChanges(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIStatusIdl::GetLastError(
	VOID
	);

Calling server function IMAPIContainer::SetSearchCriteria(
	VOID
	);

Calling server function IMAPIContainer::GetSearchCriteria(
	VOID
	);

Calling server function IMAPIContainer::OpenEntry(
	VOID
	);

Calling server function IMAPIContainer::GetHierarchyTable(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::GetIDsFromNames(
	VOID
	);

Calling server function IMAPIContainer::GetContentsTable(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIMAPIContainerIdl::SaveChanges(
	VOID
	);

Calling server function IDistList::ResolveNames(
	VOID
	);

Calling server function IDistList::CopyEntries(
	VOID
	);

Calling server function IDistList::DeleteEntries(
	VOID
	);

Calling server function IDistList::CreateEntry(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::SetSearchCriteria(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetSearchCriteria(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetHierarchyTable(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::OpenEntry(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetContentsTable(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIDistListIdl::SaveChanges(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::SaveChanges(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIMailUserIdl::GetLastError(
	VOID
	);

Calling server function IABLogon::GetOneOffTable(
	VOID
	);

Calling server function IABLogon::PrepareRecips(
	VOID
	);

Calling server function IABLogon::OpenTemplateID(
	VOID
	);

Calling server function IABLogon::OpenStatusEntry(
	VOID
	);

Calling server function IABLogon::Advise(
	VOID
	);

Calling server function IABLogon::Unadvise(
	VOID
	);

Calling server function IABLogon::CompareEntryIDs(
	VOID
	);

Calling server function IABLogon::OpenEntry(
	VOID
	);

Calling server function IABLogon::GetLastError(
	VOID
	);

Calling server function IABLogon::Logoff(
	VOID
	);

Calling server function IABContainer::DeleteEntries(
	VOID
	);

Calling server function IABContainer::ResolveNames(
	VOID
	);

Calling server function IABContainer::CopyEntries(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetSearchCriteria(
	VOID
	);

Calling server function IABContainer::CreateEntry(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::OpenEntry(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::SetSearchCriteria(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetContentsTable(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetHierarchyTable(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::SaveChanges(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIABContainerIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::SaveChanges(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIAttachIdl::GetLastError(
	VOID
	);

Calling server function IMessage::SubmitMessage(
	VOID
	);

Calling server function IMessage::SetReadFlag(
	VOID
	);

Calling server function IMessage::ModifyRecipients(
	VOID
	);

Calling server function IMessage::GetRecipientTable(
	VOID
	);

Calling server function IMessage::CreateAttach(
	VOID
	);

Calling server function IMessage::DeleteAttach(
	VOID
	);

Calling server function IMessage::OpenAttach(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::GetIDsFromNames(
	VOID
	);

Calling server function IMessage::GetAttachmentTable(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIMessageIdl::SaveChanges(
	VOID
	);

Calling server function IMAPIFolder::SaveContentsSort(
	VOID
	);

Calling server function IMAPIFolder::EmptyFolder(
	VOID
	);

Calling server function IMAPIFolder::SetMessageStatus(
	VOID
	);

Calling server function IMAPIFolder::GetMessageStatus(
	VOID
	);

Calling server function IMAPIFolder::DeleteFolder(
	VOID
	);

Calling server function IMAPIFolder::SetReadFlags(
	VOID
	);

Calling server function IMAPIFolder::CopyFolder(
	VOID
	);

Calling server function IMAPIFolder::CreateFolder(
	VOID
	);

Calling server function IMAPIFolder::CopyMessages(
	VOID
	);

Calling server function IMAPIFolder::DeleteMessages(
	VOID
	);

Calling server function IMAPIFolder::CreateMessage(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::SetSearchCriteria(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetSearchCriteria(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetHierarchyTable(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::OpenEntry(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetContentsTable(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIMAPIFolderIdl::SaveChanges(
	VOID
	);

Calling server function IMsgStore::NotifyNewMail(
	VOID
	);

Calling server function IMsgStore::FinishedMsg(
	VOID
	);

Calling server function IMsgStore::GetOutgoingQueue(
	VOID
	);

Calling server function IMsgStore::SetLockState(
	VOID
	);

Calling server function IMsgStore::AbortSubmit(
	VOID
	);

Calling server function IMsgStore::StoreLogoff(
	VOID
	);

Calling server function IMsgStore::GetReceiveFolder(
	VOID
	);

Calling server function IMsgStore::GetReceiveFolderTable(
	VOID
	);

Calling server function IMsgStore::SetReceiveFolder(
	VOID
	);

Calling server function IMsgStore::OpenEntry(
	VOID
	);

Calling server function IMsgStore::Unadvise(
	VOID
	);

Calling server function IMsgStore::CompareEntryIDs(
	VOID
	);

Calling server function IMsgStore::Advise(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::SaveChanges(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIMsgStoreIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::GetIDsFromNames(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIProfSectIdl::SaveChanges(
	VOID
	);

Calling server function IProviderAdmin::OpenProfileSection(
	VOID
	);

Calling server function IProviderAdmin::DeleteProvider(
	VOID
	);

Calling server function IProviderAdmin::GetProviderTable(
	VOID
	);

Calling server function IProviderAdmin::CreateProvider(
	VOID
	);

Calling server function IProviderAdmin::GetLastError(
	VOID
	);

Calling server function ITnef::FinishComponent(
	VOID
	);

Calling server function ITnef::SetProps(
	VOID
	);

Calling server function ITnef::EncodeRecips(
	VOID
	);

Calling server function ITnef::OpenTaggedBody(
	VOID
	);

Calling server function ITnef::Finish(
	VOID
	);

Calling server function ITnef::AddProps(
	VOID
	);

Calling server function ITnef::ExtractProps(
	VOID
	);

Calling server function ITableData::HrDeleteRows(
	VOID
	);

Calling server function ITableData::HrModifyRows(
	VOID
	);

Calling server function ITableData::HrNotify(
	VOID
	);

Calling server function ITableData::HrInsertRow(
	VOID
	);

Calling server function ITableData::HrEnumRow(
	VOID
	);

Calling server function ITableData::HrQueryRow(
	VOID
	);

Calling server function ITableData::HrModifyRow(
	VOID
	);

Calling server function ITableData::HrDeleteRow(
	VOID
	);

Calling server function ITableData::HrGetView(
	VOID
	);

Calling server function IMAPITable::SetCollapseState(
	VOID
	);

Calling server function IMAPITable::WaitForCompletion(
	VOID
	);

Calling server function IMAPITable::GetCollapseState(
	VOID
	);

Calling server function IMAPITable::CollapseRow(
	VOID
	);

Calling server function IMAPITable::ExpandRow(
	VOID
	);

Calling server function IMAPITable::QueryRows(
	VOID
	);

Calling server function IMAPITable::Abort(
	VOID
	);

Calling server function IMAPITable::QuerySortOrder(
	VOID
	);

Calling server function IMAPITable::SortTable(
	VOID
	);

Calling server function IMAPITable::CreateBookmark(
	VOID
	);

Calling server function IMAPITable::FreeBookmark(
	VOID
	);

Calling server function IMAPITable::Restrict(
	VOID
	);

Calling server function IMAPITable::FindRow(
	VOID
	);

Calling server function IMAPITable::SeekRowApprox(
	VOID
	);

Calling server function IMAPITable::QueryPosition(
	VOID
	);

Calling server function IMAPITable::SeekRow(
	VOID
	);

Calling server function IMAPITable::GetRowCount(
	VOID
	);

Calling server function IMAPITable::SetColumns(
	VOID
	);

Calling server function IMAPITable::QueryColumns(
	VOID
	);

Calling server function IMAPITable::GetStatus(
	VOID
	);

Calling server function IMAPITable::Unadvise(
	VOID
	);

Calling server function IMAPITable::GetLastError(
	VOID
	);

Calling server function IMAPITable::Advise(
	VOID
	);

Calling server function IMsgServiceAdmin::SetPrimaryIdentity(
	VOID
	);

Calling server function IMsgServiceAdmin::GetProviderTable(
	VOID
	);

Calling server function IMsgServiceAdmin::MsgServiceTransportOrder(
	VOID
	);

Calling server function IMsgServiceAdmin::AdminProviders(
	VOID
	);

Calling server function IMsgServiceAdmin::ConfigureMsgService(
	VOID
	);

Calling server function IMsgServiceAdmin::OpenProfileSection(
	VOID
	);

Calling server function IMsgServiceAdmin::CopyMsgService(
	VOID
	);

Calling server function IMsgServiceAdmin::RenameMsgService(
	VOID
	);

Calling server function IMsgServiceAdmin::CreateMsgService(
	VOID
	);

Calling server function IMsgServiceAdmin::DeleteMsgService(
	VOID
	);

Calling server function IMsgServiceAdmin::GetLastError(
	VOID
	);

Calling server function IMsgServiceAdmin::GetMsgServiceTable(
	VOID
	);

Calling server function IMsgServiceAdmin2::CreateMsgServiceEx(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::SetPrimaryIdentity(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::GetProviderTable(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::MsgServiceTransportOrder(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::AdminProviders(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::ConfigureMsgService(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::OpenProfileSection(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::CopyMsgService(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::RenameMsgService(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::CreateMsgService(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::DeleteMsgService(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIMsgServiceAdmin2Idl::GetMsgServiceTable(
	VOID
	);

Calling server function IProfAdmin::AdminServices(
	VOID
	);

Calling server function IProfAdmin::RenameProfile(
	VOID
	);

Calling server function IProfAdmin::SetDefaultProfile(
	VOID
	);

Calling server function IProfAdmin::CopyProfile(
	VOID
	);

Calling server function IProfAdmin::ChangeProfilePassword(
	VOID
	);

Calling server function IProfAdmin::CreateProfile(
	VOID
	);

Calling server function IProfAdmin::DeleteProfile(
	VOID
	);

Calling server function IProfAdmin::GetProfileTable(
	VOID
	);

Calling server function IProfAdmin::GetLastError(
	VOID
	);

Calling server function IExchangeModifyTable::GetTable(
	VOID
	);

Calling server function IExchangeModifyTable::ModifyTable(
	VOID
	);

Calling server function IExchangeModifyTable::GetLastError(
	VOID
	);

Calling server function IAttachmentSecurity::IsAttachmentBlocked(
	VOID
	);

Calling server function IAddrBook::PrepareRecips(
	VOID
	);

Calling server function IAddrBook::GetSearchPath(
	VOID
	);

Calling server function IAddrBook::SetSearchPath(
	VOID
	);

Calling server function IAddrBook::SetDefaultDir(
	VOID
	);

Calling server function IAddrBook::GetDefaultDir(
	VOID
	);

Calling server function IAddrBook::GetPAB(
	VOID
	);

Calling server function IAddrBook::SetPAB(
	VOID
	);

Calling server function IAddrBook::QueryDefaultRecipOpt(
	VOID
	);

Calling server function IAddrBook::RecipOptions(
	VOID
	);

Calling server function IAddrBook::Address(
	VOID
	);

Calling server function IAddrBook::Details(
	VOID
	);

Calling server function IAddrBook::ResolveName(
	VOID
	);

Calling server function IAddrBook::NewEntry(
	VOID
	);

Calling server function IAddrBook::Unadvise(
	VOID
	);

Calling server function IAddrBook::CreateOneOff(
	VOID
	);

Calling server function IAddrBook::Advise(
	VOID
	);

Calling server function IAddrBook::CompareEntryIDs(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::GetIDsFromNames(
	VOID
	);

Calling server function IAddrBook::OpenEntry(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::CopyProps(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::GetNamesFromIDs(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::DeleteProps(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::CopyTo(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::OpenProperty(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::SetProps(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::GetProps(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::GetPropList(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::GetLastError(
	VOID
	);

Calling parent function in MMGAServerIAddrBookIdl::SaveChanges(
	VOID
	);

Calling server function IMAPISession::ShowForm(
	VOID
	);

Calling server function IMAPISession::PrepareForm(
	VOID
	);

Calling server function IMAPISession::AdminServices(
	VOID
	);

Calling server function IMAPISession::SetDefaultStore(
	VOID
	);

Calling server function IMAPISession::QueryIdentity(
	VOID
	);

Calling server function IMAPISession::Logoff(
	VOID
	);

Calling server function IMAPISession::EnumAdrTypes(
	VOID
	);

Calling server function IMAPISession::QueryDefaultMessageOpt(
	VOID
	);

Calling server function IMAPISession::Unadvise(
	VOID
	);

Calling server function IMAPISession::MessageOptions(
	VOID
	);

Calling server function IMAPISession::Advise(
	VOID
	);

Calling server function IMAPISession::CompareEntryIDs(
	VOID
	);

Calling server function IMAPISession::GetStatusTable(
	VOID
	);

Calling server function IMAPISession::OpenEntry(
	VOID
	);

Calling server function IMAPISession::OpenProfileSection(
	VOID
	);

Calling server function IMAPISession::OpenAddressBook(
	VOID
	);

Calling server function IMAPISession::GetMsgStoresTable(
	VOID
	);

Calling server function IMAPISession::OpenMsgStore(
	VOID
	);

Calling server function IMAPISession::GetLastError(
	VOID
	);

Calling server function ISequentialStream::Read(
	VOID
	);

Calling server function ISequentialStream::Write(
	VOID
	);

Calling server function IStream::UnlockRegion(
	VOID
	);

Calling server function IStream::SetSize(
	VOID
	);

Calling server function IStream::Stat(
	VOID
	);

Calling server function IStream::Seek(
	VOID
	);

Calling server function IStream::Revert(
	VOID
	);

Calling server function IStream::CopyTo(
	VOID
	);

Calling server function IStream::LockRegion(
	VOID
	);

Calling server function IStream::Commit(
	VOID
	);

Calling parent function in MMGAServerIStreamIdl::Write(
	VOID
	);

Calling server function IStream::Clone(
	VOID
	);

Calling parent function in MMGAServerIStreamIdl::Read(
	VOID
	);

Failed to load function(
	ANSISTRING apiName
	);

Failed to load library(
	VOID
	);

