ProviderNames:
	Microsoft.Windows.Security.NGC.NgcCtnrSvc



**** Events *****
ActivityStoppedAutomatically(
	VOID
	);

GetKeyProperty(
	INT32 retVal
	);

NgcUtils::ConvertMultiStringToStringVector(
	INT32 retVal
	);

EnumerateKeys(
	INT32 retVal
	);

SetSCardReaderName(
	INT32 retVal
	);

EmptyOwnerSidNotSupported(
	INT32 retVal
	);

ContainerNotReadyForVsc(
	INT32 retVal,
	GUID containerId
	);

CreateNgcContainerNode(
	INT32 retVal
	);

GidsHandlerSecurityCallbackAccessDenied(
	VOID
	);

CheckTokenMembership(
	UINT32 retVal
	);

ConvertStringSidToSid(
	UINT32 retVal
	);

AllocateResponseData(
	INT32 retVal
	);

GidsHandler.SendReceiveData(
	UINT8 SW1,
	UINT8 SW2,
	BINARY CommandHeader
	);

GidsHandlerNoRecordOfContainer(
	INT32 retVal
	);

NgcUtils::CoInitializer::Initialize(
	INT32 retVal
	);

GidsHandler.SendReceiveData(
	UINT8 SW1,
	UINT8 SW2,
	BINARY CommandHeader
	);

AllocateAtr(
	INT32 retVal
	);

GidsHandler.AcquireChannel(
	INT32 retVal
	);

GidsHandler.AcquireChannel(
	INT32 retVal
	);

CreateNgcContainerNode(
	INT32 retVal
	);

GidsContainerInitializationNotRequired(
	INT32 retVal
	);

DeleteNgcContainerNode(
	INT32 retVal
	);

RefreshNgcContainerNode(
	INT32 retVal
	);

AllocateRpcInterfaceTemplates(
	INT32 retVal
	);

CreateGidsHelperSecurityDescriptorFailure(
	INT32 retVal
	);

KeyUsageInvalid(
	INT32 retVal,
	UINT32 keyUsage
	);

GetSCardKeyContainerName(
	INT32 retVal
	);

KeySizeInvalid(
	INT32 retVal,
	UINT32 keySize
	);

KeyNotFound(
	INT32 retVal,
	GUID containerId,
	UINT8 keyIndex
	);

KeyIndexSizeMismatch(
	INT32 retVal,
	UINT32 keyIndexByteCount
	);

NgcUtils::NgcContainerKeyName::ParseKeyNameString(
	INT32 retVal
	);

GetKeyCertificateNoKey(
	INT32 retVal
	);

InvalidKeyUsage(
	INT32 retVal
	);

GetGidsLogicalDataInfoFromTagsAllocCompressCert(
	INT32 retVal
	);

GetGidsLogicalDataInfoFromTagsUuidToString(
	INT32 retVal
	);

EncodeDataObject(
	INT32 retVal
	);

CommitingTransaction(
	UINT32 retVal
	);

EncodingFCP(
	UINT16 retVal
	);

NoFCPFound(
	INT32 retVal
	);

DecodingDFFCP(
	UINT32 retVal
	);

NoEFFound(
	INT32 retVal
	);

SecurityAccessUnsatisfied(
	INT32 retVal
	);

EFAlreadyExists(
	INT32 retVal
	);

EncodingDataObjectTag(
	UINT16 retVal
	);

EncodingDataObject(
	UINT16 retVal
	);

DecodingDataObject(
	UINT32 retVal
	);

DecodingEFFCP(
	UINT32 retVal
	);

SecurityAccessUnsatisfied(
	UINT16 retVal
	);

DataObjectNotFound(
	UINT16 retVal
	);

NoDataObjectsFound(
	UINT16 retVal
	);

NoLifeCycleStatus(
	UINT16 retVal
	);

RemovingDirectory(
	UINT32 retVal
	);

DeletingFile(
	UINT32 retVal
	);

ReadingFile(
	UINT32 retVal
	);

FileTooLarge(
	UINT32 retVal
	);

GettingFileSize(
	UINT32 retVal
	);

OpeningFile(
	UINT32 retVal
	);

WritingFile(
	UINT32 retVal
	);

CreatingFile(
	UINT32 retVal
	);

SettingDirectoryAttributes(
	UINT32 retVal
	);

CreatingDirectory(
	UINT32 retVal
	);

CreatingFilesystemTransaction(
	UINT32 retVal
	);

CommitingTransaction(
	UINT16 retVal
	);

FileExists(
	UINT16 retVal
	);

EF not selected(
	UINT16 retVal
	);

DFAlreadyExists(
	INT32 retVal
	);

PropertyDataNotValidString(
	INT32 retVal
	);

ParseNgcKeyNameAccountId(
	INT32 retVal
	);

ParseNgcContainerKeyNameAccountIdMissing(
	INT32 retVal
	);

ParseNgcContainerKeyNameTenantWithNoDomain(
	INT32 retVal
	);

ParseNgcContainerKeyNameTenant(
	INT32 retVal
	);

ParseNgcContainerKeyNameDomain(
	INT32 retVal
	);

ParseNgcContainerKeyNameStringInvalidLength(
	INT32 retVal
	);

RpcRevertToSelfEx(
	INT32 retVal
	);

RpcImpersonateClient(
	INT32 retVal
	);

InvalidSerializationPinPolicyLengthOverrun(
	INT32 retVal
	);

InvalidSerializationInvalidPinPolicyOffset(
	INT32 retVal
	);

InvalidSerializationArithmeticOverflow(
	INT32 retVal
	);

InvalidSerializationTooSmall(
	INT32 retVal
	);

NgcPolicyAlreadyInitialized(
	INT32 retVal
	);

NgcPolicyValidationFailedInvalidAttestationPolicy(
	INT32 retVal
	);

NgcPolicyValidationFailedInvalidSmartCardPolicy(
	INT32 retVal
	);

NgcPolicyValidationFailedInvalidbiometricsPolicy(
	INT32 retVal
	);

NgcPolicyValidationFailedInvalidVersion(
	INT32 retVal
	);

ConversionFromSmartCardPolicyOptionFailedInvalidValue(
	INT32 retVal
	);

InvalidPinPolicySerializationUnsupportedVersion(
	INT32 retVal
	);

InvalidPinPolicySerializationWrongSizeV3(
	INT32 retVal
	);

InvalidPinPolicySerializationWrongSizeV2(
	INT32 retVal
	);

InvalidPinPolicySerializationWrongSizeV1(
	INT32 retVal
	);

InvalidPinPolicySerializationTooSmall(
	INT32 retVal
	);

PinPolicyRulesAlreadyInitialized(
	INT32 retVal
	);

ValidationFailedInvalidExpiration(
	INT32 retVal
	);

ValidationFailedInvalidPinHistoryCount(
	INT32 retVal
	);

ValidationFailedAllCharacterClassesDisallowed(
	INT32 retVal
	);

ValidationFailedInvalidCharacterPolicyOption(
	INT32 retVal
	);

ValidationFailedInvalidMinOrMaxLength(
	INT32 retVal
	);

InvalidPinPolicySerializationVersion(
	INT32 retVal
	);

InvalidOtherCharactersPolicyOption(
	INT32 retVal
	);

InvalidSpecialCharactersPolicyOption(
	INT32 retVal
	);

InvalidDigitsPolicyOption(
	INT32 retVal
	);

InvalidLowercaseCharacterPolicyOption(
	INT32 retVal
	);

InvalidUppercaseCharacterPolicyOption(
	INT32 retVal
	);

