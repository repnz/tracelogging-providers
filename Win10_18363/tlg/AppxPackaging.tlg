ProviderNames:
	Microsoft.Windows.AppxPackaging
	Microsoft.Windows.AppxPackaging.PerfLogger
	Microsoft.Windows.AppxDeploymentFallback



**** Events *****
FallbackError(
	UINT64 PartA_PrivTags,
	NTSTATUS wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage
	);

FallbackError(
	UINT64 PartA_PrivTags,
	SIGNED wilResult,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

Failure(
	HEXINT32 HResult,
	ANSISTRING File,
	UINT32 LineNumber,
	ANSISTRING Function,
	UNICODESTRING Message,
	ANSISTRING CallingContext,
	ANSISTRING Module,
	HEXINT64 Site,
	ANSISTRING Code
	);

ActivityStoppedAutomatically(
	VOID
	);

CopyTo(
	UNICODESTRING streamName,
	UINT64 totalBytes
	);

WriteTotal(
	UNICODESTRING streamName,
	UINT64 totalBytes,
	UINT64 count,
	DOUBLE average
	);

ReadTotal(
	UNICODESTRING streamName,
	UINT64 totalBytes,
	UINT64 count,
	DOUBLE average,
	UINT64 minReadPos,
	UINT64 maxReadPos,
	DOUBLE density
	);

CurrentMemory(
	UINT64 workingSet,
	UINT64 peakWorkingSet,
	UINT64 pagefileUsage,
	UINT64 peakPagefileUsage,
	UINT64 privateUsage
	);

Commit(
	UNICODESTRING streamName
	);

ActivityIntermediateStop(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

ActivityError(
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

AppendEncryptedDeltaAndUpdatedBlockMapToPackage(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

AppendEncryptedDeltaAndUpdatedBlockMapToPackage(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

AppendEncryptedDeltaAndUpdatedBlockMapToPackage(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

AppendDeltaAndUpdatedBlockMapToPackage(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

AppendDeltaAndUpdatedBlockMapToPackage(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

AppendDeltaAndUpdatedBlockMapToPackage(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

CreateDeltaExtractPayloadFilesDelta(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId
	);

CreateDeltaExtractPayloadFilesDelta(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

CreateDeltaExtractPayloadFilesDelta(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

TrackedOp(
	UINT64 PartA_PrivTags,
	NOPRINT wilActivity,
	UINT32 threadId,
	UNICODESTRING opName
	);

TrackedOp(
	UINT64 PartA_PrivTags,
	STRING wilActivity,
	UINT32 hresult,
	UINT32 threadId
	);

TrackedOp(
	UINT64 PartA_PrivTags,
	UINT64 PartA_PrivTags,
	SIGNED wilActivity,
	UINT32 hresult,
	ANSISTRING fileName,
	UINT32 lineNumber,
	ANSISTRING module,
	UINT32 failureType,
	UNICODESTRING message,
	UINT32 threadId,
	ANSISTRING callContext,
	UINT32 originatingContextId,
	ANSISTRING originatingContextName,
	UNICODESTRING originatingContextMessage,
	UINT32 currentContextId,
	ANSISTRING currentContextName,
	UNICODESTRING currentContextMessage,
	UINT32 failureId,
	UINT32 failureCount,
	ANSISTRING function
	);

FlatBundle(
	UNICODESTRING PackageFullName
	);

BlockmapValidationFailure(
	UNICODESTRING fileName,
	BOOLEAN encrypted,
	UINT32 headBlock,
	UINT32 tailBlock,
	UINT32 invalidBlock,
	UINT32 totalBlocks
	);

Failure(
	UNICODESTRING File,
	UNICODESTRING Function,
	UNICODESTRING Failing operation,
	HEXINT32 HResult,
	UNICODESTRING Message
	);

GetAppXLogMessageFromDataFailure(
	HRESULT result
	);

